*------------------------------------------------------------*
* Training Log
Date:                December 11, 2017
Time:                19:44:06
*------------------------------------------------------------*
14715  proc freq data=EMWS1.GrfExpl_VariableSet noprint;
14716  table ROLE*LEVEL/out=WORK.GrfExplMETA;
14717  run;

NOTE: There were 98 observations read from the data set EMWS1.GRFEXPL_VARIABLESET.
NOTE: The data set WORK.GRFEXPLMETA has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.15 seconds
      cpu time            0.00 seconds
      

14718  proc print data=WORK.GrfExplMETA label noobs;
14719  var ROLE LEVEL COUNT;
14720  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14721  title9 ' ';
14722  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14723  run;

NOTE: There were 7 observations read from the data set WORK.GRFEXPLMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

14724  title10;

14725  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15085  *------------------------------------------------------------*;
15086  * GrfExpl: Generation of macros and macro variables;
15087  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15088  *------------------------------------------------------------*;

15089  %let EMEXCEPTIONSTRING=;
15090  *------------------------------------------------------------*;
15091  * TRAIN: GrfExpl;
15092  *------------------------------------------------------------*;
15093  %let EM_ACTION = TRAIN;
15094  %let syscc = 0;
15095  %macro main;
15096     filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
15097     %include temp;
15098     filename temp;
15099  
15100     %SetProperties;
15101  
15102     %if %upcase(&EM_ACTION) = CREATE %then %do;
15103  
15104         filename temp catalog 'sashelp.emexpl.graphexplore_create.source';
15105         %include temp;
15106         filename temp;
15107         %create;
15108     %end;
15109     %else
15110     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15111  
15112         filename temp catalog 'sashelp.emexpl.graphexplore_train.source';
15113         %include temp;
15114         filename temp;
15115         %train;
15116  
15117     %end;
15118     %else
15119     %if %upcase(&EM_ACTION) = REPORT %then %do;
15120  
15121         filename temp catalog 'sashelp.emexpl.graphexplore_report.source';
15122         %include temp;
15123         filename temp;
15124  
15125         %report;
15126     %end;
15127  
15128  %mend main;
15129  
15130  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_MACROS.SOURCE.
15131 +%macro SetProperties;
15132 +   %em_checkmacro(name=EM_PROPERTY_INTERVALBYTARGET,      global=Y, value=Y);
15133 +   %em_checkmacro(name=EM_PROPERTY_CLASSBYTARGET,         global=Y, value=Y);
15134 +   %em_checkmacro(name=EM_PROPERTY_DATASOURCE,            global=Y, value=SAMPLE);
15135 +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLEMETHOD,        global=Y, value=FIRSTN);
15136 +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLESIZE,          global=Y, value=DEFAULT);
15137 +   %em_checkmacro(name=EM_PROPERTY_EMRANDOMSEED,          global=Y, value=12345);
15138 +
15139 +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_TRAIN.SOURCE.
15140 +%macro train;
15141 +
15142 +    %let graphData = &em_import_data;
15143 +    %if "&graphData" eq "" %then
15144 +        %let graphData = &em_import_transaction;
15145 +    %if "&graphData" eq "" %then
15146 +        %let graphData = &em_import_document;
15147 +    %if "&graphData" eq "" %then
15148 +        %let graphData = &em_import_validate;
15149 +    %if "&graphData" eq "" %then
15150 +        %let graphData = &em_import_test;
15151 +    %if "&graphData" eq "" %then
15152 +        %let graphData = &em_import_score;
15153 +
15154 +    %if "&graphData" eq "" %then %do;
15155 +        %let emexceptionString = exception.server.IMPORT.NODATA;
15156 +        %goto doendm;
15157 +    %end;
15158 +
15159 +    %em_getname(key=SAMPLE_DATA, type=DATA);
15160 +
15161 +    filename vartemp catalog 'sashelp.emutil.em_varmacro.source';
15162 +    %include vartemp;
15163 +    filename vartemp;
15164 +
15165 +    data tempVariableSet;
15166 +       set &em_data_variableset;
15167 +       where (ROLE = 'REJECTED' and USE='Y') or ROLE='FREQ' or ( ROLE ne 'REJECTED' and USE in('Y', 'D'));
15168 +       if _N_< 950 or (ROLE = 'TARGET' and USE in('Y', 'D')) or ROLE='FREQ' then output;
15169 +    run;
15170 +    %em_varMacro(name=varSample, metadata=tempVariableSet, where=, key=NAME, nummacro=numVarSample);
15171 +
15172 +
15173 +     %exploreSample(DATA=&graphData, OUTPUT=&EM_USER_SAMPLE_DATA, METADATA=&EM_DATA_VARIABLESET, VARS=%varSample,
15174 +                      METHOD=&EM_PROPERTY_EMSAMPLEMETHOD, SIZE=&EM_PROPERTY_EMSAMPLESIZE,
15175 +                      ALPHA=, PVALUE=, SEED=&EM_PROPERTY_EMRANDOMSEED);
15176 +
15177 +    %doendm:
15178 +
15179 +%mend train;
15180 +
15181 +%train;
NOTE: %INCLUDE (level 2) file VARTEMP is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
15183 +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
15185 +   filename macFile catalog 'work.emutil.macro.source';
15186 +   %let _METAOBS = 0;
15187 +   %let _maxvar = &maxvar;
15188 +   %if "&_maxvar" eq "" %then %let maxvar = -1;
15190 +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
15191 +                   or (&metadata eq ) %then %do;
15192 +       %put * No metadata data set defined;
15193 +       %goto doend;
15194 +   %end;
15196 +   data _null_;
15197 +      length _STRING_ $80;
15198 +      retain _STRING_ '' maxvar 0;
15199 +      set &metadata end=eof;
15200 +      file macFile;
15201 +      %if %nrbquote(&where) ne %then %do;
15202 +          %let whereClause = where (%nrbquote(&where));
15203 +          %unquote(&whereClause);
15204 +      %end;
15205 +      if _N_=1 then do;
15206 +         string = "%"!!"macro &name;";
15207 +         put string;
15208 +      end;
15209 +      maxvar +1;
15210 +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
15211 +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
15212 +         if eof
15213 +            %if  %sysevalf(&_maxvar > 0) %then %do;
15214 +                or maxvar >= &maxvar
15215 +            %end;
15216 +            then do;
15217 +            put _STRING_;
15218 +            string = "%"!!"mend &name;";
15219 +            put string;
15220 +            string = strip(put(_N_, best.));
15221 +            call symput('_METAOBS', string);
15222 +            %if (&nummacro ne ) %then %do;
15223 +                put "%" "global &nummacro;";
15224 +                put "%" "let &nummacro = " string ";";
15225 +            %end;
15226 +            stop;
15227 +         end;
15228 +      end;
15229 +      else do;
15230 +         put _STRING_;
15231 +         _string_ = TRIM(&key);
15232 +         if eof
15233 +            %if  %sysevalf(&_maxvar > 0) %then %do;
15234 +              or maxvar >= &maxvar
15235 +           %end;
15236 +            then do;
15237 +            put _STRING_;
15238 +            string = "%"!!"mend &name;";
15239 +            put string;
15240 +        end;
15241 +      end;
15242 +      if eof
15243 +         %if  %sysevalf(&_maxvar > 0) %then %do;
15244 +             or maxvar >= &maxvar
15245 +         %end;
15246 +         then do;
15247 +         string = strip(put(_N_, best.));
15248 +         call symput('_METAOBS', string);
15249 +         %if (&nummacro ne ) %then %do;
15250 +             put "%" "global &nummacro;";
15251 +             put "%" "let &nummacro = " string ";";
15252 +         %end;
15253 +         stop;
15254 +      end;
15255 +   run;
15257 +   %doend:
15258 +   %if ^&_METAOBS %then %do;
15259 +       data _null_;
15260 +          file macFile;
15261 +          put "%" "macro &name;";
15262 +          put "%" "mend &name;";
15263 +          %if (&nummacro ne ) %then %do;
15264 +              put "%" "global &nummacro;";
15265 +              put "%" "let &nummacro = 0;";
15266 +          %end;
15267 +      run;
15268 +   %end;
15269 +   %inc macFile;
15270 +   filename macFile;
15271 +%mend em_varMacro;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
NOTE: Fileref VARTEMP has been deassigned.

NOTE: There were 93 observations read from the data set EMWS1.GRFEXPL_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (USE='Y')) or (ROLE='FREQ') or ((ROLE not = 'REJECTED') and USE in ('D', 'Y'));
NOTE: The data set WORK.TEMPVARIABLESET has 93 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.01 seconds
      


NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon, Dec 11, 2017 07:44:26 PM,
      Last Modified=Mon, Dec 11, 2017 07:44:26 PM,
      Filename=C:\Users\srajan4\AppData\Local\Temp\209\SAS Temporary Files\_TD11616_UPITSCTXSH013_\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_DSRV12

NOTE: 16 records were written to the file MACFILE.
      The minimum record length was 16.
      The maximum record length was 76.
NOTE: There were 93 observations read from the data set WORK.TEMPVARIABLESET.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 2) file MACFILE is file WORK.EMUTIL.MACRO.SOURCE.
15272 +%macro varSample;
15273 +ACTBUY BOTHPAYM BUYPROP CATALOGCNT CCPAYM CUST_ID DAYLAST DEPT01 DEPT02
15274 +DEPT03 DEPT04 DEPT05 DEPT06 DEPT07 DEPT08 DEPT09 DEPT10 DEPT11 DEPT12 DEPT13
15275 +DEPT14 DEPT15 DEPT16 DEPT17 DEPT18 DEPT19 DEPT20 DEPT21 DEPT22 DEPT23 DEPT24
15276 +DEPT25 DEPT26 DEPT27 DOLINDEA DOLINDET DOLL24 DOLLARQ01 DOLLARQ02 DOLLARQ03
15277 +DOLLARQ04 DOLLARQ05 DOLLARQ06 DOLLARQ07 DOLLARQ08 DOLLARQ09 DOLLARQ10
15278 +DOLLARQ11 DOLLARQ12 DOLLARQ13 DOLLARQ14 DOLLARQ15 DOLLARQ16 DOLLARQ17
15279 +DOLLARQ18 DOLLARQ19 DOLLARQ20 DOLLARQ21 DOLLARQ22 DOLNETDA DOLNETDT FREQPRCH
15280 +METHPAYM MONLAST ORDERSIZE PCPAYM RESPOND TENURE TOTORDQ01 TOTORDQ02
15281 +TOTORDQ03 TOTORDQ04 TOTORDQ05 TOTORDQ06 TOTORDQ07 TOTORDQ08 TOTORDQ09
15282 +TOTORDQ10 TOTORDQ11 TOTORDQ12 TOTORDQ13 TOTORDQ14 TOTORDQ15 TOTORDQ16
15283 +TOTORDQ17 TOTORDQ18 TOTORDQ19 TOTORDQ20 TOTORDQ21 TOTORDQ22 UNITSIDD
15284 +UNITSLAP UNTLANPO
15285 +%mend varSample;
15286 +%global numVarSample;
15287 +%let numVarSample = 93 ;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
NOTE: Fileref MACFILE has been deassigned.
NOTE: %INCLUDE (level 2) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
15288 +/*------------------------------------------------------------------
15289 +  MACRO EXPLOREOBS
15290 +
15291 +  SUPPORT:  SASDHD - David Duling
15292 +  PRODUCT:  Enterprise Miner
15293 +
15294 +  DESCRIPTION:
15295 +  Generates maximum and default numbers of observations to
15296 +  download for visualization depending on the record length.
15297 +
15298 +  Values were determined by trial and error using typical
15299 +  Windows workstation configurations.
15300 +
15301 +  Discrete sets of values are returned so that user experience
15302 +  will be consitent with similar sized data sets.
15303 +
15304 +  These macro variables are set:
15305 +  _exploreobs_max -- maximum number of obs downloadable
15306 +  _exploreobs_def -- default number of obs to be downloaded
15307 +  _exploreobs_recl - record length.  Might be useful for reporting.
15308 +
15309 +  Use the _exploreobs_max to set limit the GUI selection of
15310 +  observations for downloading.  The GUI selection for obs
15311 +  could be reduced to "Default" and "Max".
15312 +
15313 +  Parameters
15314 +  data=   libname.memname of input data
15315 +  vars=   subset list of variables.
15316 +          downloading 1 out of 500 really does work like downloading
15317 +          1 out of 1 vars.  Users may select a subset of vars for
15318 +                   visualizations.  Pass in the list as space delimited
15319 +          var names.  If vars is not specified, the record length
15320 +          of the entire data will be used.
15321 +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
15322 +
15323 +  Control
15324 +  Users may control the values by entering these macro variables.
15325 +            EM_EXPLOREOBS_MAX
15326 +            EM_EXPLOREOBS_DEFAULT
15327 +  These values override the computed values.
15328 +
15329 +  Debugging
15330 +  %let _exploreobs_debug=1 ;
15331 +--------------------------------------------------------------------
15332 +  HISTORY: 20APR2004. sasdhd. pushed.
15333 +           18DEC2004. sasdhd. S0280556.
15334 +           07SEP2007. sasdhd. HK1009586
15335 +--------------------------------------------------------------------*/
15336 +
15337 +%macro exploreobs(data=,vars=, nbytes=) ;
15338 +
15339 +   /*--- variable definitions ---*/
15340 +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
15341 +   %local xobs xvars xlen vlen xi vname vlist ;
15342 +   %local _exp_source _exp_notes ;
15343 +
15344 +   /*--- USER definitions ---*/
15345 +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
15346 +
15347 +   /*--- variable intializations ---*/
15348 +   %let _exploreobs_max=0 ;
15349 +   %let _exploreobs_def=0 ;
15350 +   %let _exploreobs_recl=0 ;
15351 +   %let xvars= 0 ;
15352 +   %let xlen = 0 ;
15353 +   %let xobs = 0 ;
15354 +
15355 +   /*--- data error checks ---*/
15356 +   %if "&data" eq "" %then %do ;
15357 +            %put NOTE: DATA is not specified. ;
15358 +            %goto term ;
15359 +      %end ;
15360 +
15361 +   %let dsid=%sysfunc(open(&data)) ;
15362 +   %if not &dsid %then %do ;
15363 +            %put NOTE: DATA &data is not available. ;
15364 +            %goto term ;
15365 +      %end ;
15366 +
15367 +   /*--- if a vars list exists generate a subset ---*/
15368 +   %if &vars ne %then %do ;
15369 +         %let dsid=%sysfunc(close(&dsid)) ;
15370 +         %if &_exploreobs_debug ne 1 %then %do ;
15371 +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
15372 +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
15373 +                  options nosource nonotes ;
15374 +         %end ;
15375 +         data _exploreobs_temp_data ;
15376 +         set &data(obs=0) ;
15377 +          keep &vars ;
15378 +         run;
15379 +         %if &_exploreobs_debug ne 1 %then %do ;
15380 +                  options &_exp_source &_exp_notes ;
15381 +         %end ;
15382 +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
15383 +         %if &dsid eq 0 %then %do ;
15384 +                  %put NOTE: Sample is not available.;
15385 +                  %goto term ;
15386 +            %end ;
15387 +      %end ;
15388 +
15389 +   /*--- get var attributes ---*/
15390 +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
15391 +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
15392 +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
15393 +   %let dsid= %sysfunc(close(&dsid)) ;
15394 +
15395 +   /*--- set default and max obs ---*/
15396 +   %let _exploreobs_recl=%eval(&xlen) ;
15397 +   %if &_exploreobs_recl eq 0 %then %do ;
15398 +             %let _exploreobs_max= 0 ;
15399 +             %let _exploreobs_def= 0 ;
15400 +             %goto term ;
15401 +
15402 +   %end ;
15403 +   %else
15404 +   %if &_exploreobs_recl le 32 %then %do ;
15405 +             %let _exploreobs_max=100000 ;
15406 +             %let _exploreobs_def= 10000 ;
15407 +   %end ;
15408 +   %else
15409 +   %if &_exploreobs_recl le 128 %then %do ;
15410 +             %let _exploreobs_max=60000 ;
15411 +             %let _exploreobs_def= 6000 ;
15412 +   %end ;
15413 +   %else
15414 +   %if &_exploreobs_recl lt 1000 %then %do ;
15415 +             %let _exploreobs_max=20000 ;
15416 +             %let _exploreobs_def= 2000 ;
15417 +   %end ;
15418 +   %else
15419 +   %if &_exploreobs_recl lt 5000 %then %do ;
15420 +             %let _exploreobs_max= 10000 ;
15421 +             %let _exploreobs_def=  1000 ;
15422 +   %end ;
15423 +   %else
15424 +   %if &_exploreobs_recl lt 20000 %then %do ;
15425 +             %let _exploreobs_max= 5000 ;
15426 +             %let _exploreobs_def=  500 ;
15427 +   %end ;
15428 +   %else %do ;
15429 +             %let _exploreobs_max= 1000 ;
15430 +             %let _exploreobs_def=  200 ;
15431 +   %end ;
15432 +
15433 +   /*--- Users options ---*/
15434 +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
15435 +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
15436 +   %end;
15437 +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
15438 +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
15439 +   %end;
15440 +
15441 +    /*--- S0868273 ---*/
15442 +    %if "&NBYTES" ne "" %then %do;
15443 +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
15444 +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
15445 +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
15446 +       %end;
15447 +
15448 +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
15449 +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
15450 +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
15451 +          %if ^&_exploreobs_def %then
15452 +              %let _exploreobs_def = 1;
15453 +
15454 +       %end;
15455 +    %end;
15456 +
15457 +   /*--- Terminate ---*/
15458 +   %term:
15459 +
15460 +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
15461 +%mend ;
15462 +
15463 +
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS1.Ids_DATA : vars= 93 : recl= 728 : max=20000 : def= 2000
PERFORMANCE  DETAILS
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*

NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           1:55.37
      cpu time            0.48 seconds
      
NOTE: There were 48356 observations read from the data set DATA.CATALOG2010.
NOTE: There were 2000 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set EMWS1.GRFEXPL_SAMPLE_DATA has 2000 observations and 93 variables.
NOTE: DATA statement used (Total process time):
      real time           1:56.75
      cpu time            0.48 seconds
      

NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file VARTEMP is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
15465 +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
15467 +   filename macFile catalog 'work.emutil.macro.source';
15468 +   %let _METAOBS = 0;
15469 +   %let _maxvar = &maxvar;
15470 +   %if "&_maxvar" eq "" %then %let maxvar = -1;
15472 +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
15473 +                   or (&metadata eq ) %then %do;
15474 +       %put * No metadata data set defined;
15475 +       %goto doend;
15476 +   %end;
15478 +   data _null_;
15479 +      length _STRING_ $80;
15480 +      retain _STRING_ '' maxvar 0;
15481 +      set &metadata end=eof;
15482 +      file macFile;
15483 +      %if %nrbquote(&where) ne %then %do;
15484 +          %let whereClause = where (%nrbquote(&where));
15485 +          %unquote(&whereClause);
15486 +      %end;
15487 +      if _N_=1 then do;
15488 +         string = "%"!!"macro &name;";
15489 +         put string;
15490 +      end;
15491 +      maxvar +1;
15492 +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
15493 +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
15494 +         if eof
15495 +            %if  %sysevalf(&_maxvar > 0) %then %do;
15496 +                or maxvar >= &maxvar
15497 +            %end;
15498 +            then do;
15499 +            put _STRING_;
15500 +            string = "%"!!"mend &name;";
15501 +            put string;
15502 +            string = strip(put(_N_, best.));
15503 +            call symput('_METAOBS', string);
15504 +            %if (&nummacro ne ) %then %do;
15505 +                put "%" "global &nummacro;";
15506 +                put "%" "let &nummacro = " string ";";
15507 +            %end;
15508 +            stop;
15509 +         end;
15510 +      end;
15511 +      else do;
15512 +         put _STRING_;
15513 +         _string_ = TRIM(&key);
15514 +         if eof
15515 +            %if  %sysevalf(&_maxvar > 0) %then %do;
15516 +              or maxvar >= &maxvar
15517 +           %end;
15518 +            then do;
15519 +            put _STRING_;
15520 +            string = "%"!!"mend &name;";
15521 +            put string;
15522 +        end;
15523 +      end;
15524 +      if eof
15525 +         %if  %sysevalf(&_maxvar > 0) %then %do;
15526 +             or maxvar >= &maxvar
15527 +         %end;
15528 +         then do;
15529 +         string = strip(put(_N_, best.));
15530 +         call symput('_METAOBS', string);
15531 +         %if (&nummacro ne ) %then %do;
15532 +             put "%" "global &nummacro;";
15533 +             put "%" "let &nummacro = " string ";";
15534 +         %end;
15535 +         stop;
15536 +      end;
15537 +   run;
15539 +   %doend:
15540 +   %if ^&_METAOBS %then %do;
15541 +       data _null_;
15542 +          file macFile;
15543 +          put "%" "macro &name;";
15544 +          put "%" "mend &name;";
15545 +          %if (&nummacro ne ) %then %do;
15546 +              put "%" "global &nummacro;";
15547 +              put "%" "let &nummacro = 0;";
15548 +          %end;
15549 +      run;
15550 +   %end;
15551 +   %inc macFile;
15552 +   filename macFile;
15553 +%mend em_varMacro;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref VARTEMP has been deassigned.

NOTE: There were 93 observations read from the data set EMWS1.GRFEXPL_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (USE='Y')) or (ROLE='FREQ') or ((ROLE not = 'REJECTED') and USE in ('D', 'Y'));
NOTE: The data set WORK.TEMPVARIABLESET has 93 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.01 seconds
      


NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Mon, Dec 11, 2017 07:44:26 PM,
      Last Modified=Mon, Dec 11, 2017 07:44:26 PM,
      Filename=C:\Users\srajan4\AppData\Local\Temp\209\SAS Temporary Files\_TD11616_UPITSCTXSH013_\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_DSRV12

NOTE: 16 records were written to the file MACFILE.
      The minimum record length was 16.
      The maximum record length was 76.
NOTE: There were 93 observations read from the data set WORK.TEMPVARIABLESET.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file MACFILE is file WORK.EMUTIL.MACRO.SOURCE.
15554 +%macro varSample;
15555 +ACTBUY BOTHPAYM BUYPROP CATALOGCNT CCPAYM CUST_ID DAYLAST DEPT01 DEPT02
15556 +DEPT03 DEPT04 DEPT05 DEPT06 DEPT07 DEPT08 DEPT09 DEPT10 DEPT11 DEPT12 DEPT13
15557 +DEPT14 DEPT15 DEPT16 DEPT17 DEPT18 DEPT19 DEPT20 DEPT21 DEPT22 DEPT23 DEPT24
15558 +DEPT25 DEPT26 DEPT27 DOLINDEA DOLINDET DOLL24 DOLLARQ01 DOLLARQ02 DOLLARQ03
15559 +DOLLARQ04 DOLLARQ05 DOLLARQ06 DOLLARQ07 DOLLARQ08 DOLLARQ09 DOLLARQ10
15560 +DOLLARQ11 DOLLARQ12 DOLLARQ13 DOLLARQ14 DOLLARQ15 DOLLARQ16 DOLLARQ17
15561 +DOLLARQ18 DOLLARQ19 DOLLARQ20 DOLLARQ21 DOLLARQ22 DOLNETDA DOLNETDT FREQPRCH
15562 +METHPAYM MONLAST ORDERSIZE PCPAYM RESPOND TENURE TOTORDQ01 TOTORDQ02
15563 +TOTORDQ03 TOTORDQ04 TOTORDQ05 TOTORDQ06 TOTORDQ07 TOTORDQ08 TOTORDQ09
15564 +TOTORDQ10 TOTORDQ11 TOTORDQ12 TOTORDQ13 TOTORDQ14 TOTORDQ15 TOTORDQ16
15565 +TOTORDQ17 TOTORDQ18 TOTORDQ19 TOTORDQ20 TOTORDQ21 TOTORDQ22 UNITSIDD
15566 +UNITSLAP UNTLANPO
15567 +%mend varSample;
15568 +%global numVarSample;
15569 +%let numVarSample = 93 ;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref MACFILE has been deassigned.
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
15570 +/*------------------------------------------------------------------
15571 +  MACRO EXPLOREOBS
15572 +
15573 +  SUPPORT:  SASDHD - David Duling
15574 +  PRODUCT:  Enterprise Miner
15575 +
15576 +  DESCRIPTION:
15577 +  Generates maximum and default numbers of observations to
15578 +  download for visualization depending on the record length.
15579 +
15580 +  Values were determined by trial and error using typical
15581 +  Windows workstation configurations.
15582 +
15583 +  Discrete sets of values are returned so that user experience
15584 +  will be consitent with similar sized data sets.
15585 +
15586 +  These macro variables are set:
15587 +  _exploreobs_max -- maximum number of obs downloadable
15588 +  _exploreobs_def -- default number of obs to be downloaded
15589 +  _exploreobs_recl - record length.  Might be useful for reporting.
15590 +
15591 +  Use the _exploreobs_max to set limit the GUI selection of
15592 +  observations for downloading.  The GUI selection for obs
15593 +  could be reduced to "Default" and "Max".
15594 +
15595 +  Parameters
15596 +  data=   libname.memname of input data
15597 +  vars=   subset list of variables.
15598 +          downloading 1 out of 500 really does work like downloading
15599 +          1 out of 1 vars.  Users may select a subset of vars for
15600 +                   visualizations.  Pass in the list as space delimited
15601 +          var names.  If vars is not specified, the record length
15602 +          of the entire data will be used.
15603 +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
15604 +
15605 +  Control
15606 +  Users may control the values by entering these macro variables.
15607 +            EM_EXPLOREOBS_MAX
15608 +            EM_EXPLOREOBS_DEFAULT
15609 +  These values override the computed values.
15610 +
15611 +  Debugging
15612 +  %let _exploreobs_debug=1 ;
15613 +--------------------------------------------------------------------
15614 +  HISTORY: 20APR2004. sasdhd. pushed.
15615 +           18DEC2004. sasdhd. S0280556.
15616 +           07SEP2007. sasdhd. HK1009586
15617 +--------------------------------------------------------------------*/
15618 +
15619 +%macro exploreobs(data=,vars=, nbytes=) ;
15620 +
15621 +   /*--- variable definitions ---*/
15622 +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
15623 +   %local xobs xvars xlen vlen xi vname vlist ;
15624 +   %local _exp_source _exp_notes ;
15625 +
15626 +   /*--- USER definitions ---*/
15627 +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
15628 +
15629 +   /*--- variable intializations ---*/
15630 +   %let _exploreobs_max=0 ;
15631 +   %let _exploreobs_def=0 ;
15632 +   %let _exploreobs_recl=0 ;
15633 +   %let xvars= 0 ;
15634 +   %let xlen = 0 ;
15635 +   %let xobs = 0 ;
15636 +
15637 +   /*--- data error checks ---*/
15638 +   %if "&data" eq "" %then %do ;
15639 +            %put NOTE: DATA is not specified. ;
15640 +            %goto term ;
15641 +      %end ;
15642 +
15643 +   %let dsid=%sysfunc(open(&data)) ;
15644 +   %if not &dsid %then %do ;
15645 +            %put NOTE: DATA &data is not available. ;
15646 +            %goto term ;
15647 +      %end ;
15648 +
15649 +   /*--- if a vars list exists generate a subset ---*/
15650 +   %if &vars ne %then %do ;
15651 +         %let dsid=%sysfunc(close(&dsid)) ;
15652 +         %if &_exploreobs_debug ne 1 %then %do ;
15653 +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
15654 +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
15655 +                  options nosource nonotes ;
15656 +         %end ;
15657 +         data _exploreobs_temp_data ;
15658 +         set &data(obs=0) ;
15659 +          keep &vars ;
15660 +         run;
15661 +         %if &_exploreobs_debug ne 1 %then %do ;
15662 +                  options &_exp_source &_exp_notes ;
15663 +         %end ;
15664 +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
15665 +         %if &dsid eq 0 %then %do ;
15666 +                  %put NOTE: Sample is not available.;
15667 +                  %goto term ;
15668 +            %end ;
15669 +      %end ;
15670 +
15671 +   /*--- get var attributes ---*/
15672 +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
15673 +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
15674 +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
15675 +   %let dsid= %sysfunc(close(&dsid)) ;
15676 +
15677 +   /*--- set default and max obs ---*/
15678 +   %let _exploreobs_recl=%eval(&xlen) ;
15679 +   %if &_exploreobs_recl eq 0 %then %do ;
15680 +             %let _exploreobs_max= 0 ;
15681 +             %let _exploreobs_def= 0 ;
15682 +             %goto term ;
15683 +
15684 +   %end ;
15685 +   %else
15686 +   %if &_exploreobs_recl le 32 %then %do ;
15687 +             %let _exploreobs_max=100000 ;
15688 +             %let _exploreobs_def= 10000 ;
15689 +   %end ;
15690 +   %else
15691 +   %if &_exploreobs_recl le 128 %then %do ;
15692 +             %let _exploreobs_max=60000 ;
15693 +             %let _exploreobs_def= 6000 ;
15694 +   %end ;
15695 +   %else
15696 +   %if &_exploreobs_recl lt 1000 %then %do ;
15697 +             %let _exploreobs_max=20000 ;
15698 +             %let _exploreobs_def= 2000 ;
15699 +   %end ;
15700 +   %else
15701 +   %if &_exploreobs_recl lt 5000 %then %do ;
15702 +             %let _exploreobs_max= 10000 ;
15703 +             %let _exploreobs_def=  1000 ;
15704 +   %end ;
15705 +   %else
15706 +   %if &_exploreobs_recl lt 20000 %then %do ;
15707 +             %let _exploreobs_max= 5000 ;
15708 +             %let _exploreobs_def=  500 ;
15709 +   %end ;
15710 +   %else %do ;
15711 +             %let _exploreobs_max= 1000 ;
15712 +             %let _exploreobs_def=  200 ;
15713 +   %end ;
15714 +
15715 +   /*--- Users options ---*/
15716 +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
15717 +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
15718 +   %end;
15719 +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
15720 +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
15721 +   %end;
15722 +
15723 +    /*--- S0868273 ---*/
15724 +    %if "&NBYTES" ne "" %then %do;
15725 +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
15726 +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
15727 +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
15728 +       %end;
15729 +
15730 +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
15731 +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
15732 +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
15733 +          %if ^&_exploreobs_def %then
15734 +              %let _exploreobs_def = 1;
15735 +
15736 +       %end;
15737 +    %end;
15738 +
15739 +   /*--- Terminate ---*/
15740 +   %term:
15741 +
15742 +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
15743 +%mend ;
15744 +
15745 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS1.Ids_DATA : vars= 93 : recl= 728 : max=20000 : def= 2000
PERFORMANCE  DETAILS
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*

NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           1:55.70
      cpu time            0.59 seconds
      
NOTE: There were 48356 observations read from the data set DATA.CATALOG2010.
NOTE: There were 2000 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set EMWS1.GRFEXPL_SAMPLE_DATA has 2000 observations and 93 variables.
NOTE: DATA statement used (Total process time):
      real time           1:57.19
      cpu time            0.64 seconds
      

15746  *------------------------------------------------------------*;
15747  * End TRAIN: GrfExpl;
15748  *------------------------------------------------------------*;
15749  

15750  *------------------------------------------------------------*;
15751  * Close any missing semi colons;
15752  *------------------------------------------------------------*;
15753  ;
15754  ;
15755  ;
15756  ;
15757  quit;
15758  *------------------------------------------------------------*;
15759  * Close any unbalanced quotes;
15760  *------------------------------------------------------------*;
15761  /*; *"; *'; */
15762  ;
15763  run;
15764  quit;
15765  /* Reset EM Options */
15766  options formchar="|----|+|---+=|-/\<>*";
15767  options nocenter ls=256 ps=10000;
15768  goptions reset=all device=GIF NODISPLAY;

