NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
16067      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16068      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16069      put '<Node Id="Ids2" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids2" Event="Update" Pid="" Gridid=""/>';
16070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=upitsctxsh014,
      Local Host IP addr=fe80::7c6c:e767:77c9:eaf1%12,
      Peer Hostname Name=upitsctxsh014.its.uncc.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60924,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16071      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Ids2 : Beginning update before running 
* datetime : 12DEC2017:11:46:13 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     filename _emtool_ '\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS2\Ids2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16073      %let _HPDMGRIDHOST=;
16074      %let _HPDMGRIDINSTALLLOC=;
16075      %let _HPDMGRIDDATASERVER=;
16076      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Ids2 : End update 
* datetime : 12DEC2017:11:46:13 
* 
*------------------------------------------------------------* 
16077      %let _emdsep = \;
16078      %em_getactionstatus(emlib =EMWS2, nodeid=Ids2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16079      %let em_Train = N;
16080      %let em_Score = N;
16081      %let em_Report = N;
16082      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16083      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16084      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16085      put '<Node Id="Ids2" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids2" Event="Complete" Pid="" Gridid=""/>';
16086      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=upitsctxsh014,
      Local Host IP addr=fe80::7c6c:e767:77c9:eaf1%12,
      Peer Hostname Name=upitsctxsh014.its.uncc.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60924,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16087      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16088      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Ids2" is up to date and doesn't need to run. 
Traverser: WaitingNode "REPL" 
Traverser: WaitingNode "IMPT" 
traverser_readyNode_note 
16089      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16090      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16091      put '<Node Id="Stat" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Stat" Event="Update" Pid="" Gridid=""/>';
16092      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=upitsctxsh014,
      Local Host IP addr=fe80::7c6c:e767:77c9:eaf1%12,
      Peer Hostname Name=upitsctxsh014.its.uncc.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60924,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16093      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Stat : Beginning update before running 
* datetime : 12DEC2017:11:46:13 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Stat_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS2\Stat\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16114      %let _HPDMGRIDHOST=;
16115      %let _HPDMGRIDINSTALLLOC=;
16116      %let _HPDMGRIDDATASERVER=;
16117      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Stat : End update 
* datetime : 12DEC2017:11:46:13 
* 
*------------------------------------------------------------* 
16118      %let _emdsep = \;
16119      %em_getactionstatus(emlib =EMWS2, nodeid=Stat);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16120      %let em_filemodtime=;
16121      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16122      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
16123      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
16124      where fileref eq "#LN00153";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00153";
16125      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
16126      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00153';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16127      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
16128      %let em_Train = N;
16129      %let em_Score = N;
16130      %let em_Report = N;
16131      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

16132      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16133      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16134      put '<Node Id="Stat" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Stat" Event="Complete" Pid="" Gridid=""/>';
16135      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=upitsctxsh014,
      Local Host IP addr=fe80::7c6c:e767:77c9:eaf1%12,
      Peer Hostname Name=upitsctxsh014.its.uncc.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60924,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

16136      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16137      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Stat" is up to date and doesn't need to run. 
Traverser: WaitingNode "IMPT" 
traverser_readyNode_note 
16138      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16139      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16140      put '<Node Id="Repl" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Repl" Event="Update" Pid="" Gridid=""/>';
16141      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=upitsctxsh014,
      Local Host IP addr=fe80::7c6c:e767:77c9:eaf1%12,
      Peer Hostname Name=upitsctxsh014.its.uncc.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60924,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16142      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Repl : Beginning update before running 
* datetime : 12DEC2017:11:46:14 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Repl_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS2.Stat_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Repl: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Repl: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
16378      %let emexceptionString =;
16379      %let EMEXCEPTIONSTRING=;
16380      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16381      * UPDATE: Repl;
MPRINT(EM_DIAGRAM):   * UPDATE: Repl;
16382      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16383      %let EM_ACTION = UPDATE;
16384      %let syscc = 0;
16385      filename x CATALOG 'SASHELP.EMUTIL.EM_VARMACRO.SOURCE';
MPRINT(EM_DIAGRAM):     filename x CATALOG 'SASHELP.EMUTIL.EM_VARMACRO.SOURCE';
16386      %inc x;
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
16388     +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
16390     +   filename macFile catalog 'work.emutil.macro.source';
16391     +   %let _METAOBS = 0;
16392     +   %let _maxvar = &maxvar;
16393     +   %if "&_maxvar" eq "" %then %let maxvar = -1;
16395     +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
16396     +                   or (&metadata eq ) %then %do;
16397     +       %put * No metadata data set defined;
16398     +       %goto doend;
16399     +   %end;
16401     +   data _null_;
16402     +      length _STRING_ $80;
16403     +      retain _STRING_ '' maxvar 0;
16404     +      set &metadata end=eof;
16405     +      file macFile;
16406     +      %if %nrbquote(&where) ne %then %do;
16407     +          %let whereClause = where (%nrbquote(&where));
16408     +          %unquote(&whereClause);
16409     +      %end;
16410     +      if _N_=1 then do;
16411     +         string = "%"!!"macro &name;";
16412     +         put string;
16413     +      end;
16414     +      maxvar +1;
16415     +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
16416     +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
16417     +         if eof
16418     +            %if  %sysevalf(&_maxvar > 0) %then %do;
16419     +                or maxvar >= &maxvar
16420     +            %end;
16421     +            then do;
16422     +            put _STRING_;
16423     +            string = "%"!!"mend &name;";
16424     +            put string;
16425     +            string = strip(put(_N_, best.));
16426     +            call symput('_METAOBS', string);
16427     +            %if (&nummacro ne ) %then %do;
16428     +                put "%" "global &nummacro;";
16429     +                put "%" "let &nummacro = " string ";";
16430     +            %end;
16431     +            stop;
16432     +         end;
16433     +      end;
16434     +      else do;
16435     +         put _STRING_;
16436     +         _string_ = TRIM(&key);
16437     +         if eof
16438     +            %if  %sysevalf(&_maxvar > 0) %then %do;
16439     +              or maxvar >= &maxvar
16440     +           %end;
16441     +            then do;
16442     +            put _STRING_;
16443     +            string = "%"!!"mend &name;";
16444     +            put string;
16445     +        end;
16446     +      end;
16447     +      if eof
16448     +         %if  %sysevalf(&_maxvar > 0) %then %do;
16449     +             or maxvar >= &maxvar
16450     +         %end;
16451     +         then do;
16452     +         string = strip(put(_N_, best.));
16453     +         call symput('_METAOBS', string);
16454     +         %if (&nummacro ne ) %then %do;
16455     +             put "%" "global &nummacro;";
16456     +             put "%" "let &nummacro = " string ";";
16457     +         %end;
16458     +         stop;
16459     +      end;
16460     +   run;
16462     +   %doend:
16463     +   %if ^&_METAOBS %then %do;
16464     +       data _null_;
16465     +          file macFile;
16466     +          put "%" "macro &name;";
16467     +          put "%" "mend &name;";
16468     +          %if (&nummacro ne ) %then %do;
16469     +              put "%" "global &nummacro;";
16470     +              put "%" "let &nummacro = 0;";
16471     +          %end;
16472     +      run;
16473     +   %end;
16474     +   %inc macFile;
16475     +   filename macFile;
16476     +%mend em_varMacro;
NOTE: %INCLUDE (level 1) ending.
16477      filename X;
MPRINT(EM_DIAGRAM):   filename X;
NOTE: Fileref X has been deassigned.
16478       %macro main;
16479      
16480         filename temp catalog 'sashelp.emmdfy.Replace_macros.source';
16481         %include temp;
16482         filename temp;
16483      
16484         %if %upcase(&EM_ACTION) = CREATE %then %do;
16485      
16486             filename temp catalog 'sashelp.emmdfy.Replace_create.source';
16487             %include temp;
16488             filename temp;
16489             %create;
16490         %end;
16491         %else
16492         %if %upcase(&EM_ACTION) = TRAIN %then %do;
16493      
16494             filename temp catalog 'sashelp.emmdfy.Replace_train.source';
16495             %include temp;
16496             filename temp;
16497             %train;
16498         %end;
16499         %else
16500         %if %upcase(&EM_ACTION) = SCORE %then %do;
16501      
16502             filename temp catalog 'sashelp.emmdfy.Replace_score.source';
16503             %include temp;
16504             filename temp;
16505             %score;
16506         %end;
16507         %if %upcase(&EM_ACTION) = REPORT %then %do;
16508      
16509             filename temp catalog 'sashelp.emmdfy.Replace_report.source';
16510             %include temp;
16511             filename temp;
16512             %report;
16513         %end;
16514         %if %upcase(&EM_ACTION) = OPENOUTCLASSTABLE %then %do;
16515             filename temp catalog 'sashelp.emmdfy.replace_makeoutclass.source';
16516             %include temp;
16517             filename temp;
16518             %em_replace_openoutclass;
16519         %end;
16520         %if %upcase(&EM_ACTION) = CLOSEOUTCLASSTABLE %then %do;
16521             filename temp catalog 'sashelp.emmdfy.replace_makeoutclass.source';
16522             %include temp;
16523             filename temp;
16524             %em_replace_closeoutclass;
16525         %end;
16526      %mend main;
16527      
16528      %main;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmdfy.Replace_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMDFY.REPLACE_MACROS.SOURCE.
16529     +%macro SetProperties;
16530     +   %em_checkmacro(name=EM_PROPERTY_UNKNOWNLEVEL,    global=Y, value=MODE);
16531     +   %em_checkmacro(name=EM_PROPERTY_CALCMETHOD,      global=Y, value=NONE);
16532     +   %em_checkmacro(name=EM_PROPERTY_PERCENTSCUTOFF,  global=Y, value=0.5);
16533     +   %em_checkmacro(name=EM_PROPERTY_SPACINGSCUTOFF,  global=Y, value=9);
16534     +   %em_checkMacro(name=EM_PROPERTY_MADSCUTOFF,      global=Y, value=9);
16535     +   %em_checkMacro(name=EM_PROPERTY_STDDEVCUTOFF,    global=Y, value=3);
16536     +   %em_checkmacro(name=EM_PROPERTY_REPLACEMETHOD,   global=Y, value=COMPUTED);
16537     +   %em_checkmacro(name=EM_PROPERTY_HIDEVARIABLE,    global=Y, value=N);
16538     +   %em_checkmacro(name=EM_PROPERTY_INTERVALMETHOD,  global=Y, value=NONE);
16539     +   %em_checkmacro(name=EM_PROPERTY_REPORTCOUNT,     global=Y, value=Y);
16540     +
16541     +%mend SetProperties;
16542     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: Repl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16543      *------------------------------------------------------------*;
16544      * End UPDATE: Repl;
16545      *------------------------------------------------------------*;
16546      

16547      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ '\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS2\Repl\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16549      %let _HPDMGRIDHOST=;
16550      %let _HPDMGRIDINSTALLLOC=;
16551      %let _HPDMGRIDDATASERVER=;
16552      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Repl : End update 
* datetime : 12DEC2017:11:46:14 
* 
*------------------------------------------------------------* 
16553      %let _emdsep = \;
16554      %em_getactionstatus(emlib =EMWS2, nodeid=Repl);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16555      %let em_filemodtime=;
16556      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16557      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
16558      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
16559      where fileref eq "#LN00182";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00182";
16560      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
16561      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00182';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16562      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
NOTE: View EMWS2.REPL_NEWVALUES.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
16563      %let em_Train = N;
16564      %let em_Score = N;
16565      %let em_Report = N;
16566      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

16567      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16568      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16569      put '<Node Id="Repl" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Repl" Event="Complete" Pid="" Gridid=""/>';
16570      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=upitsctxsh014,
      Local Host IP addr=fe80::7c6c:e767:77c9:eaf1%12,
      Peer Hostname Name=upitsctxsh014.its.uncc.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60924,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16571      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16572      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Repl" is up to date and doesn't need to run. 
traverser_readyNode_note 
16573      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16574      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16575      put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
16576      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=upitsctxsh014,
      Local Host IP addr=fe80::7c6c:e767:77c9:eaf1%12,
      Peer Hostname Name=upitsctxsh014.its.uncc.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60924,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16577      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Impt : Beginning update before running 
* datetime : 12DEC2017:11:46:15 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Impt_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS2.Repl_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS2\Impt\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16597      %let _HPDMGRIDHOST=;
16598      %let _HPDMGRIDINSTALLLOC=;
16599      %let _HPDMGRIDDATASERVER=;
16600      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Impt : End update 
* datetime : 12DEC2017:11:46:15 
* 
*------------------------------------------------------------* 
16601      %let _emdsep = \;
16602      %em_getactionstatus(emlib =EMWS2, nodeid=Impt);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16603      %let em_Train = N;
16604      %let em_Score = N;
16605      %let em_Report = N;
16606      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16607      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16608      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16609      put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
16610      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=upitsctxsh014,
      Local Host IP addr=fe80::7c6c:e767:77c9:eaf1%12,
      Peer Hostname Name=upitsctxsh014.its.uncc.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60924,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16611      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16612      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Impt" is up to date and doesn't need to run. 
Traverser: Run Completed 
16613      proc printto;
MPRINT(EM_DIAGRAM):    proc printto;
16614      run;
MPRINT(EM_DIAGRAM):   run;

