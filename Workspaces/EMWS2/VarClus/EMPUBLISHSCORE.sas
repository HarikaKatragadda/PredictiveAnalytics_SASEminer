*** Begin Class Look-up, Standardization, Replacement ;
 
*** Generate dummy variables for BOTHPAYM ;
label BOTHPAYM0 = 'BOTHPAYM=0' ;
label BOTHPAYM1 = 'BOTHPAYM=1' ;
if missing( BOTHPAYM ) then do;
   BOTHPAYM0 = .;
   BOTHPAYM1 = .;
end;
else do;
   length _dm4 $ 4; drop _dm4 ;
   _dm4 = put( BOTHPAYM , $4. );
   %DMNORMIP( _dm4 )
   if _dm4 = '0'  then do;
      BOTHPAYM0 = 1;
      BOTHPAYM1 = 0;
   end;
   else if _dm4 = '1'  then do;
      BOTHPAYM0 = 0;
      BOTHPAYM1 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for CCPAYM ;
label CCPAYM0 = 'CCPAYM=0' ;
label CCPAYM1 = 'CCPAYM=1' ;
if missing( CCPAYM ) then do;
   CCPAYM0 = .;
   CCPAYM1 = .;
end;
else do;
   length _dm4 $ 4; drop _dm4 ;
   _dm4 = put( CCPAYM , $4. );
   %DMNORMIP( _dm4 )
   if _dm4 = '0'  then do;
      CCPAYM0 = 1;
      CCPAYM1 = 0;
   end;
   else if _dm4 = '1'  then do;
      CCPAYM0 = 0;
      CCPAYM1 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for PCPAYM ;
label PCPAYM0 = 'PCPAYM=0' ;
label PCPAYM1 = 'PCPAYM=1' ;
if missing( PCPAYM ) then do;
   PCPAYM0 = .;
   PCPAYM1 = .;
end;
else do;
   length _dm4 $ 4; drop _dm4 ;
   _dm4 = put( PCPAYM , $4. );
   %DMNORMIP( _dm4 )
   if _dm4 = '0'  then do;
      PCPAYM0 = 1;
      PCPAYM1 = 0;
   end;
   else if _dm4 = '1'  then do;
      PCPAYM0 = 0;
      PCPAYM1 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for ACTBUY ;
label ACTBUY0 = 'ACTBUY=0' ;
label ACTBUY1 = 'ACTBUY=1' ;
label ACTBUY2 = 'ACTBUY=2' ;
label ACTBUY3 = 'ACTBUY=3' ;
label ACTBUY4 = 'ACTBUY=4' ;
label ACTBUY5 = 'ACTBUY=5' ;
label ACTBUY6 = 'ACTBUY=6' ;
label ACTBUY7 = 'ACTBUY=7' ;
label ACTBUY8 = 'ACTBUY=8' ;
label ACTBUY9 = 'ACTBUY=9' ;
label ACTBUY10 = 'ACTBUY=10' ;
*** encoding is sparse, initialize to zero;
ACTBUY0 = 0;
ACTBUY1 = 0;
ACTBUY2 = 0;
ACTBUY3 = 0;
ACTBUY4 = 0;
ACTBUY5 = 0;
ACTBUY6 = 0;
ACTBUY7 = 0;
ACTBUY8 = 0;
ACTBUY9 = 0;
ACTBUY10 = 0;
if missing( ACTBUY ) then do;
   ACTBUY0 = .;
   ACTBUY1 = .;
   ACTBUY2 = .;
   ACTBUY3 = .;
   ACTBUY4 = .;
   ACTBUY5 = .;
   ACTBUY6 = .;
   ACTBUY7 = .;
   ACTBUY8 = .;
   ACTBUY9 = .;
   ACTBUY10 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( ACTBUY , BEST12. );
   %DMNORMIP( _dm12 )
   _dm_find = 0; drop _dm_find;
   if _dm12 <= '4'  then do;
      if _dm12 <= '10'  then do;
         if _dm12 <= '1'  then do;
            if _dm12 = '0'  then do;
               ACTBUY0 = 1;
               _dm_find = 1;
            end;
            else do;
               if _dm12 = '1'  then do;
                  ACTBUY1 = 1;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm12 = '10'  then do;
               ACTBUY10 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm12 <= '3'  then do;
            if _dm12 = '2'  then do;
               ACTBUY2 = 1;
               _dm_find = 1;
            end;
            else do;
               if _dm12 = '3'  then do;
                  ACTBUY3 = 1;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm12 = '4'  then do;
               ACTBUY4 = 1;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm12 <= '7'  then do;
         if _dm12 <= '6'  then do;
            if _dm12 = '5'  then do;
               ACTBUY5 = 1;
               _dm_find = 1;
            end;
            else do;
               if _dm12 = '6'  then do;
                  ACTBUY6 = 1;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm12 = '7'  then do;
               ACTBUY7 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm12 = '8'  then do;
            ACTBUY8 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm12 = '9'  then do;
               ACTBUY9 = 1;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   if not _dm_find then do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT07 ;
label DEPT070 = 'DEPT07=0' ;
label DEPT073 = 'DEPT07=3' ;
label DEPT074 = 'DEPT07=4' ;
label DEPT075 = 'DEPT07=5' ;
label DEPT076 = 'DEPT07=6' ;
label DEPT077 = 'DEPT07=7' ;
label DEPT078 = 'DEPT07=8' ;
label DEPT079 = 'DEPT07=9' ;
label DEPT0711 = 'DEPT07=11' ;
*** encoding is sparse, initialize to zero;
DEPT070 = 0;
DEPT073 = 0;
DEPT074 = 0;
DEPT075 = 0;
DEPT076 = 0;
DEPT077 = 0;
DEPT078 = 0;
DEPT079 = 0;
DEPT0711 = 0;
if missing( DEPT07 ) then do;
   DEPT070 = .;
   DEPT073 = .;
   DEPT074 = .;
   DEPT075 = .;
   DEPT076 = .;
   DEPT077 = .;
   DEPT078 = .;
   DEPT079 = .;
   DEPT0711 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT07 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT070 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT073 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT075 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT074 = 1;
   end;
   else if _dm12 = '7'  then do;
      DEPT077 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT076 = 1;
   end;
   else if _dm12 = '11'  then do;
      DEPT0711 = 1;
   end;
   else if _dm12 = '8'  then do;
      DEPT078 = 1;
   end;
   else if _dm12 = '9'  then do;
      DEPT079 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT11 ;
label DEPT110 = 'DEPT11=0' ;
label DEPT113 = 'DEPT11=3' ;
label DEPT114 = 'DEPT11=4' ;
label DEPT115 = 'DEPT11=5' ;
label DEPT116 = 'DEPT11=6' ;
label DEPT117 = 'DEPT11=7' ;
label DEPT118 = 'DEPT11=8' ;
label DEPT119 = 'DEPT11=9' ;
label DEPT1110 = 'DEPT11=10' ;
label DEPT1111 = 'DEPT11=11' ;
label DEPT1113 = 'DEPT11=13' ;
label DEPT1116 = 'DEPT11=16' ;
label DEPT1118 = 'DEPT11=18' ;
label DEPT1129 = 'DEPT11=29' ;
*** encoding is sparse, initialize to zero;
DEPT110 = 0;
DEPT113 = 0;
DEPT114 = 0;
DEPT115 = 0;
DEPT116 = 0;
DEPT117 = 0;
DEPT118 = 0;
DEPT119 = 0;
DEPT1110 = 0;
DEPT1111 = 0;
DEPT1113 = 0;
DEPT1116 = 0;
DEPT1118 = 0;
DEPT1129 = 0;
if missing( DEPT11 ) then do;
   DEPT110 = .;
   DEPT113 = .;
   DEPT114 = .;
   DEPT115 = .;
   DEPT116 = .;
   DEPT117 = .;
   DEPT118 = .;
   DEPT119 = .;
   DEPT1110 = .;
   DEPT1111 = .;
   DEPT1113 = .;
   DEPT1116 = .;
   DEPT1118 = .;
   DEPT1129 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT11 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT110 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT113 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT115 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT114 = 1;
   end;
   else if _dm12 = '7'  then do;
      DEPT117 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT116 = 1;
   end;
   else if _dm12 = '8'  then do;
      DEPT118 = 1;
   end;
   else if _dm12 = '9'  then do;
      DEPT119 = 1;
   end;
   else if _dm12 = '11'  then do;
      DEPT1111 = 1;
   end;
   else if _dm12 = '13'  then do;
      DEPT1113 = 1;
   end;
   else if _dm12 = '10'  then do;
      DEPT1110 = 1;
   end;
   else if _dm12 = '16'  then do;
      DEPT1116 = 1;
   end;
   else if _dm12 = '18'  then do;
      DEPT1118 = 1;
   end;
   else if _dm12 = '29'  then do;
      DEPT1129 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT12 ;
label DEPT120 = 'DEPT12=0' ;
label DEPT123 = 'DEPT12=3' ;
label DEPT124 = 'DEPT12=4' ;
label DEPT125 = 'DEPT12=5' ;
label DEPT126 = 'DEPT12=6' ;
label DEPT127 = 'DEPT12=7' ;
label DEPT128 = 'DEPT12=8' ;
label DEPT129 = 'DEPT12=9' ;
label DEPT1210 = 'DEPT12=10' ;
label DEPT1211 = 'DEPT12=11' ;
label DEPT1212 = 'DEPT12=12' ;
label DEPT1213 = 'DEPT12=13' ;
label DEPT1215 = 'DEPT12=15' ;
label DEPT1216 = 'DEPT12=16' ;
*** encoding is sparse, initialize to zero;
DEPT120 = 0;
DEPT123 = 0;
DEPT124 = 0;
DEPT125 = 0;
DEPT126 = 0;
DEPT127 = 0;
DEPT128 = 0;
DEPT129 = 0;
DEPT1210 = 0;
DEPT1211 = 0;
DEPT1212 = 0;
DEPT1213 = 0;
DEPT1215 = 0;
DEPT1216 = 0;
if missing( DEPT12 ) then do;
   DEPT120 = .;
   DEPT123 = .;
   DEPT124 = .;
   DEPT125 = .;
   DEPT126 = .;
   DEPT127 = .;
   DEPT128 = .;
   DEPT129 = .;
   DEPT1210 = .;
   DEPT1211 = .;
   DEPT1212 = .;
   DEPT1213 = .;
   DEPT1215 = .;
   DEPT1216 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT12 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT120 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT123 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT125 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT124 = 1;
   end;
   else if _dm12 = '7'  then do;
      DEPT127 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT126 = 1;
   end;
   else if _dm12 = '9'  then do;
      DEPT129 = 1;
   end;
   else if _dm12 = '8'  then do;
      DEPT128 = 1;
   end;
   else if _dm12 = '11'  then do;
      DEPT1211 = 1;
   end;
   else if _dm12 = '13'  then do;
      DEPT1213 = 1;
   end;
   else if _dm12 = '10'  then do;
      DEPT1210 = 1;
   end;
   else if _dm12 = '15'  then do;
      DEPT1215 = 1;
   end;
   else if _dm12 = '12'  then do;
      DEPT1212 = 1;
   end;
   else if _dm12 = '16'  then do;
      DEPT1216 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT17 ;
label DEPT170 = 'DEPT17=0' ;
label DEPT173 = 'DEPT17=3' ;
label DEPT174 = 'DEPT17=4' ;
label DEPT175 = 'DEPT17=5' ;
label DEPT176 = 'DEPT17=6' ;
label DEPT177 = 'DEPT17=7' ;
label DEPT178 = 'DEPT17=8' ;
label DEPT179 = 'DEPT17=9' ;
label DEPT1710 = 'DEPT17=10' ;
label DEPT1711 = 'DEPT17=11' ;
label DEPT1712 = 'DEPT17=12' ;
label DEPT1713 = 'DEPT17=13' ;
label DEPT1714 = 'DEPT17=14' ;
label DEPT1715 = 'DEPT17=15' ;
label DEPT1716 = 'DEPT17=16' ;
label DEPT1717 = 'DEPT17=17' ;
label DEPT1723 = 'DEPT17=23' ;
label DEPT1734 = 'DEPT17=34' ;
*** encoding is sparse, initialize to zero;
DEPT170 = 0;
DEPT173 = 0;
DEPT174 = 0;
DEPT175 = 0;
DEPT176 = 0;
DEPT177 = 0;
DEPT178 = 0;
DEPT179 = 0;
DEPT1710 = 0;
DEPT1711 = 0;
DEPT1712 = 0;
DEPT1713 = 0;
DEPT1714 = 0;
DEPT1715 = 0;
DEPT1716 = 0;
DEPT1717 = 0;
DEPT1723 = 0;
DEPT1734 = 0;
if missing( DEPT17 ) then do;
   DEPT170 = .;
   DEPT173 = .;
   DEPT174 = .;
   DEPT175 = .;
   DEPT176 = .;
   DEPT177 = .;
   DEPT178 = .;
   DEPT179 = .;
   DEPT1710 = .;
   DEPT1711 = .;
   DEPT1712 = .;
   DEPT1713 = .;
   DEPT1714 = .;
   DEPT1715 = .;
   DEPT1716 = .;
   DEPT1717 = .;
   DEPT1723 = .;
   DEPT1734 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT17 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT170 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT173 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT175 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT174 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT176 = 1;
   end;
   else if _dm12 = '7'  then do;
      DEPT177 = 1;
   end;
   else if _dm12 = '8'  then do;
      DEPT178 = 1;
   end;
   else if _dm12 = '9'  then do;
      DEPT179 = 1;
   end;
   else if _dm12 = '10'  then do;
      DEPT1710 = 1;
   end;
   else if _dm12 = '12'  then do;
      DEPT1712 = 1;
   end;
   else if _dm12 = '11'  then do;
      DEPT1711 = 1;
   end;
   else if _dm12 = '14'  then do;
      DEPT1714 = 1;
   end;
   else if _dm12 = '17'  then do;
      DEPT1717 = 1;
   end;
   else if _dm12 = '13'  then do;
      DEPT1713 = 1;
   end;
   else if _dm12 = '15'  then do;
      DEPT1715 = 1;
   end;
   else if _dm12 = '16'  then do;
      DEPT1716 = 1;
   end;
   else if _dm12 = '23'  then do;
      DEPT1723 = 1;
   end;
   else if _dm12 = '34'  then do;
      DEPT1734 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT18 ;
label DEPT180 = 'DEPT18=0' ;
label DEPT183 = 'DEPT18=3' ;
label DEPT184 = 'DEPT18=4' ;
label DEPT185 = 'DEPT18=5' ;
label DEPT186 = 'DEPT18=6' ;
label DEPT187 = 'DEPT18=7' ;
label DEPT188 = 'DEPT18=8' ;
label DEPT189 = 'DEPT18=9' ;
label DEPT1810 = 'DEPT18=10' ;
label DEPT1811 = 'DEPT18=11' ;
label DEPT1812 = 'DEPT18=12' ;
label DEPT1813 = 'DEPT18=13' ;
*** encoding is sparse, initialize to zero;
DEPT180 = 0;
DEPT183 = 0;
DEPT184 = 0;
DEPT185 = 0;
DEPT186 = 0;
DEPT187 = 0;
DEPT188 = 0;
DEPT189 = 0;
DEPT1810 = 0;
DEPT1811 = 0;
DEPT1812 = 0;
DEPT1813 = 0;
if missing( DEPT18 ) then do;
   DEPT180 = .;
   DEPT183 = .;
   DEPT184 = .;
   DEPT185 = .;
   DEPT186 = .;
   DEPT187 = .;
   DEPT188 = .;
   DEPT189 = .;
   DEPT1810 = .;
   DEPT1811 = .;
   DEPT1812 = .;
   DEPT1813 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT18 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT180 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT183 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT184 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT185 = 1;
   end;
   else if _dm12 = '7'  then do;
      DEPT187 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT186 = 1;
   end;
   else if _dm12 = '10'  then do;
      DEPT1810 = 1;
   end;
   else if _dm12 = '11'  then do;
      DEPT1811 = 1;
   end;
   else if _dm12 = '8'  then do;
      DEPT188 = 1;
   end;
   else if _dm12 = '9'  then do;
      DEPT189 = 1;
   end;
   else if _dm12 = '12'  then do;
      DEPT1812 = 1;
   end;
   else if _dm12 = '13'  then do;
      DEPT1813 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT19 ;
label DEPT190 = 'DEPT19=0' ;
label DEPT193 = 'DEPT19=3' ;
label DEPT194 = 'DEPT19=4' ;
label DEPT195 = 'DEPT19=5' ;
label DEPT196 = 'DEPT19=6' ;
label DEPT197 = 'DEPT19=7' ;
label DEPT198 = 'DEPT19=8' ;
label DEPT199 = 'DEPT19=9' ;
label DEPT1910 = 'DEPT19=10' ;
label DEPT1911 = 'DEPT19=11' ;
label DEPT1912 = 'DEPT19=12' ;
label DEPT1913 = 'DEPT19=13' ;
label DEPT1914 = 'DEPT19=14' ;
label DEPT1915 = 'DEPT19=15' ;
label DEPT1918 = 'DEPT19=18' ;
label DEPT1920 = 'DEPT19=20' ;
*** encoding is sparse, initialize to zero;
DEPT190 = 0;
DEPT193 = 0;
DEPT194 = 0;
DEPT195 = 0;
DEPT196 = 0;
DEPT197 = 0;
DEPT198 = 0;
DEPT199 = 0;
DEPT1910 = 0;
DEPT1911 = 0;
DEPT1912 = 0;
DEPT1913 = 0;
DEPT1914 = 0;
DEPT1915 = 0;
DEPT1918 = 0;
DEPT1920 = 0;
if missing( DEPT19 ) then do;
   DEPT190 = .;
   DEPT193 = .;
   DEPT194 = .;
   DEPT195 = .;
   DEPT196 = .;
   DEPT197 = .;
   DEPT198 = .;
   DEPT199 = .;
   DEPT1910 = .;
   DEPT1911 = .;
   DEPT1912 = .;
   DEPT1913 = .;
   DEPT1914 = .;
   DEPT1915 = .;
   DEPT1918 = .;
   DEPT1920 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT19 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT190 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT193 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT194 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT195 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT196 = 1;
   end;
   else if _dm12 = '7'  then do;
      DEPT197 = 1;
   end;
   else if _dm12 = '8'  then do;
      DEPT198 = 1;
   end;
   else if _dm12 = '9'  then do;
      DEPT199 = 1;
   end;
   else if _dm12 = '10'  then do;
      DEPT1910 = 1;
   end;
   else if _dm12 = '11'  then do;
      DEPT1911 = 1;
   end;
   else if _dm12 = '12'  then do;
      DEPT1912 = 1;
   end;
   else if _dm12 = '13'  then do;
      DEPT1913 = 1;
   end;
   else if _dm12 = '14'  then do;
      DEPT1914 = 1;
   end;
   else if _dm12 = '15'  then do;
      DEPT1915 = 1;
   end;
   else if _dm12 = '18'  then do;
      DEPT1918 = 1;
   end;
   else if _dm12 = '20'  then do;
      DEPT1920 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT20 ;
label DEPT200 = 'DEPT20=0' ;
label DEPT203 = 'DEPT20=3' ;
label DEPT204 = 'DEPT20=4' ;
label DEPT205 = 'DEPT20=5' ;
label DEPT206 = 'DEPT20=6' ;
label DEPT207 = 'DEPT20=7' ;
label DEPT208 = 'DEPT20=8' ;
*** encoding is sparse, initialize to zero;
DEPT200 = 0;
DEPT203 = 0;
DEPT204 = 0;
DEPT205 = 0;
DEPT206 = 0;
DEPT207 = 0;
DEPT208 = 0;
if missing( DEPT20 ) then do;
   DEPT200 = .;
   DEPT203 = .;
   DEPT204 = .;
   DEPT205 = .;
   DEPT206 = .;
   DEPT207 = .;
   DEPT208 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT20 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT200 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT203 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT205 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT204 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT206 = 1;
   end;
   else if _dm12 = '7'  then do;
      DEPT207 = 1;
   end;
   else if _dm12 = '8'  then do;
      DEPT208 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT21 ;
label DEPT210 = 'DEPT21=0' ;
label DEPT213 = 'DEPT21=3' ;
label DEPT214 = 'DEPT21=4' ;
label DEPT215 = 'DEPT21=5' ;
label DEPT216 = 'DEPT21=6' ;
label DEPT219 = 'DEPT21=9' ;
*** encoding is sparse, initialize to zero;
DEPT210 = 0;
DEPT213 = 0;
DEPT214 = 0;
DEPT215 = 0;
DEPT216 = 0;
DEPT219 = 0;
if missing( DEPT21 ) then do;
   DEPT210 = .;
   DEPT213 = .;
   DEPT214 = .;
   DEPT215 = .;
   DEPT216 = .;
   DEPT219 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT21 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT210 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT213 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT215 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT214 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT216 = 1;
   end;
   else if _dm12 = '9'  then do;
      DEPT219 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for DEPT26 ;
label DEPT260 = 'DEPT26=0' ;
label DEPT263 = 'DEPT26=3' ;
label DEPT264 = 'DEPT26=4' ;
label DEPT265 = 'DEPT26=5' ;
label DEPT266 = 'DEPT26=6' ;
label DEPT267 = 'DEPT26=7' ;
label DEPT268 = 'DEPT26=8' ;
label DEPT269 = 'DEPT26=9' ;
label DEPT2610 = 'DEPT26=10' ;
label DEPT2611 = 'DEPT26=11' ;
label DEPT2614 = 'DEPT26=14' ;
label DEPT2615 = 'DEPT26=15' ;
label DEPT2622 = 'DEPT26=22' ;
label DEPT2625 = 'DEPT26=25' ;
label DEPT2655 = 'DEPT26=55' ;
*** encoding is sparse, initialize to zero;
DEPT260 = 0;
DEPT263 = 0;
DEPT264 = 0;
DEPT265 = 0;
DEPT266 = 0;
DEPT267 = 0;
DEPT268 = 0;
DEPT269 = 0;
DEPT2610 = 0;
DEPT2611 = 0;
DEPT2614 = 0;
DEPT2615 = 0;
DEPT2622 = 0;
DEPT2625 = 0;
DEPT2655 = 0;
if missing( DEPT26 ) then do;
   DEPT260 = .;
   DEPT263 = .;
   DEPT264 = .;
   DEPT265 = .;
   DEPT266 = .;
   DEPT267 = .;
   DEPT268 = .;
   DEPT269 = .;
   DEPT2610 = .;
   DEPT2611 = .;
   DEPT2614 = .;
   DEPT2615 = .;
   DEPT2622 = .;
   DEPT2625 = .;
   DEPT2655 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DEPT26 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      DEPT260 = 1;
   end;
   else if _dm12 = '3'  then do;
      DEPT263 = 1;
   end;
   else if _dm12 = '4'  then do;
      DEPT264 = 1;
   end;
   else if _dm12 = '5'  then do;
      DEPT265 = 1;
   end;
   else if _dm12 = '6'  then do;
      DEPT266 = 1;
   end;
   else if _dm12 = '7'  then do;
      DEPT267 = 1;
   end;
   else if _dm12 = '8'  then do;
      DEPT268 = 1;
   end;
   else if _dm12 = '9'  then do;
      DEPT269 = 1;
   end;
   else if _dm12 = '11'  then do;
      DEPT2611 = 1;
   end;
   else if _dm12 = '10'  then do;
      DEPT2610 = 1;
   end;
   else if _dm12 = '14'  then do;
      DEPT2614 = 1;
   end;
   else if _dm12 = '15'  then do;
      DEPT2615 = 1;
   end;
   else if _dm12 = '22'  then do;
      DEPT2622 = 1;
   end;
   else if _dm12 = '25'  then do;
      DEPT2625 = 1;
   end;
   else if _dm12 = '55'  then do;
      DEPT2655 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for METHPAYM ;
label METHPAYMCC = 'METHPAYM=CC' ;
label METHPAYMCK = 'METHPAYM=CK' ;
label METHPAYMDK = 'METHPAYM=DK' ;
label METHPAYMXBOT = 'METHPAYM=XBOT' ;
*** encoding is sparse, initialize to zero;
METHPAYMCC = 0;
METHPAYMCK = 0;
METHPAYMDK = 0;
METHPAYMXBOT = 0;
if missing( METHPAYM ) then do;
   METHPAYMCC = .;
   METHPAYMCK = .;
   METHPAYMDK = .;
   METHPAYMXBOT = .;
end;
else do;
   length _dm4 $ 4; drop _dm4 ;
   _dm4 = put( METHPAYM , $4. );
   %DMNORMIP( _dm4 )
   if _dm4 = 'CC'  then do;
      METHPAYMCC = 1;
   end;
   else if _dm4 = 'CK'  then do;
      METHPAYMCK = 1;
   end;
   else if _dm4 = 'XBOT'  then do;
      METHPAYMXBOT = 1;
   end;
   else if _dm4 = 'DK'  then do;
      METHPAYMDK = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ01 ;
label TOTORDQ010 = 'TOTORDQ01=0' ;
label TOTORDQ011 = 'TOTORDQ01=1' ;
label TOTORDQ012 = 'TOTORDQ01=2' ;
label TOTORDQ013 = 'TOTORDQ01=3' ;
label TOTORDQ014 = 'TOTORDQ01=4' ;
label TOTORDQ015 = 'TOTORDQ01=5' ;
label TOTORDQ016 = 'TOTORDQ01=6' ;
*** encoding is sparse, initialize to zero;
TOTORDQ010 = 0;
TOTORDQ011 = 0;
TOTORDQ012 = 0;
TOTORDQ013 = 0;
TOTORDQ014 = 0;
TOTORDQ015 = 0;
TOTORDQ016 = 0;
if missing( TOTORDQ01 ) then do;
   TOTORDQ010 = .;
   TOTORDQ011 = .;
   TOTORDQ012 = .;
   TOTORDQ013 = .;
   TOTORDQ014 = .;
   TOTORDQ015 = .;
   TOTORDQ016 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ01 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ010 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ011 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ012 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ013 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ014 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ015 = 1;
   end;
   else if _dm12 = '6'  then do;
      TOTORDQ016 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ02 ;
label TOTORDQ020 = 'TOTORDQ02=0' ;
label TOTORDQ021 = 'TOTORDQ02=1' ;
label TOTORDQ022 = 'TOTORDQ02=2' ;
label TOTORDQ023 = 'TOTORDQ02=3' ;
label TOTORDQ024 = 'TOTORDQ02=4' ;
label TOTORDQ025 = 'TOTORDQ02=5' ;
label TOTORDQ028 = 'TOTORDQ02=8' ;
*** encoding is sparse, initialize to zero;
TOTORDQ020 = 0;
TOTORDQ021 = 0;
TOTORDQ022 = 0;
TOTORDQ023 = 0;
TOTORDQ024 = 0;
TOTORDQ025 = 0;
TOTORDQ028 = 0;
if missing( TOTORDQ02 ) then do;
   TOTORDQ020 = .;
   TOTORDQ021 = .;
   TOTORDQ022 = .;
   TOTORDQ023 = .;
   TOTORDQ024 = .;
   TOTORDQ025 = .;
   TOTORDQ028 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ02 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ020 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ021 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ022 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ023 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ024 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ025 = 1;
   end;
   else if _dm12 = '8'  then do;
      TOTORDQ028 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ03 ;
label TOTORDQ030 = 'TOTORDQ03=0' ;
label TOTORDQ031 = 'TOTORDQ03=1' ;
label TOTORDQ032 = 'TOTORDQ03=2' ;
label TOTORDQ033 = 'TOTORDQ03=3' ;
label TOTORDQ034 = 'TOTORDQ03=4' ;
*** encoding is sparse, initialize to zero;
TOTORDQ030 = 0;
TOTORDQ031 = 0;
TOTORDQ032 = 0;
TOTORDQ033 = 0;
TOTORDQ034 = 0;
if missing( TOTORDQ03 ) then do;
   TOTORDQ030 = .;
   TOTORDQ031 = .;
   TOTORDQ032 = .;
   TOTORDQ033 = .;
   TOTORDQ034 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ03 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ030 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ031 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ032 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ033 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ034 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ04 ;
label TOTORDQ040 = 'TOTORDQ04=0' ;
label TOTORDQ041 = 'TOTORDQ04=1' ;
label TOTORDQ042 = 'TOTORDQ04=2' ;
label TOTORDQ043 = 'TOTORDQ04=3' ;
label TOTORDQ044 = 'TOTORDQ04=4' ;
label TOTORDQ045 = 'TOTORDQ04=5' ;
label TOTORDQ046 = 'TOTORDQ04=6' ;
label TOTORDQ049 = 'TOTORDQ04=9' ;
label TOTORDQ0416 = 'TOTORDQ04=16' ;
*** encoding is sparse, initialize to zero;
TOTORDQ040 = 0;
TOTORDQ041 = 0;
TOTORDQ042 = 0;
TOTORDQ043 = 0;
TOTORDQ044 = 0;
TOTORDQ045 = 0;
TOTORDQ046 = 0;
TOTORDQ049 = 0;
TOTORDQ0416 = 0;
if missing( TOTORDQ04 ) then do;
   TOTORDQ040 = .;
   TOTORDQ041 = .;
   TOTORDQ042 = .;
   TOTORDQ043 = .;
   TOTORDQ044 = .;
   TOTORDQ045 = .;
   TOTORDQ046 = .;
   TOTORDQ049 = .;
   TOTORDQ0416 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ04 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ040 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ041 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ042 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ043 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ044 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ045 = 1;
   end;
   else if _dm12 = '6'  then do;
      TOTORDQ046 = 1;
   end;
   else if _dm12 = '9'  then do;
      TOTORDQ049 = 1;
   end;
   else if _dm12 = '16'  then do;
      TOTORDQ0416 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ05 ;
label TOTORDQ050 = 'TOTORDQ05=0' ;
label TOTORDQ051 = 'TOTORDQ05=1' ;
label TOTORDQ052 = 'TOTORDQ05=2' ;
label TOTORDQ053 = 'TOTORDQ05=3' ;
label TOTORDQ054 = 'TOTORDQ05=4' ;
label TOTORDQ055 = 'TOTORDQ05=5' ;
*** encoding is sparse, initialize to zero;
TOTORDQ050 = 0;
TOTORDQ051 = 0;
TOTORDQ052 = 0;
TOTORDQ053 = 0;
TOTORDQ054 = 0;
TOTORDQ055 = 0;
if missing( TOTORDQ05 ) then do;
   TOTORDQ050 = .;
   TOTORDQ051 = .;
   TOTORDQ052 = .;
   TOTORDQ053 = .;
   TOTORDQ054 = .;
   TOTORDQ055 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ05 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ050 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ051 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ052 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ053 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ054 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ055 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ06 ;
label TOTORDQ060 = 'TOTORDQ06=0' ;
label TOTORDQ061 = 'TOTORDQ06=1' ;
label TOTORDQ062 = 'TOTORDQ06=2' ;
label TOTORDQ063 = 'TOTORDQ06=3' ;
label TOTORDQ064 = 'TOTORDQ06=4' ;
label TOTORDQ065 = 'TOTORDQ06=5' ;
label TOTORDQ069 = 'TOTORDQ06=9' ;
*** encoding is sparse, initialize to zero;
TOTORDQ060 = 0;
TOTORDQ061 = 0;
TOTORDQ062 = 0;
TOTORDQ063 = 0;
TOTORDQ064 = 0;
TOTORDQ065 = 0;
TOTORDQ069 = 0;
if missing( TOTORDQ06 ) then do;
   TOTORDQ060 = .;
   TOTORDQ061 = .;
   TOTORDQ062 = .;
   TOTORDQ063 = .;
   TOTORDQ064 = .;
   TOTORDQ065 = .;
   TOTORDQ069 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ06 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ060 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ061 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ062 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ063 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ064 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ065 = 1;
   end;
   else if _dm12 = '9'  then do;
      TOTORDQ069 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ07 ;
label TOTORDQ070 = 'TOTORDQ07=0' ;
label TOTORDQ071 = 'TOTORDQ07=1' ;
label TOTORDQ072 = 'TOTORDQ07=2' ;
label TOTORDQ073 = 'TOTORDQ07=3' ;
label TOTORDQ074 = 'TOTORDQ07=4' ;
label TOTORDQ075 = 'TOTORDQ07=5' ;
label TOTORDQ078 = 'TOTORDQ07=8' ;
*** encoding is sparse, initialize to zero;
TOTORDQ070 = 0;
TOTORDQ071 = 0;
TOTORDQ072 = 0;
TOTORDQ073 = 0;
TOTORDQ074 = 0;
TOTORDQ075 = 0;
TOTORDQ078 = 0;
if missing( TOTORDQ07 ) then do;
   TOTORDQ070 = .;
   TOTORDQ071 = .;
   TOTORDQ072 = .;
   TOTORDQ073 = .;
   TOTORDQ074 = .;
   TOTORDQ075 = .;
   TOTORDQ078 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ07 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ070 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ071 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ072 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ073 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ074 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ075 = 1;
   end;
   else if _dm12 = '8'  then do;
      TOTORDQ078 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ08 ;
label TOTORDQ080 = 'TOTORDQ08=0' ;
label TOTORDQ081 = 'TOTORDQ08=1' ;
label TOTORDQ082 = 'TOTORDQ08=2' ;
label TOTORDQ083 = 'TOTORDQ08=3' ;
label TOTORDQ084 = 'TOTORDQ08=4' ;
label TOTORDQ085 = 'TOTORDQ08=5' ;
label TOTORDQ086 = 'TOTORDQ08=6' ;
label TOTORDQ0810 = 'TOTORDQ08=10' ;
label TOTORDQ0823 = 'TOTORDQ08=23' ;
*** encoding is sparse, initialize to zero;
TOTORDQ080 = 0;
TOTORDQ081 = 0;
TOTORDQ082 = 0;
TOTORDQ083 = 0;
TOTORDQ084 = 0;
TOTORDQ085 = 0;
TOTORDQ086 = 0;
TOTORDQ0810 = 0;
TOTORDQ0823 = 0;
if missing( TOTORDQ08 ) then do;
   TOTORDQ080 = .;
   TOTORDQ081 = .;
   TOTORDQ082 = .;
   TOTORDQ083 = .;
   TOTORDQ084 = .;
   TOTORDQ085 = .;
   TOTORDQ086 = .;
   TOTORDQ0810 = .;
   TOTORDQ0823 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ08 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ080 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ081 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ082 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ083 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ084 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ085 = 1;
   end;
   else if _dm12 = '6'  then do;
      TOTORDQ086 = 1;
   end;
   else if _dm12 = '10'  then do;
      TOTORDQ0810 = 1;
   end;
   else if _dm12 = '23'  then do;
      TOTORDQ0823 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ09 ;
label TOTORDQ090 = 'TOTORDQ09=0' ;
label TOTORDQ091 = 'TOTORDQ09=1' ;
label TOTORDQ092 = 'TOTORDQ09=2' ;
label TOTORDQ093 = 'TOTORDQ09=3' ;
label TOTORDQ094 = 'TOTORDQ09=4' ;
label TOTORDQ095 = 'TOTORDQ09=5' ;
*** encoding is sparse, initialize to zero;
TOTORDQ090 = 0;
TOTORDQ091 = 0;
TOTORDQ092 = 0;
TOTORDQ093 = 0;
TOTORDQ094 = 0;
TOTORDQ095 = 0;
if missing( TOTORDQ09 ) then do;
   TOTORDQ090 = .;
   TOTORDQ091 = .;
   TOTORDQ092 = .;
   TOTORDQ093 = .;
   TOTORDQ094 = .;
   TOTORDQ095 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ09 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ090 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ091 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ092 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ093 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ094 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ095 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ10 ;
label TOTORDQ100 = 'TOTORDQ10=0' ;
label TOTORDQ101 = 'TOTORDQ10=1' ;
label TOTORDQ102 = 'TOTORDQ10=2' ;
label TOTORDQ103 = 'TOTORDQ10=3' ;
label TOTORDQ104 = 'TOTORDQ10=4' ;
label TOTORDQ106 = 'TOTORDQ10=6' ;
*** encoding is sparse, initialize to zero;
TOTORDQ100 = 0;
TOTORDQ101 = 0;
TOTORDQ102 = 0;
TOTORDQ103 = 0;
TOTORDQ104 = 0;
TOTORDQ106 = 0;
if missing( TOTORDQ10 ) then do;
   TOTORDQ100 = .;
   TOTORDQ101 = .;
   TOTORDQ102 = .;
   TOTORDQ103 = .;
   TOTORDQ104 = .;
   TOTORDQ106 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ10 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ100 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ101 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ102 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ103 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ104 = 1;
   end;
   else if _dm12 = '6'  then do;
      TOTORDQ106 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ11 ;
label TOTORDQ110 = 'TOTORDQ11=0' ;
label TOTORDQ111 = 'TOTORDQ11=1' ;
label TOTORDQ112 = 'TOTORDQ11=2' ;
label TOTORDQ113 = 'TOTORDQ11=3' ;
label TOTORDQ114 = 'TOTORDQ11=4' ;
label TOTORDQ115 = 'TOTORDQ11=5' ;
label TOTORDQ117 = 'TOTORDQ11=7' ;
*** encoding is sparse, initialize to zero;
TOTORDQ110 = 0;
TOTORDQ111 = 0;
TOTORDQ112 = 0;
TOTORDQ113 = 0;
TOTORDQ114 = 0;
TOTORDQ115 = 0;
TOTORDQ117 = 0;
if missing( TOTORDQ11 ) then do;
   TOTORDQ110 = .;
   TOTORDQ111 = .;
   TOTORDQ112 = .;
   TOTORDQ113 = .;
   TOTORDQ114 = .;
   TOTORDQ115 = .;
   TOTORDQ117 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ11 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ110 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ111 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ112 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ113 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ114 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ115 = 1;
   end;
   else if _dm12 = '7'  then do;
      TOTORDQ117 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ12 ;
label TOTORDQ120 = 'TOTORDQ12=0' ;
label TOTORDQ121 = 'TOTORDQ12=1' ;
label TOTORDQ122 = 'TOTORDQ12=2' ;
label TOTORDQ123 = 'TOTORDQ12=3' ;
label TOTORDQ124 = 'TOTORDQ12=4' ;
label TOTORDQ125 = 'TOTORDQ12=5' ;
label TOTORDQ126 = 'TOTORDQ12=6' ;
label TOTORDQ127 = 'TOTORDQ12=7' ;
label TOTORDQ129 = 'TOTORDQ12=9' ;
label TOTORDQ1221 = 'TOTORDQ12=21' ;
*** encoding is sparse, initialize to zero;
TOTORDQ120 = 0;
TOTORDQ121 = 0;
TOTORDQ122 = 0;
TOTORDQ123 = 0;
TOTORDQ124 = 0;
TOTORDQ125 = 0;
TOTORDQ126 = 0;
TOTORDQ127 = 0;
TOTORDQ129 = 0;
TOTORDQ1221 = 0;
if missing( TOTORDQ12 ) then do;
   TOTORDQ120 = .;
   TOTORDQ121 = .;
   TOTORDQ122 = .;
   TOTORDQ123 = .;
   TOTORDQ124 = .;
   TOTORDQ125 = .;
   TOTORDQ126 = .;
   TOTORDQ127 = .;
   TOTORDQ129 = .;
   TOTORDQ1221 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ12 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ120 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ121 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ122 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ123 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ124 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ125 = 1;
   end;
   else if _dm12 = '7'  then do;
      TOTORDQ127 = 1;
   end;
   else if _dm12 = '6'  then do;
      TOTORDQ126 = 1;
   end;
   else if _dm12 = '9'  then do;
      TOTORDQ129 = 1;
   end;
   else if _dm12 = '21'  then do;
      TOTORDQ1221 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ13 ;
label TOTORDQ130 = 'TOTORDQ13=0' ;
label TOTORDQ131 = 'TOTORDQ13=1' ;
label TOTORDQ132 = 'TOTORDQ13=2' ;
label TOTORDQ133 = 'TOTORDQ13=3' ;
label TOTORDQ134 = 'TOTORDQ13=4' ;
label TOTORDQ135 = 'TOTORDQ13=5' ;
*** encoding is sparse, initialize to zero;
TOTORDQ130 = 0;
TOTORDQ131 = 0;
TOTORDQ132 = 0;
TOTORDQ133 = 0;
TOTORDQ134 = 0;
TOTORDQ135 = 0;
if missing( TOTORDQ13 ) then do;
   TOTORDQ130 = .;
   TOTORDQ131 = .;
   TOTORDQ132 = .;
   TOTORDQ133 = .;
   TOTORDQ134 = .;
   TOTORDQ135 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ13 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ130 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ131 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ132 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ133 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ134 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ135 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ14 ;
label TOTORDQ140 = 'TOTORDQ14=0' ;
label TOTORDQ141 = 'TOTORDQ14=1' ;
label TOTORDQ142 = 'TOTORDQ14=2' ;
label TOTORDQ143 = 'TOTORDQ14=3' ;
label TOTORDQ144 = 'TOTORDQ14=4' ;
label TOTORDQ145 = 'TOTORDQ14=5' ;
label TOTORDQ146 = 'TOTORDQ14=6' ;
*** encoding is sparse, initialize to zero;
TOTORDQ140 = 0;
TOTORDQ141 = 0;
TOTORDQ142 = 0;
TOTORDQ143 = 0;
TOTORDQ144 = 0;
TOTORDQ145 = 0;
TOTORDQ146 = 0;
if missing( TOTORDQ14 ) then do;
   TOTORDQ140 = .;
   TOTORDQ141 = .;
   TOTORDQ142 = .;
   TOTORDQ143 = .;
   TOTORDQ144 = .;
   TOTORDQ145 = .;
   TOTORDQ146 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ14 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ140 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ141 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ142 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ143 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ144 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ145 = 1;
   end;
   else if _dm12 = '6'  then do;
      TOTORDQ146 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ15 ;
label TOTORDQ150 = 'TOTORDQ15=0' ;
label TOTORDQ151 = 'TOTORDQ15=1' ;
label TOTORDQ152 = 'TOTORDQ15=2' ;
label TOTORDQ153 = 'TOTORDQ15=3' ;
label TOTORDQ154 = 'TOTORDQ15=4' ;
label TOTORDQ155 = 'TOTORDQ15=5' ;
label TOTORDQ158 = 'TOTORDQ15=8' ;
*** encoding is sparse, initialize to zero;
TOTORDQ150 = 0;
TOTORDQ151 = 0;
TOTORDQ152 = 0;
TOTORDQ153 = 0;
TOTORDQ154 = 0;
TOTORDQ155 = 0;
TOTORDQ158 = 0;
if missing( TOTORDQ15 ) then do;
   TOTORDQ150 = .;
   TOTORDQ151 = .;
   TOTORDQ152 = .;
   TOTORDQ153 = .;
   TOTORDQ154 = .;
   TOTORDQ155 = .;
   TOTORDQ158 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ15 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ150 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ151 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ152 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ153 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ154 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ155 = 1;
   end;
   else if _dm12 = '8'  then do;
      TOTORDQ158 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ16 ;
label TOTORDQ160 = 'TOTORDQ16=0' ;
label TOTORDQ161 = 'TOTORDQ16=1' ;
label TOTORDQ162 = 'TOTORDQ16=2' ;
label TOTORDQ163 = 'TOTORDQ16=3' ;
label TOTORDQ164 = 'TOTORDQ16=4' ;
label TOTORDQ165 = 'TOTORDQ16=5' ;
label TOTORDQ166 = 'TOTORDQ16=6' ;
label TOTORDQ167 = 'TOTORDQ16=7' ;
label TOTORDQ1610 = 'TOTORDQ16=10' ;
*** encoding is sparse, initialize to zero;
TOTORDQ160 = 0;
TOTORDQ161 = 0;
TOTORDQ162 = 0;
TOTORDQ163 = 0;
TOTORDQ164 = 0;
TOTORDQ165 = 0;
TOTORDQ166 = 0;
TOTORDQ167 = 0;
TOTORDQ1610 = 0;
if missing( TOTORDQ16 ) then do;
   TOTORDQ160 = .;
   TOTORDQ161 = .;
   TOTORDQ162 = .;
   TOTORDQ163 = .;
   TOTORDQ164 = .;
   TOTORDQ165 = .;
   TOTORDQ166 = .;
   TOTORDQ167 = .;
   TOTORDQ1610 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ16 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ160 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ161 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ162 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ163 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ164 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ165 = 1;
   end;
   else if _dm12 = '6'  then do;
      TOTORDQ166 = 1;
   end;
   else if _dm12 = '7'  then do;
      TOTORDQ167 = 1;
   end;
   else if _dm12 = '10'  then do;
      TOTORDQ1610 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ17 ;
label TOTORDQ170 = 'TOTORDQ17=0' ;
label TOTORDQ171 = 'TOTORDQ17=1' ;
label TOTORDQ172 = 'TOTORDQ17=2' ;
label TOTORDQ173 = 'TOTORDQ17=3' ;
label TOTORDQ174 = 'TOTORDQ17=4' ;
label TOTORDQ175 = 'TOTORDQ17=5' ;
*** encoding is sparse, initialize to zero;
TOTORDQ170 = 0;
TOTORDQ171 = 0;
TOTORDQ172 = 0;
TOTORDQ173 = 0;
TOTORDQ174 = 0;
TOTORDQ175 = 0;
if missing( TOTORDQ17 ) then do;
   TOTORDQ170 = .;
   TOTORDQ171 = .;
   TOTORDQ172 = .;
   TOTORDQ173 = .;
   TOTORDQ174 = .;
   TOTORDQ175 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ17 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ170 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ171 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ172 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ173 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ174 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ175 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ18 ;
label TOTORDQ180 = 'TOTORDQ18=0' ;
label TOTORDQ181 = 'TOTORDQ18=1' ;
label TOTORDQ182 = 'TOTORDQ18=2' ;
label TOTORDQ183 = 'TOTORDQ18=3' ;
label TOTORDQ184 = 'TOTORDQ18=4' ;
label TOTORDQ185 = 'TOTORDQ18=5' ;
*** encoding is sparse, initialize to zero;
TOTORDQ180 = 0;
TOTORDQ181 = 0;
TOTORDQ182 = 0;
TOTORDQ183 = 0;
TOTORDQ184 = 0;
TOTORDQ185 = 0;
if missing( TOTORDQ18 ) then do;
   TOTORDQ180 = .;
   TOTORDQ181 = .;
   TOTORDQ182 = .;
   TOTORDQ183 = .;
   TOTORDQ184 = .;
   TOTORDQ185 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ18 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ180 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ181 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ182 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ183 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ184 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ185 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ19 ;
label TOTORDQ190 = 'TOTORDQ19=0' ;
label TOTORDQ191 = 'TOTORDQ19=1' ;
label TOTORDQ192 = 'TOTORDQ19=2' ;
label TOTORDQ193 = 'TOTORDQ19=3' ;
label TOTORDQ194 = 'TOTORDQ19=4' ;
label TOTORDQ195 = 'TOTORDQ19=5' ;
*** encoding is sparse, initialize to zero;
TOTORDQ190 = 0;
TOTORDQ191 = 0;
TOTORDQ192 = 0;
TOTORDQ193 = 0;
TOTORDQ194 = 0;
TOTORDQ195 = 0;
if missing( TOTORDQ19 ) then do;
   TOTORDQ190 = .;
   TOTORDQ191 = .;
   TOTORDQ192 = .;
   TOTORDQ193 = .;
   TOTORDQ194 = .;
   TOTORDQ195 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ19 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ190 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ191 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ192 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ193 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ194 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ195 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ20 ;
label TOTORDQ200 = 'TOTORDQ20=0' ;
label TOTORDQ201 = 'TOTORDQ20=1' ;
label TOTORDQ202 = 'TOTORDQ20=2' ;
label TOTORDQ203 = 'TOTORDQ20=3' ;
label TOTORDQ204 = 'TOTORDQ20=4' ;
label TOTORDQ205 = 'TOTORDQ20=5' ;
label TOTORDQ207 = 'TOTORDQ20=7' ;
label TOTORDQ208 = 'TOTORDQ20=8' ;
label TOTORDQ2010 = 'TOTORDQ20=10' ;
label TOTORDQ2027 = 'TOTORDQ20=27' ;
*** encoding is sparse, initialize to zero;
TOTORDQ200 = 0;
TOTORDQ201 = 0;
TOTORDQ202 = 0;
TOTORDQ203 = 0;
TOTORDQ204 = 0;
TOTORDQ205 = 0;
TOTORDQ207 = 0;
TOTORDQ208 = 0;
TOTORDQ2010 = 0;
TOTORDQ2027 = 0;
if missing( TOTORDQ20 ) then do;
   TOTORDQ200 = .;
   TOTORDQ201 = .;
   TOTORDQ202 = .;
   TOTORDQ203 = .;
   TOTORDQ204 = .;
   TOTORDQ205 = .;
   TOTORDQ207 = .;
   TOTORDQ208 = .;
   TOTORDQ2010 = .;
   TOTORDQ2027 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ20 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ200 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ201 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ202 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ203 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ204 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ205 = 1;
   end;
   else if _dm12 = '7'  then do;
      TOTORDQ207 = 1;
   end;
   else if _dm12 = '8'  then do;
      TOTORDQ208 = 1;
   end;
   else if _dm12 = '10'  then do;
      TOTORDQ2010 = 1;
   end;
   else if _dm12 = '27'  then do;
      TOTORDQ2027 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ21 ;
label TOTORDQ210 = 'TOTORDQ21=0' ;
label TOTORDQ211 = 'TOTORDQ21=1' ;
label TOTORDQ212 = 'TOTORDQ21=2' ;
label TOTORDQ213 = 'TOTORDQ21=3' ;
label TOTORDQ214 = 'TOTORDQ21=4' ;
label TOTORDQ215 = 'TOTORDQ21=5' ;
label TOTORDQ219 = 'TOTORDQ21=9' ;
*** encoding is sparse, initialize to zero;
TOTORDQ210 = 0;
TOTORDQ211 = 0;
TOTORDQ212 = 0;
TOTORDQ213 = 0;
TOTORDQ214 = 0;
TOTORDQ215 = 0;
TOTORDQ219 = 0;
if missing( TOTORDQ21 ) then do;
   TOTORDQ210 = .;
   TOTORDQ211 = .;
   TOTORDQ212 = .;
   TOTORDQ213 = .;
   TOTORDQ214 = .;
   TOTORDQ215 = .;
   TOTORDQ219 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ21 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ210 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ211 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ212 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ213 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ214 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ215 = 1;
   end;
   else if _dm12 = '9'  then do;
      TOTORDQ219 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** Generate dummy variables for TOTORDQ22 ;
label TOTORDQ220 = 'TOTORDQ22=0' ;
label TOTORDQ221 = 'TOTORDQ22=1' ;
label TOTORDQ222 = 'TOTORDQ22=2' ;
label TOTORDQ223 = 'TOTORDQ22=3' ;
label TOTORDQ224 = 'TOTORDQ22=4' ;
label TOTORDQ225 = 'TOTORDQ22=5' ;
label TOTORDQ226 = 'TOTORDQ22=6' ;
*** encoding is sparse, initialize to zero;
TOTORDQ220 = 0;
TOTORDQ221 = 0;
TOTORDQ222 = 0;
TOTORDQ223 = 0;
TOTORDQ224 = 0;
TOTORDQ225 = 0;
TOTORDQ226 = 0;
if missing( TOTORDQ22 ) then do;
   TOTORDQ220 = .;
   TOTORDQ221 = .;
   TOTORDQ222 = .;
   TOTORDQ223 = .;
   TOTORDQ224 = .;
   TOTORDQ225 = .;
   TOTORDQ226 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( TOTORDQ22 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      TOTORDQ220 = 1;
   end;
   else if _dm12 = '1'  then do;
      TOTORDQ221 = 1;
   end;
   else if _dm12 = '2'  then do;
      TOTORDQ222 = 1;
   end;
   else if _dm12 = '3'  then do;
      TOTORDQ223 = 1;
   end;
   else if _dm12 = '4'  then do;
      TOTORDQ224 = 1;
   end;
   else if _dm12 = '5'  then do;
      TOTORDQ225 = 1;
   end;
   else if _dm12 = '6'  then do;
      TOTORDQ226 = 1;
   end;
   else do;
      delete;
   end;
end;
 
*** End Class Look-up, Standardization, Replacement ;
 
 
/*-------------------------------------------------*/
/* Varclus Score Code Begins: GCLUSTER 1*/
/*-------------------------------------------------*/
 
GC1_CLUS1 = 0 ; /*---Global Cluster 1 : Cluster Component 1------ */
GC1_CLUS2 = 0 ; /*---Global Cluster 1 : Cluster Component 2------ */
GC1_CLUS3 = 0 ; /*---Global Cluster 1 : Cluster Component 3------ */
GC1_CLUS4 = 0 ; /*---Global Cluster 1 : Cluster Component 4------ */
GC1_CLUS5 = 0 ; /*---Global Cluster 1 : Cluster Component 5------ */
GC1_CLUS6 = 0 ; /*---Global Cluster 1 : Cluster Component 6------ */
GC1_CLUS7 = 0 ; /*---Global Cluster 1 : Cluster Component 7------ */
GC1_CLUS8 = 0 ; /*---Global Cluster 1 : Cluster Component 8------ */
GC1_CLUS9 = 0 ; /*---Global Cluster 1 : Cluster Component 9------ */
GC1_CLUS10 = 0 ; /*---Global Cluster 1 : Cluster Component 10------ */
GC1_CLUS11 = 0 ; /*---Global Cluster 1 : Cluster Component 11------ */
GC1_CLUS12 = 0 ; /*---Global Cluster 1 : Cluster Component 12------ */
GC1_CLUS13 = 0 ; /*---Global Cluster 1 : Cluster Component 13------ */
GC1_CLUS14 = 0 ; /*---Global Cluster 1 : Cluster Component 14------ */
GC1_CLUS15 = 0 ; /*---Global Cluster 1 : Cluster Component 15------ */
GC1_CLUS16 = 0 ; /*---Global Cluster 1 : Cluster Component 16------ */
GC1_CLUS17 = 0 ; /*---Global Cluster 1 : Cluster Component 17------ */
GC1_CLUS18 = 0 ; /*---Global Cluster 1 : Cluster Component 18------ */
GC1_CLUS19 = 0 ; /*---Global Cluster 1 : Cluster Component 19------ */
GC1_CLUS20 = 0 ; /*---Global Cluster 1 : Cluster Component 20------ */
GC1_CLUS21 = 0 ; /*---Global Cluster 1 : Cluster Component 21------ */
GC1_CLUS22 = 0 ; /*---Global Cluster 1 : Cluster Component 22------ */
GC1_CLUS23 = 0 ; /*---Global Cluster 1 : Cluster Component 23------ */
GC1_CLUS24 = 0 ; /*---Global Cluster 1 : Cluster Component 24------ */
GC1_CLUS25 = 0 ; /*---Global Cluster 1 : Cluster Component 25------ */
GC1_CLUS26 = 0 ; /*---Global Cluster 1 : Cluster Component 26------ */
GC1_CLUS27 = 0 ; /*---Global Cluster 1 : Cluster Component 27------ */
GC1_CLUS28 = 0 ; /*---Global Cluster 1 : Cluster Component 28------ */
GC1_CLUS29 = 0 ; /*---Global Cluster 1 : Cluster Component 29------ */
GC1_CLUS30 = 0 ; /*---Global Cluster 1 : Cluster Component 30------ */
GC1_CLUS31 = 0 ; /*---Global Cluster 1 : Cluster Component 31------ */
GC1_CLUS32 = 0 ; /*---Global Cluster 1 : Cluster Component 32------ */
GC1_CLUS33 = 0 ; /*---Global Cluster 1 : Cluster Component 33------ */
GC1_CLUS34 = 0 ; /*---Global Cluster 1 : Cluster Component 34------ */
GC1_CLUS35 = 0 ; /*---Global Cluster 1 : Cluster Component 35------ */
GC1_CLUS36 = 0 ; /*---Global Cluster 1 : Cluster Component 36------ */
GC1_CLUS37 = 0 ; /*---Global Cluster 1 : Cluster Component 37------ */
GC1_CLUS38 = 0 ; /*---Global Cluster 1 : Cluster Component 38------ */
GC1_CLUS20 = GC1_CLUS20+0.25268259289693 * (ACTBUY3 - 0.0514657980456)/0.22094927955546;
GC1_CLUS27 = GC1_CLUS27+1 * (ACTBUY5 - 0.00896541026834)/0.09426190815315;
GC1_CLUS2 = GC1_CLUS2+0.5 * (BOTHPAYM1 - 0.19354738638126)/0.39508434277919;
GC1_CLUS22 = GC1_CLUS22+0.25067773313649 * (CATALOGCNT - 3.77161470451372)/3.12899556544539;
GC1_CLUS1 = GC1_CLUS1+0.101895176444 * (DEPT01 - 0.50547541492166)/1.82274128473225;
GC1_CLUS1 = GC1_CLUS1+0.09448532113036 * (DEPT02 - 0.29257018768419)/1.15307534710204;
GC1_CLUS1 = GC1_CLUS1+0.11403575618412 * (DEPT03 - 1.08161935784085)/2.82203775857088;
GC1_CLUS1 = GC1_CLUS1+0.10092357421523 * (DEPT04 - 0.68006824879789)/2.28175674515779;
GC1_CLUS1 = GC1_CLUS1+0.0961666686675 * (DEPT05 - 0.54295020939972)/1.52515347226129;
GC1_CLUS22 = GC1_CLUS22+0.16008575269519 * (DEPT06 - 0.85925236544129)/1.98131768775175;
GC1_CLUS24 = GC1_CLUS24+1 * (DEPT079 - 0.00003102218085)/0.00556975590661;
GC1_CLUS25 = GC1_CLUS25+0.56831365754901 * (DEPT08 - 0.31512331316891)/1.29408639394269;
GC1_CLUS25 = GC1_CLUS25+0.53228926446034 * (DEPT09 - 0.2486427795874)/1.20923480324609;
GC1_CLUS23 = GC1_CLUS23+0.63033230529387 * (DEPT10 - 0.39066232356134)/1.7648701612552;
GC1_CLUS38 = GC1_CLUS38+0.6526082750221 * (DEPT1129 - 0.00003102218085)/0.00556975590661;
GC1_CLUS23 = GC1_CLUS23+0.63033230529387 * (DEPT1213 - 0.00009306654257)/0.009646800928;
GC1_CLUS22 = GC1_CLUS22+0.07949531968682 * (DEPT123 - 0.05013184426865)/0.21822034675722;
GC1_CLUS25 = GC1_CLUS25+0.45758385559152 * (DEPT125 - 0.00614239181014)/0.07813355373221;
GC1_CLUS22 = GC1_CLUS22+0.195672422795 * (DEPT13 - 1.30395532805956)/2.58742913517547;
GC1_CLUS1 = GC1_CLUS1+0.11711510116145 * (DEPT14 - 0.83527221963704)/2.18699342328426;
GC1_CLUS26 = GC1_CLUS26+0.64623891481535 * (DEPT15 - 0.28949899177912)/1.23869079532202;
GC1_CLUS26 = GC1_CLUS26+0.64623891481535 * (DEPT16 - 0.22491081123002)/1.0272304883634;
GC1_CLUS22 = GC1_CLUS22+0.21317622467802 * (DEPT22 - 2.12771831859779)/3.55134640550257;
GC1_CLUS22 = GC1_CLUS22+0.18630934593845 * (DEPT23 - 2.14223669923995)/3.81941288304535;
GC1_CLUS22 = GC1_CLUS22+0.15964088340357 * (DEPT24 - 0.64039087947882)/1.70711269742472;
GC1_CLUS22 = GC1_CLUS22+0.14884665049554 * (DEPT25 - 1.77676438653637)/4.75421718243184;
GC1_CLUS22 = GC1_CLUS22+0.14734632532468 * (DEPT27 - 0.58712579494338)/1.55259848403997;
GC1_CLUS1 = GC1_CLUS1+0.18972938056453 * (DOLINDET - 197.869031487513)/314.244548218948;
GC1_CLUS9 = GC1_CLUS9+0.56650532628804 * (DOLLARQ01 - 3.60255901969908)/18.9572343997303;
GC1_CLUS15 = GC1_CLUS15+0.56891547937291 * (DOLLARQ02 - 3.71090770901194)/20.7285900605152;
GC1_CLUS6 = GC1_CLUS6+0.5504626050735 * (DOLLARQ03 - 2.77052582596556)/15.8095808048519;
GC1_CLUS8 = GC1_CLUS8+0.55947068301874 * (DOLLARQ04 - 4.67856274236079)/22.181986153492;
GC1_CLUS19 = GC1_CLUS19+0.56558194710065 * (DOLLARQ05 - 4.32741461144718)/21.5182033567075;
GC1_CLUS17 = GC1_CLUS17+0.56416459866316 * (DOLLARQ06 - 3.88379649449356)/20.0626675130808;
GC1_CLUS12 = GC1_CLUS12+0.56944124195633 * (DOLLARQ07 - 4.19153187529083)/21.9984516452687;
GC1_CLUS20 = GC1_CLUS20+0.52449177579655 * (DOLLARQ08 - 6.15043803319373)/27.3333023843591;
GC1_CLUS14 = GC1_CLUS14+0.56389329494284 * (DOLLARQ09 - 4.29424383434155)/20.7683103640237;
GC1_CLUS10 = GC1_CLUS10+0.56089371324664 * (DOLLARQ10 - 3.64839584302776)/18.9957061824675;
GC1_CLUS4 = GC1_CLUS4+0.56413462585676 * (DOLLARQ11 - 4.15352411974561)/20.8177653006881;
GC1_CLUS5 = GC1_CLUS5+0.57491492012181 * (DOLLARQ12 - 6.39860555297037)/27.403980773023;
GC1_CLUS16 = GC1_CLUS16+0.57470990449496 * (DOLLARQ13 - 5.38680471537149)/25.9110809016436;
GC1_CLUS18 = GC1_CLUS18+0.57362967885419 * (DOLLARQ14 - 4.43791499922444)/23.752188577194;
GC1_CLUS3 = GC1_CLUS3+0.57055038098878 * (DOLLARQ15 - 4.90567023421746)/23.5349065932921;
GC1_CLUS13 = GC1_CLUS13+0.57289204188732 * (DOLLARQ17 - 5.57017403443462)/26.1415799982751;
GC1_CLUS7 = GC1_CLUS7+0.56193475254128 * (DOLLARQ18 - 4.78568140220257)/22.3927978593641;
GC1_CLUS11 = GC1_CLUS11+0.55963095544762 * (DOLLARQ19 - 4.33358802543818)/21.704742358276;
GC1_CLUS1 = GC1_CLUS1+0.18816215037063 * (DOLNETDT - 189.18095548317)/303.615750735174;
GC1_CLUS1 = GC1_CLUS1+0.17209519350965 * (FREQPRCH - 4.18160384675042)/5.31459540671444;
GC1_CLUS2 = GC1_CLUS2+0.5 * (METHPAYMXBOT - 0.19354738638126)/0.39508434277919;
GC1_CLUS9 = GC1_CLUS9+0.56650532628804 * (TOTORDQ011 - 0.05853885528152)/0.23476321571557;
GC1_CLUS33 = GC1_CLUS33+1 * (TOTORDQ012 - 0.00791065611912)/0.08859075070754;
GC1_CLUS15 = GC1_CLUS15+0.56891547937291 * (TOTORDQ021 - 0.05627423607879)/0.2304541038742;
GC1_CLUS37 = GC1_CLUS37+1 * (TOTORDQ022 - 0.00639056925701)/0.07968642839386;
GC1_CLUS6 = GC1_CLUS6+0.5504626050735 * (TOTORDQ031 - 0.04920117884287)/0.21629117901362;
GC1_CLUS8 = GC1_CLUS8+0.55947068301874 * (TOTORDQ041 - 0.0732743911897)/0.2605904093015;
GC1_CLUS38 = GC1_CLUS38+0.6526082750221 * (TOTORDQ043 - 0.00102373196835)/0.03197992601749;
GC1_CLUS19 = GC1_CLUS19+0.56558194710065 * (TOTORDQ051 - 0.06781448735846)/0.25143119100849;
GC1_CLUS17 = GC1_CLUS17+0.56416459866317 * (TOTORDQ061 - 0.06446409182565)/0.24558164355085;
GC1_CLUS12 = GC1_CLUS12+0.56944124195633 * (TOTORDQ071 - 0.06769039863502)/0.25121776686543;
GC1_CLUS35 = GC1_CLUS35+1 * (TOTORDQ072 - 0.0071661237785)/0.08435040705909;
GC1_CLUS20 = GC1_CLUS20+0.53499201866075 * (TOTORDQ081 - 0.09083294555607)/0.28737585758179;
GC1_CLUS14 = GC1_CLUS14+0.56389329494284 * (TOTORDQ091 - 0.07256088102993)/0.25941836346204;
GC1_CLUS10 = GC1_CLUS10+0.56089371324664 * (TOTORDQ101 - 0.05934543198386)/0.23627374697278;
GC1_CLUS36 = GC1_CLUS36+1 * (TOTORDQ102 - 0.00614239181014)/0.07813355373221;
GC1_CLUS21 = GC1_CLUS21+0.60779357584955 * (TOTORDQ104 - 0.00012408872343)/0.01113899342716;
GC1_CLUS4 = GC1_CLUS4+0.56413462585676 * (TOTORDQ111 - 0.06902435241197)/0.25349947679037;
GC1_CLUS34 = GC1_CLUS34+1 * (TOTORDQ112 - 0.00722816814022)/0.08471212631733;
GC1_CLUS21 = GC1_CLUS21+0.60779357584955 * (TOTORDQ115 - 0.00006204436171)/0.00787670215937;
GC1_CLUS5 = GC1_CLUS5+0.57491492012181 * (TOTORDQ121 - 0.09626182720645)/0.29495455023242;
GC1_CLUS28 = GC1_CLUS28+1 * (TOTORDQ122 - 0.01098185202419)/0.10421894213846;
GC1_CLUS16 = GC1_CLUS16+0.57470990449496 * (TOTORDQ131 - 0.08621064060803)/0.2806791941105;
GC1_CLUS30 = GC1_CLUS30+1 * (TOTORDQ132 - 0.0088413215449)/0.09361316381141;
GC1_CLUS18 = GC1_CLUS18+0.57362967885419 * (TOTORDQ141 - 0.0719714595936)/0.25844465690351;
GC1_CLUS3 = GC1_CLUS3+0.57055038098878 * (TOTORDQ151 - 0.07584923220102)/0.264760836941;
GC1_CLUS31 = GC1_CLUS31+1 * (TOTORDQ152 - 0.00905847681091)/0.09474544466925;
GC1_CLUS13 = GC1_CLUS13+0.57289204188732 * (TOTORDQ171 - 0.08329455560725)/0.27633121690163;
GC1_CLUS29 = GC1_CLUS29+1 * (TOTORDQ172 - 0.00961687606638)/0.09759450413666;
GC1_CLUS7 = GC1_CLUS7+0.56193475254128 * (TOTORDQ181 - 0.07476345587094)/0.26301335998085;
GC1_CLUS32 = GC1_CLUS32+1 * (TOTORDQ182 - 0.00744532340623)/0.08596580612805;
GC1_CLUS11 = GC1_CLUS11+0.55963095544762 * (TOTORDQ191 - 0.06775244299674)/0.25132450925054;
GC1_CLUS1 = GC1_CLUS1+0.18087293545233 * (UNITSIDD - 10.9602916085)/17.1055734908767;
 
/*-------------------------------------------------*/
/* Varclus Score Code Begins: GCLUSTER 2*/
/*-------------------------------------------------*/
 
GC2_CLUS1 = 0 ; /*---Global Cluster 2 : Cluster Component 1------ */
GC2_CLUS2 = 0 ; /*---Global Cluster 2 : Cluster Component 2------ */
GC2_CLUS3 = 0 ; /*---Global Cluster 2 : Cluster Component 3------ */
GC2_CLUS4 = 0 ; /*---Global Cluster 2 : Cluster Component 4------ */
GC2_CLUS5 = 0 ; /*---Global Cluster 2 : Cluster Component 5------ */
GC2_CLUS6 = 0 ; /*---Global Cluster 2 : Cluster Component 6------ */
GC2_CLUS7 = 0 ; /*---Global Cluster 2 : Cluster Component 7------ */
GC2_CLUS8 = 0 ; /*---Global Cluster 2 : Cluster Component 8------ */
GC2_CLUS9 = 0 ; /*---Global Cluster 2 : Cluster Component 9------ */
GC2_CLUS10 = 0 ; /*---Global Cluster 2 : Cluster Component 10------ */
GC2_CLUS11 = 0 ; /*---Global Cluster 2 : Cluster Component 11------ */
GC2_CLUS12 = 0 ; /*---Global Cluster 2 : Cluster Component 12------ */
GC2_CLUS13 = 0 ; /*---Global Cluster 2 : Cluster Component 13------ */
GC2_CLUS14 = 0 ; /*---Global Cluster 2 : Cluster Component 14------ */
GC2_CLUS15 = 0 ; /*---Global Cluster 2 : Cluster Component 15------ */
GC2_CLUS16 = 0 ; /*---Global Cluster 2 : Cluster Component 16------ */
GC2_CLUS17 = 0 ; /*---Global Cluster 2 : Cluster Component 17------ */
GC2_CLUS18 = 0 ; /*---Global Cluster 2 : Cluster Component 18------ */
GC2_CLUS19 = 0 ; /*---Global Cluster 2 : Cluster Component 19------ */
GC2_CLUS20 = 0 ; /*---Global Cluster 2 : Cluster Component 20------ */
GC2_CLUS21 = 0 ; /*---Global Cluster 2 : Cluster Component 21------ */
GC2_CLUS22 = 0 ; /*---Global Cluster 2 : Cluster Component 22------ */
GC2_CLUS23 = 0 ; /*---Global Cluster 2 : Cluster Component 23------ */
GC2_CLUS24 = 0 ; /*---Global Cluster 2 : Cluster Component 24------ */
GC2_CLUS25 = 0 ; /*---Global Cluster 2 : Cluster Component 25------ */
GC2_CLUS26 = 0 ; /*---Global Cluster 2 : Cluster Component 26------ */
GC2_CLUS27 = 0 ; /*---Global Cluster 2 : Cluster Component 27------ */
GC2_CLUS28 = 0 ; /*---Global Cluster 2 : Cluster Component 28------ */
GC2_CLUS29 = 0 ; /*---Global Cluster 2 : Cluster Component 29------ */
GC2_CLUS30 = 0 ; /*---Global Cluster 2 : Cluster Component 30------ */
GC2_CLUS31 = 0 ; /*---Global Cluster 2 : Cluster Component 31------ */
GC2_CLUS32 = 0 ; /*---Global Cluster 2 : Cluster Component 32------ */
GC2_CLUS33 = 0 ; /*---Global Cluster 2 : Cluster Component 33------ */
GC2_CLUS34 = 0 ; /*---Global Cluster 2 : Cluster Component 34------ */
GC2_CLUS35 = 0 ; /*---Global Cluster 2 : Cluster Component 35------ */
GC2_CLUS36 = 0 ; /*---Global Cluster 2 : Cluster Component 36------ */
GC2_CLUS37 = 0 ; /*---Global Cluster 2 : Cluster Component 37------ */
GC2_CLUS38 = 0 ; /*---Global Cluster 2 : Cluster Component 38------ */
GC2_CLUS39 = 0 ; /*---Global Cluster 2 : Cluster Component 39------ */
GC2_CLUS40 = 0 ; /*---Global Cluster 2 : Cluster Component 40------ */
GC2_CLUS41 = 0 ; /*---Global Cluster 2 : Cluster Component 41------ */
GC2_CLUS42 = 0 ; /*---Global Cluster 2 : Cluster Component 42------ */
GC2_CLUS43 = 0 ; /*---Global Cluster 2 : Cluster Component 43------ */
GC2_CLUS44 = 0 ; /*---Global Cluster 2 : Cluster Component 44------ */
GC2_CLUS45 = 0 ; /*---Global Cluster 2 : Cluster Component 45------ */
GC2_CLUS46 = 0 ; /*---Global Cluster 2 : Cluster Component 46------ */
GC2_CLUS47 = 0 ; /*---Global Cluster 2 : Cluster Component 47------ */
GC2_CLUS48 = 0 ; /*---Global Cluster 2 : Cluster Component 48------ */
GC2_CLUS49 = 0 ; /*---Global Cluster 2 : Cluster Component 49------ */
GC2_CLUS50 = 0 ; /*---Global Cluster 2 : Cluster Component 50------ */
GC2_CLUS51 = 0 ; /*---Global Cluster 2 : Cluster Component 51------ */
GC2_CLUS52 = 0 ; /*---Global Cluster 2 : Cluster Component 52------ */
GC2_CLUS53 = 0 ; /*---Global Cluster 2 : Cluster Component 53------ */
GC2_CLUS54 = 0 ; /*---Global Cluster 2 : Cluster Component 54------ */
GC2_CLUS55 = 0 ; /*---Global Cluster 2 : Cluster Component 55------ */
GC2_CLUS56 = 0 ; /*---Global Cluster 2 : Cluster Component 56------ */
GC2_CLUS57 = 0 ; /*---Global Cluster 2 : Cluster Component 57------ */
GC2_CLUS58 = 0 ; /*---Global Cluster 2 : Cluster Component 58------ */
GC2_CLUS59 = 0 ; /*---Global Cluster 2 : Cluster Component 59------ */
GC2_CLUS60 = 0 ; /*---Global Cluster 2 : Cluster Component 60------ */
GC2_CLUS61 = 0 ; /*---Global Cluster 2 : Cluster Component 61------ */
GC2_CLUS62 = 0 ; /*---Global Cluster 2 : Cluster Component 62------ */
GC2_CLUS63 = 0 ; /*---Global Cluster 2 : Cluster Component 63------ */
GC2_CLUS64 = 0 ; /*---Global Cluster 2 : Cluster Component 64------ */
GC2_CLUS65 = 0 ; /*---Global Cluster 2 : Cluster Component 65------ */
GC2_CLUS66 = 0 ; /*---Global Cluster 2 : Cluster Component 66------ */
GC2_CLUS67 = 0 ; /*---Global Cluster 2 : Cluster Component 67------ */
GC2_CLUS68 = 0 ; /*---Global Cluster 2 : Cluster Component 68------ */
GC2_CLUS69 = 0 ; /*---Global Cluster 2 : Cluster Component 69------ */
GC2_CLUS70 = 0 ; /*---Global Cluster 2 : Cluster Component 70------ */
GC2_CLUS71 = 0 ; /*---Global Cluster 2 : Cluster Component 71------ */
GC2_CLUS72 = 0 ; /*---Global Cluster 2 : Cluster Component 72------ */
GC2_CLUS73 = 0 ; /*---Global Cluster 2 : Cluster Component 73------ */
GC2_CLUS74 = 0 ; /*---Global Cluster 2 : Cluster Component 74------ */
GC2_CLUS75 = 0 ; /*---Global Cluster 2 : Cluster Component 75------ */
GC2_CLUS76 = 0 ; /*---Global Cluster 2 : Cluster Component 76------ */
GC2_CLUS77 = 0 ; /*---Global Cluster 2 : Cluster Component 77------ */
GC2_CLUS78 = 0 ; /*---Global Cluster 2 : Cluster Component 78------ */
GC2_CLUS79 = 0 ; /*---Global Cluster 2 : Cluster Component 79------ */
GC2_CLUS80 = 0 ; /*---Global Cluster 2 : Cluster Component 80------ */
GC2_CLUS81 = 0 ; /*---Global Cluster 2 : Cluster Component 81------ */
GC2_CLUS82 = 0 ; /*---Global Cluster 2 : Cluster Component 82------ */
GC2_CLUS83 = 0 ; /*---Global Cluster 2 : Cluster Component 83------ */
GC2_CLUS84 = 0 ; /*---Global Cluster 2 : Cluster Component 84------ */
GC2_CLUS85 = 0 ; /*---Global Cluster 2 : Cluster Component 85------ */
GC2_CLUS86 = 0 ; /*---Global Cluster 2 : Cluster Component 86------ */
GC2_CLUS87 = 0 ; /*---Global Cluster 2 : Cluster Component 87------ */
GC2_CLUS88 = 0 ; /*---Global Cluster 2 : Cluster Component 88------ */
GC2_CLUS89 = 0 ; /*---Global Cluster 2 : Cluster Component 89------ */
GC2_CLUS90 = 0 ; /*---Global Cluster 2 : Cluster Component 90------ */
GC2_CLUS91 = 0 ; /*---Global Cluster 2 : Cluster Component 91------ */
GC2_CLUS92 = 0 ; /*---Global Cluster 2 : Cluster Component 92------ */
GC2_CLUS93 = 0 ; /*---Global Cluster 2 : Cluster Component 93------ */
GC2_CLUS94 = 0 ; /*---Global Cluster 2 : Cluster Component 94------ */
GC2_CLUS95 = 0 ; /*---Global Cluster 2 : Cluster Component 95------ */
GC2_CLUS96 = 0 ; /*---Global Cluster 2 : Cluster Component 96------ */
GC2_CLUS97 = 0 ; /*---Global Cluster 2 : Cluster Component 97------ */
GC2_CLUS98 = 0 ; /*---Global Cluster 2 : Cluster Component 98------ */
GC2_CLUS99 = 0 ; /*---Global Cluster 2 : Cluster Component 99------ */
GC2_CLUS100 = 0 ; /*---Global Cluster 2 : Cluster Component 100------ */
GC2_CLUS101 = 0 ; /*---Global Cluster 2 : Cluster Component 101------ */
GC2_CLUS102 = 0 ; /*---Global Cluster 2 : Cluster Component 102------ */
GC2_CLUS103 = 0 ; /*---Global Cluster 2 : Cluster Component 103------ */
GC2_CLUS104 = 0 ; /*---Global Cluster 2 : Cluster Component 104------ */
GC2_CLUS105 = 0 ; /*---Global Cluster 2 : Cluster Component 105------ */
GC2_CLUS106 = 0 ; /*---Global Cluster 2 : Cluster Component 106------ */
GC2_CLUS107 = 0 ; /*---Global Cluster 2 : Cluster Component 107------ */
GC2_CLUS108 = 0 ; /*---Global Cluster 2 : Cluster Component 108------ */
GC2_CLUS109 = 0 ; /*---Global Cluster 2 : Cluster Component 109------ */
GC2_CLUS110 = 0 ; /*---Global Cluster 2 : Cluster Component 110------ */
GC2_CLUS111 = 0 ; /*---Global Cluster 2 : Cluster Component 111------ */
GC2_CLUS112 = 0 ; /*---Global Cluster 2 : Cluster Component 112------ */
GC2_CLUS113 = 0 ; /*---Global Cluster 2 : Cluster Component 113------ */
GC2_CLUS78 = GC2_CLUS78+0.70353556661398 * (ACTBUY1 - 0.37512021095082)/0.48416145062171;
GC2_CLUS104 = GC2_CLUS104+1 * (ACTBUY10 - 0.00006204436171)/0.00787670215937;
GC2_CLUS60 = GC2_CLUS60+0.68397308788197 * (ACTBUY2 - 0.13730417248332)/0.34417351938694;
GC2_CLUS59 = GC2_CLUS59+1 * (ACTBUY4 - 0.02196370404839)/0.14656727523669;
GC2_CLUS30 = GC2_CLUS30+0.57714998674326 * (ACTBUY6 - 0.00499457111834)/0.07049666340397;
GC2_CLUS39 = GC2_CLUS39+0.66549016136596 * (ACTBUY7 - 0.00186133085155)/0.04310364179361;
GC2_CLUS113 = GC2_CLUS113+0.65332668135995 * (ACTBUY8 - 0.00105475414921)/0.03246035012406;
GC2_CLUS49 = GC2_CLUS49+0.68252296374203 * (ACTBUY9 - 0.00024817744687)/0.01575193804466;
GC2_CLUS10 = GC2_CLUS10+0.39970826371579 * (BUYPROP - 0.18928931964407)/0.25656954904129;
GC2_CLUS1 = GC2_CLUS1+-0.33332429688878 * (CCPAYM0 - 0.58303086706995)/0.49306532733706;
GC2_CLUS1 = GC2_CLUS1+0.33332429688878 * (CCPAYM1 - 0.41696913293004)/0.49306532733706;
GC2_CLUS45 = GC2_CLUS45+0.62731005863842 * (DEPT073 - 0.00555297037381)/0.07431222112026;
GC2_CLUS27 = GC2_CLUS27+0.64067029032571 * (DEPT074 - 0.00065146579804)/0.02551590852213;
GC2_CLUS7 = GC2_CLUS7+0.17669683248332 * (DEPT075 - 0.00077555452148)/0.02783841012245;
GC2_CLUS73 = GC2_CLUS73+1 * (DEPT076 - 0.00006204436171)/0.00787670215937;
GC2_CLUS98 = GC2_CLUS98+0.70707575816053 * (DEPT077 - 0.00012408872343)/0.01113899342716;
GC2_CLUS58 = GC2_CLUS58+1 * (DEPT078 - 0.00003102218085)/0.00556975590661;
GC2_CLUS1 = GC2_CLUS1+0.00329291728751 * (DEPT1110 - 0.00003102218085)/0.00556975590661;
GC2_CLUS6 = GC2_CLUS6+0.34430827911286 * (DEPT1111 - 0.00009306654257)/0.009646800928;
GC2_CLUS17 = GC2_CLUS17+0.57735623987417 * (DEPT1113 - 0.00006204436171)/0.00787670215937;
GC2_CLUS107 = GC2_CLUS107+1 * (DEPT1116 - 0.00003102218085)/0.00556975590661;
GC2_CLUS80 = GC2_CLUS80+1 * (DEPT1118 - 0.00003102218085)/0.00556975590661;
GC2_CLUS84 = GC2_CLUS84+1 * (DEPT113 - 0.03601675197766)/0.18633470601066;
GC2_CLUS69 = GC2_CLUS69+0.68987520962959 * (DEPT114 - 0.00210950829843)/0.04588162571985;
GC2_CLUS45 = GC2_CLUS45+0.64775444987474 * (DEPT115 - 0.00390879478827)/0.06239901361948;
GC2_CLUS36 = GC2_CLUS36+0.47773193756148 * (DEPT116 - 0.00055839925546)/0.02362424092676;
GC2_CLUS66 = GC2_CLUS66+0.52357424607076 * (DEPT117 - 0.0006824879789)/0.02611595963267;
GC2_CLUS18 = GC2_CLUS18+0.59586828169466 * (DEPT118 - 0.00018613308515)/0.01364200179552;
GC2_CLUS88 = GC2_CLUS88+1 * (DEPT119 - 0.00018613308515)/0.01364200179552;
GC2_CLUS19 = GC2_CLUS19+0.63345348271587 * (DEPT1210 - 0.00006204436171)/0.00787670215937;
GC2_CLUS38 = GC2_CLUS38+0.66418116073498 * (DEPT1211 - 0.00012408872343)/0.01113899342716;
GC2_CLUS108 = GC2_CLUS108+1 * (DEPT1212 - 0.00003102218085)/0.00556975590661;
GC2_CLUS70 = GC2_CLUS70+1 * (DEPT1215 - 0.00006204436171)/0.00787670215937;
GC2_CLUS6 = GC2_CLUS6+0.40886734513699 * (DEPT1216 - 0.00003102218085)/0.00556975590661;
GC2_CLUS4 = GC2_CLUS4+0.02178413003067 * (DEPT124 - 0.00245075228788)/0.04944514076042;
GC2_CLUS95 = GC2_CLUS95+1 * (DEPT126 - 0.00071351015976)/0.02670249393877;
GC2_CLUS66 = GC2_CLUS66+0.6406563678686 * (DEPT127 - 0.00105475414921)/0.03246035012406;
GC2_CLUS96 = GC2_CLUS96+1 * (DEPT128 - 0.00034124398945)/0.01846992487371;
GC2_CLUS63 = GC2_CLUS63+1 * (DEPT129 - 0.00046533271288)/0.02156688683426;
GC2_CLUS83 = GC2_CLUS83+1 * (DEPT1710 - 0.00040328835117)/0.02007830211705;
GC2_CLUS2 = GC2_CLUS2+0.02514555127208 * (DEPT1711 - 0.00015511090429)/0.01245358005496;
GC2_CLUS64 = GC2_CLUS64+0.68226069224856 * (DEPT1712 - 0.00018613308515)/0.01364200179552;
GC2_CLUS102 = GC2_CLUS102+1 * (DEPT1713 - 0.00009306654257)/0.009646800928;
GC2_CLUS14 = GC2_CLUS14+0.57735474715094 * (DEPT1714 - 0.00012408872343)/0.01113899342716;
GC2_CLUS42 = GC2_CLUS42+0.67786792202818 * (DEPT1715 - 0.00006204436171)/0.00787670215937;
GC2_CLUS30 = GC2_CLUS30+0.51627402313528 * (DEPT1716 - 0.00003102218085)/0.00556975590661;
GC2_CLUS94 = GC2_CLUS94+1 * (DEPT1717 - 0.00012408872343)/0.01113899342716;
GC2_CLUS29 = GC2_CLUS29+0.64551725438192 * (DEPT1723 - 0.00003102218085)/0.00556975590661;
GC2_CLUS86 = GC2_CLUS86+0.69854849681034 * (DEPT173 - 0.03449666511555)/0.18250391362458;
GC2_CLUS24 = GC2_CLUS24+1 * (DEPT1734 - 0.00003102218085)/0.00556975590661;
GC2_CLUS52 = GC2_CLUS52+0.50277107424889 * (DEPT174 - 0.00499457111834)/0.07049666340397;
GC2_CLUS46 = GC2_CLUS46+0.68897448677127 * (DEPT175 - 0.00536683728866)/0.07306298617482;
GC2_CLUS54 = GC2_CLUS54+0.69824018440402 * (DEPT176 - 0.00161315340468)/0.04013229503948;
GC2_CLUS35 = GC2_CLUS35+0.44094101442433 * (DEPT177 - 0.0013649759578)/0.03692093019532;
GC2_CLUS23 = GC2_CLUS23+0.63774481204568 * (DEPT178 - 0.00058942143632)/0.02427122357082;
GC2_CLUS36 = GC2_CLUS36+0.60850012622475 * (DEPT179 - 0.00046533271288)/0.02156688683426;
GC2_CLUS53 = GC2_CLUS53+0.67169600462885 * (DEPT1810 - 0.00015511090429)/0.01245358005496;
GC2_CLUS62 = GC2_CLUS62+1 * (DEPT1811 - 0.00012408872343)/0.01113899342716;
GC2_CLUS20 = GC2_CLUS20+0.0042240149445 * (DEPT1812 - 0.00003102218085)/0.00556975590661;
GC2_CLUS39 = GC2_CLUS39+0.66549016136596 * (DEPT1813 - 0.00003102218085)/0.00556975590661;
GC2_CLUS85 = GC2_CLUS85+1 * (DEPT183 - 0.02953311617806)/0.16929796330267;
GC2_CLUS78 = GC2_CLUS78+-0.70353556661397 * (DEPT184 - 0.00341243989452)/0.05831724146293;
GC2_CLUS54 = GC2_CLUS54+0.69824018440403 * (DEPT185 - 0.00310221808593)/0.0556119615809;
GC2_CLUS93 = GC2_CLUS93+1 * (DEPT186 - 0.00062044361718)/0.02490136347819;
GC2_CLUS49 = GC2_CLUS49+0.68252296374204 * (DEPT187 - 0.00071351015976)/0.02670249393877;
GC2_CLUS35 = GC2_CLUS35+0.62426814790219 * (DEPT188 - 0.00009306654257)/0.009646800928;
GC2_CLUS32 = GC2_CLUS32+0.59587096142352 * (DEPT189 - 0.00009306654257)/0.009646800928;
GC2_CLUS91 = GC2_CLUS91+1 * (DEPT1910 - 0.00015511090429)/0.01245358005496;
GC2_CLUS41 = GC2_CLUS41+0.54204900992923 * (DEPT1911 - 0.00009306654257)/0.009646800928;
GC2_CLUS103 = GC2_CLUS103+1 * (DEPT1912 - 0.00006204436171)/0.00787670215937;
GC2_CLUS23 = GC2_CLUS23+0.63774481204568 * (DEPT1913 - 0.00003102218085)/0.00556975590661;
GC2_CLUS82 = GC2_CLUS82+1 * (DEPT1914 - 0.00003102218085)/0.00556975590661;
GC2_CLUS18 = GC2_CLUS18+0.59586828169466 * (DEPT1915 - 0.00003102218085)/0.00556975590661;
GC2_CLUS109 = GC2_CLUS109+1 * (DEPT1918 - 0.00003102218085)/0.00556975590661;
GC2_CLUS14 = GC2_CLUS14+0.57735474715094 * (DEPT1920 - 0.00003102218085)/0.00556975590661;
GC2_CLUS45 = GC2_CLUS45+0.37224529748561 * (DEPT193 - 0.01091980766247)/0.1039273810436;
GC2_CLUS52 = GC2_CLUS52+0.55631930384165 * (DEPT194 - 0.00331937335194)/0.05751919460555;
GC2_CLUS86 = GC2_CLUS86+0.69854849681035 * (DEPT195 - 0.00210950829843)/0.04588162571985;
GC2_CLUS35 = GC2_CLUS35+0.52925200332639 * (DEPT196 - 0.00080657670234)/0.02838927858765;
GC2_CLUS90 = GC2_CLUS90+1 * (DEPT197 - 0.00034124398945)/0.01846992487371;
GC2_CLUS100 = GC2_CLUS100+1 * (DEPT198 - 0.00027919962773)/0.01670719409516;
GC2_CLUS77 = GC2_CLUS77+1 * (DEPT203 - 0.00859314409803)/0.0923014965646;
GC2_CLUS52 = GC2_CLUS52+0.6058886256251 * (DEPT204 - 0.00012408872343)/0.01113899342716;
GC2_CLUS53 = GC2_CLUS53+0.67169600462885 * (DEPT205 - 0.0005273770746)/0.02295899170903;
GC2_CLUS113 = GC2_CLUS113+0.65332668135995 * (DEPT206 - 0.00003102218085)/0.00556975590661;
GC2_CLUS50 = GC2_CLUS50+1 * (DEPT207 - 0.00003102218085)/0.00556975590661;
GC2_CLUS87 = GC2_CLUS87+1 * (DEPT208 - 0.00003102218085)/0.00556975590661;
GC2_CLUS41 = GC2_CLUS41+0.47434059563156 * (DEPT213 - 0.00527377074608)/0.07243010999791;
GC2_CLUS89 = GC2_CLUS89+1 * (DEPT214 - 0.00012408872343)/0.01113899342716;
GC2_CLUS81 = GC2_CLUS81+1 * (DEPT215 - 0.00024817744687)/0.01575193804466;
GC2_CLUS57 = GC2_CLUS57+1 * (DEPT216 - 0.00006204436171)/0.00787670215937;
GC2_CLUS9 = GC2_CLUS9+0.49999999999999 * (DEPT219 - 0.00003102218085)/0.00556975590661;
GC2_CLUS79 = GC2_CLUS79+1 * (DEPT2610 - 0.00003102218085)/0.00556975590661;
GC2_CLUS31 = GC2_CLUS31+0.65969471433918 * (DEPT2611 - 0.00009306654257)/0.009646800928;
GC2_CLUS51 = GC2_CLUS51+1 * (DEPT2614 - 0.00003102218085)/0.00556975590661;
GC2_CLUS27 = GC2_CLUS27+0.64067029032571 * (DEPT2615 - 0.00003102218085)/0.00556975590661;
GC2_CLUS110 = GC2_CLUS110+1 * (DEPT2625 - 0.00003102218085)/0.00556975590661;
GC2_CLUS60 = GC2_CLUS60+0.68397308788197 * (DEPT263 - 0.03750581665891)/0.19000065864136;
GC2_CLUS67 = GC2_CLUS67+1 * (DEPT264 - 0.00719714595936)/0.0845314658605;
GC2_CLUS10 = GC2_CLUS10+0.06806844783012 * (DEPT265 - 0.00456026058631)/0.06737659414192;
GC2_CLUS7 = GC2_CLUS7+0.47478642904489 * (DEPT2655 - 0.00003102218085)/0.00556975590661;
GC2_CLUS37 = GC2_CLUS37+0.68491175726902 * (DEPT266 - 0.00158213122382)/0.03974515177532;
GC2_CLUS64 = GC2_CLUS64+0.68226069224856 * (DEPT267 - 0.00093066542577)/0.03049308336231;
GC2_CLUS6 = GC2_CLUS6+0.21561426346472 * (DEPT268 - 0.00034124398945)/0.01846992487371;
GC2_CLUS44 = GC2_CLUS44+0.66346428541317 * (DEPT269 - 0.00027919962773)/0.01670719409516;
GC2_CLUS4 = GC2_CLUS4+0.40749109174143 * (DOLINDEA - 47.8585866898046)/37.591191668842;
GC2_CLUS2 = GC2_CLUS2+0.36456818827751 * (DOLL24 - 45.4938073522568)/93.9875146751151;
GC2_CLUS15 = GC2_CLUS15+0.57886604578675 * (DOLLARQ16 - 7.79008624166279)/31.0104071776129;
GC2_CLUS10 = GC2_CLUS10+0.37752072046688 * (DOLLARQ20 - 8.71046657360012)/32.6472704396304;
GC2_CLUS16 = GC2_CLUS16+0.57237976067252 * (DOLLARQ21 - 4.74636513106871)/24.268088572003;
GC2_CLUS2 = GC2_CLUS2+0.47693471375806 * (DOLLARQ22 - 4.88413153404684)/24.8521912523649;
GC2_CLUS4 = GC2_CLUS4+0.40652407151951 * (DOLNETDA - 45.411597554134)/36.1502695431938;
GC2_CLUS1 = GC2_CLUS1+0.33332429688878 * (METHPAYMCC - 0.41696913293004)/0.49306532733706;
GC2_CLUS20 = GC2_CLUS20+0.33331284650558 * (METHPAYMCK - 0.3029315960912)/0.45953301856693;
GC2_CLUS20 = GC2_CLUS20+-0.33331284650558 * (PCPAYM0 - 0.69706840390879)/0.45953301856693;
GC2_CLUS20 = GC2_CLUS20+0.33331284650558 * (PCPAYM1 - 0.3029315960912)/0.45953301856693;
GC2_CLUS99 = GC2_CLUS99+1 * (TOTORDQ013 - 0.00077555452148)/0.02783841012245;
GC2_CLUS6 = GC2_CLUS6+0.24599420649499 * (TOTORDQ014 - 0.00024817744687)/0.01575193804466;
GC2_CLUS22 = GC2_CLUS22+0.63612934622951 * (TOTORDQ015 - 0.00009306654257)/0.009646800928;
GC2_CLUS41 = GC2_CLUS41+0.59862385735495 * (TOTORDQ023 - 0.00120986505351)/0.03476260589299;
GC2_CLUS56 = GC2_CLUS56+0.67262738415027 * (TOTORDQ024 - 0.00018613308515)/0.01364200179552;
GC2_CLUS12 = GC2_CLUS12+0.54119783878849 * (TOTORDQ025 - 0.00003102218085)/0.00556975590661;
GC2_CLUS25 = GC2_CLUS25+0.34009901812203 * (TOTORDQ032 - 0.00384675042655)/0.06190373023441;
GC2_CLUS56 = GC2_CLUS56+0.67262738415027 * (TOTORDQ033 - 0.00046533271288)/0.02156688683426;
GC2_CLUS26 = GC2_CLUS26+1 * (TOTORDQ034 - 0.00003102218085)/0.00556975590661;
GC2_CLUS66 = GC2_CLUS66+0.51162142287849 * (TOTORDQ042 - 0.00604932526756)/0.07754300397319;
GC2_CLUS21 = GC2_CLUS21+0.64068097272847 * (TOTORDQ044 - 0.00021715526601)/0.01473481743971;
GC2_CLUS11 = GC2_CLUS11+0.60779357584955 * (TOTORDQ045 - 0.00006204436171)/0.00787670215937;
GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ046 - 0.00003102218085)/0.00556975590661;
GC2_CLUS43 = GC2_CLUS43+0.54431506285932 * (TOTORDQ052 - 0.00772452303396)/0.08755051436602;
GC2_CLUS25 = GC2_CLUS25+0.50763358740718 * (TOTORDQ053 - 0.00133395377695)/0.03649952975734;
GC2_CLUS17 = GC2_CLUS17+0.57735623987417 * (TOTORDQ054 - 0.00006204436171)/0.00787670215937;
GC2_CLUS112 = GC2_CLUS112+0.6494013995197 * (TOTORDQ055 - 0.00003102218085)/0.00556975590661;
GC2_CLUS34 = GC2_CLUS34+0.53399486213598 * (TOTORDQ062 - 0.00626648053358)/0.07891390842548;
GC2_CLUS43 = GC2_CLUS43+0.35716547598315 * (TOTORDQ063 - 0.00086862106406)/0.02946003200026;
GC2_CLUS11 = GC2_CLUS11+0.60779357584955 * (TOTORDQ064 - 0.00012408872343)/0.01113899342716;
GC2_CLUS46 = GC2_CLUS46+0.68897448677127 * (TOTORDQ065 - 0.00006204436171)/0.00787670215937;
GC2_CLUS34 = GC2_CLUS34+0.62858790425642 * (TOTORDQ073 - 0.0008375988832)/0.02892962624192;
GC2_CLUS55 = GC2_CLUS55+1 * (TOTORDQ074 - 0.00012408872343)/0.01113899342716;
GC2_CLUS101 = GC2_CLUS101+1 * (TOTORDQ075 - 0.00006204436171)/0.00787670215937;
GC2_CLUS30 = GC2_CLUS30+0.52386769059736 * (TOTORDQ082 - 0.01002016441755)/0.09959954048469;
GC2_CLUS40 = GC2_CLUS40+0.67110241524981 * (TOTORDQ083 - 0.00117884287265)/0.03431457023532;
GC2_CLUS38 = GC2_CLUS38+0.66418116073498 * (TOTORDQ084 - 0.00043431053203)/0.02083591548788;
GC2_CLUS21 = GC2_CLUS21+0.64068097272847 * (TOTORDQ085 - 0.00009306654257)/0.009646800928;
GC2_CLUS111 = GC2_CLUS111+1 * (TOTORDQ086 - 0.00003102218085)/0.00556975590661;
GC2_CLUS43 = GC2_CLUS43+0.53531037024411 * (TOTORDQ092 - 0.00732123468279)/0.08525174291693;
GC2_CLUS19 = GC2_CLUS19+0.63345348271587 * (TOTORDQ093 - 0.00102373196835)/0.03197992601749;
GC2_CLUS97 = GC2_CLUS97+1 * (TOTORDQ094 - 0.00015511090429)/0.01245358005496;
GC2_CLUS20 = GC2_CLUS20+-0.00259612740039 * (TOTORDQ095 - 0.00006204436171)/0.00787670215937;
GC2_CLUS3 = GC2_CLUS3+0.06870363678907 * (TOTORDQ103 - 0.00089964324492)/0.02998102352496;
GC2_CLUS6 = GC2_CLUS6+0.1734756877022 * (TOTORDQ113 - 0.00055839925546)/0.02362424092676;
GC2_CLUS5 = GC2_CLUS5+0.30154120549812 * (TOTORDQ114 - 0.00015511090429)/0.01245358005496;
GC2_CLUS33 = GC2_CLUS33+0.65467906584889 * (TOTORDQ117 - 0.00003102218085)/0.00556975590661;
GC2_CLUS40 = GC2_CLUS40+0.67110241524981 * (TOTORDQ123 - 0.00164417558554)/0.04051571541781;
GC2_CLUS34 = GC2_CLUS34+0.45168699341674 * (TOTORDQ124 - 0.00021715526601)/0.01473481743971;
GC2_CLUS5 = GC2_CLUS5+0.32466521308135 * (TOTORDQ125 - 0.00012408872343)/0.01113899342716;
GC2_CLUS105 = GC2_CLUS105+1 * (TOTORDQ126 - 0.00003102218085)/0.00556975590661;
GC2_CLUS98 = GC2_CLUS98+-0.70707575815949 * (TOTORDQ127 - 0.00006204436171)/0.00787670215937;
GC2_CLUS8 = GC2_CLUS8+0.14736096434836 * (TOTORDQ133 - 0.00120986505351)/0.03476260589299;
GC2_CLUS5 = GC2_CLUS5+0.32466521308135 * (TOTORDQ134 - 0.00012408872343)/0.01113899342716;
GC2_CLUS32 = GC2_CLUS32+0.59587096142352 * (TOTORDQ135 - 0.00006204436171)/0.00787670215937;
GC2_CLUS43 = GC2_CLUS43+0.43483115815083 * (TOTORDQ142 - 0.00710407941678)/0.08398708411191;
GC2_CLUS69 = GC2_CLUS69+0.68987520962959 * (TOTORDQ143 - 0.0006824879789)/0.02611595963267;
GC2_CLUS47 = GC2_CLUS47+0.67314490125425 * (TOTORDQ144 - 0.00009306654257)/0.009646800928;
GC2_CLUS9 = GC2_CLUS9+0.5 * (TOTORDQ145 - 0.00003102218085)/0.00556975590661;
GC2_CLUS5 = GC2_CLUS5+0.41753813304935 * (TOTORDQ146 - 0.00003102218085)/0.00556975590661;
GC2_CLUS33 = GC2_CLUS33+0.65467906584889 * (TOTORDQ153 - 0.00111679851093)/0.03340038742182;
GC2_CLUS65 = GC2_CLUS65+1 * (TOTORDQ154 - 0.00012408872343)/0.01113899342716;
GC2_CLUS25 = GC2_CLUS25+0.60980192262847 * (TOTORDQ155 - 0.00003102218085)/0.00556975590661;
GC2_CLUS13 = GC2_CLUS13+0.57735474715094 * (TOTORDQ158 - 0.00003102218085)/0.00556975590661;
GC2_CLUS15 = GC2_CLUS15+0.57886604578675 * (TOTORDQ161 - 0.10696447960291)/0.30907287673359;
GC2_CLUS61 = GC2_CLUS61+1 * (TOTORDQ162 - 0.01495269117418)/0.12136541988586;
GC2_CLUS42 = GC2_CLUS42+0.67786792202819 * (TOTORDQ163 - 0.00198541957499)/0.04451448253965;
GC2_CLUS31 = GC2_CLUS31+0.65969471433917 * (TOTORDQ164 - 0.00046533271288)/0.02156688683426;
GC2_CLUS13 = GC2_CLUS13+0.57735474715094 * (TOTORDQ165 - 0.00012408872343)/0.01113899342716;
GC2_CLUS28 = GC2_CLUS28+0.64441966911372 * (TOTORDQ166 - 0.00006204436171)/0.00787670215937;
GC2_CLUS106 = GC2_CLUS106+1 * (TOTORDQ167 - 0.00003102218085)/0.00556975590661;
GC2_CLUS36 = GC2_CLUS36+0.54512403750316 * (TOTORDQ173 - 0.0013649759578)/0.03692093019532;
GC2_CLUS28 = GC2_CLUS28+0.64441966911372 * (TOTORDQ174 - 0.00037226617031)/0.01929090803403;
GC2_CLUS8 = GC2_CLUS8+0.48289057790701 * (TOTORDQ175 - 0.00003102218085)/0.00556975590661;
GC2_CLUS47 = GC2_CLUS47+0.67314490125425 * (TOTORDQ183 - 0.00096168760663)/0.03099665416568;
GC2_CLUS48 = GC2_CLUS48+1 * (TOTORDQ184 - 0.00012408872343)/0.01113899342716;
GC2_CLUS8 = GC2_CLUS8+0.48289057790701 * (TOTORDQ185 - 0.00003102218085)/0.00556975590661;
GC2_CLUS25 = GC2_CLUS25+0.2838334689879 * (TOTORDQ192 - 0.00573910345897)/0.07554034136585;
GC2_CLUS6 = GC2_CLUS6+0.1549639170417 * (TOTORDQ193 - 0.00071351015976)/0.02670249393877;
GC2_CLUS12 = GC2_CLUS12+0.54119783878849 * (TOTORDQ195 - 0.00006204436171)/0.00787670215937;
GC2_CLUS10 = GC2_CLUS10+0.42411828228172 * (TOTORDQ201 - 0.12349930200093)/0.32901456286213;
GC2_CLUS92 = GC2_CLUS92+1 * (TOTORDQ2010 - 0.00003102218085)/0.00556975590661;
GC2_CLUS37 = GC2_CLUS37+0.68491175726902 * (TOTORDQ202 - 0.01247091670544)/0.11097646148697;
GC2_CLUS7 = GC2_CLUS7+0.47478642904489 * (TOTORDQ2027 - 0.00003102218085)/0.00556975590661;
GC2_CLUS68 = GC2_CLUS68+1 * (TOTORDQ203 - 0.00189235303241)/0.04346067910265;
GC2_CLUS6 = GC2_CLUS6+0.15819736892783 * (TOTORDQ204 - 0.0006824879789)/0.02611595963267;
GC2_CLUS44 = GC2_CLUS44+0.66346428541317 * (TOTORDQ205 - 0.00018613308515)/0.01364200179552;
GC2_CLUS3 = GC2_CLUS3+0.22278771013915 * (TOTORDQ207 - 0.00006204436171)/0.00787670215937;
GC2_CLUS16 = GC2_CLUS16+0.57237976067252 * (TOTORDQ211 - 0.07280905847681)/0.25982685347701;
GC2_CLUS76 = GC2_CLUS76+1 * (TOTORDQ212 - 0.00763145649139)/0.08702558421647;
GC2_CLUS112 = GC2_CLUS112+0.6494013995197 * (TOTORDQ213 - 0.00089964324492)/0.02998102352496;
GC2_CLUS72 = GC2_CLUS72+1 * (TOTORDQ214 - 0.00015511090429)/0.01245358005496;
GC2_CLUS71 = GC2_CLUS71+1 * (TOTORDQ215 - 0.00003102218085)/0.00556975590661;
GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ219 - 0.00003102218085)/0.00556975590661;
GC2_CLUS2 = GC2_CLUS2+0.42748122980757 * (TOTORDQ221 - 0.07097874980611)/0.25679332657203;
GC2_CLUS75 = GC2_CLUS75+1 * (TOTORDQ222 - 0.00586319218241)/0.0763478617121;
GC2_CLUS29 = GC2_CLUS29+0.64551725438192 * (TOTORDQ223 - 0.00077555452148)/0.02783841012245;
GC2_CLUS22 = GC2_CLUS22+0.63612934622951 * (TOTORDQ224 - 0.00018613308515)/0.01364200179552;
GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ225 - 0.00003102218085)/0.00556975590661;
GC2_CLUS74 = GC2_CLUS74+1 * (TOTORDQ226 - 0.00003102218085)/0.00556975590661;
GC2_CLUS4 = GC2_CLUS4+0.3088289367104 * (UNTLANPO - 2.67912081406979)/2.42439611488132;
 
/*-------------------------------------------------*/
/* Varclus Score Code Begins: GCLUSTER 3*/
/*-------------------------------------------------*/
 
GC3_CLUS1 = 0 ; /*---Global Cluster 3 : Cluster Component 1------ */
GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (DEPT0711 - 0.00006204436171)/0.00787670215937;
GC3_CLUS1 = GC3_CLUS1+0.04796917964258 * (DEPT199 - 0.00015511090429)/0.01245358005496;
GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (DEPT2622 - 0.00003102218085)/0.00556975590661;
GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ016 - 0.00003102218085)/0.00556975590661;
GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ028 - 0.00003102218085)/0.00556975590661;
GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ049 - 0.00003102218085)/0.00556975590661;
GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ069 - 0.00003102218085)/0.00556975590661;
GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (TOTORDQ078 - 0.00006204436171)/0.00787670215937;
GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ0810 - 0.00003102218085)/0.00556975590661;
GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ106 - 0.00003102218085)/0.00556975590661;
GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ129 - 0.00003102218085)/0.00556975590661;
GC3_CLUS1 = GC3_CLUS1+0.05334450065098 * (TOTORDQ194 - 0.00012408872343)/0.01113899342716;
GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (TOTORDQ208 - 0.00006204436171)/0.00787670215937;
 
/*-------------------------------------------------*/
/* Varclus Score Code Begins: GCLUSTER 4*/
/*-------------------------------------------------*/
 
GC4_CLUS1 = 0 ; /*---Global Cluster 4 : Cluster Component 1------ */
GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ0416 - 0.00003102218085)/0.00556975590661;
GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ0823 - 0.00003102218085)/0.00556975590661;
GC4_CLUS1 = GC4_CLUS1+0.24999999999999 * (TOTORDQ1221 - 0.00003102218085)/0.00556975590661;
GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ1610 - 0.00003102218085)/0.00556975590661;
 
/*-------------------------------------------------*/
/* Varclus Score Code Begins: GCLUSTER 5*/
/*-------------------------------------------------*/
 
GC5_CLUS1 = 0 ; /*---Global Cluster 5 : Cluster Component 1------ */
GC5_CLUS2 = 0 ; /*---Global Cluster 5 : Cluster Component 2------ */
GC5_CLUS3 = 0 ; /*---Global Cluster 5 : Cluster Component 3------ */
GC5_CLUS4 = 0 ; /*---Global Cluster 5 : Cluster Component 4------ */
GC5_CLUS5 = 0 ; /*---Global Cluster 5 : Cluster Component 5------ */
GC5_CLUS6 = 0 ; /*---Global Cluster 5 : Cluster Component 6------ */
GC5_CLUS7 = 0 ; /*---Global Cluster 5 : Cluster Component 7------ */
GC5_CLUS3 = GC5_CLUS3+0.46584247564733 * (ACTBUY0 - 0.39695982627578)/0.48927512608284;
GC5_CLUS2 = GC5_CLUS2+0.30919640480675 * (BOTHPAYM0 - 0.80645261361873)/0.39508434277919;
GC5_CLUS1 = GC5_CLUS1+0.30120355255709 * (DAYLAST - 1182.17608189855)/1226.0780195912;
GC5_CLUS6 = GC5_CLUS6+0.34736590127286 * (DEPT070 - 0.99270978749806)/0.08507226234284;
GC5_CLUS2 = GC5_CLUS2+0.18415939769064 * (DEPT110 - 0.95607259190321)/0.20493680444998;
GC5_CLUS2 = GC5_CLUS2+0.22269123339442 * (DEPT120 - 0.93829688227082)/0.24061928248315;
GC5_CLUS6 = GC5_CLUS6+0.47994471288021 * (DEPT170 - 0.94986815573134)/0.21822034675722;
GC5_CLUS6 = GC5_CLUS6+0.5124243913791 * (DEPT180 - 0.96209089498991)/0.1909794131409;
GC5_CLUS6 = GC5_CLUS6+0.50692052068599 * (DEPT190 - 0.98160384675042)/0.13438115568369;
GC5_CLUS7 = GC5_CLUS7+0.69209117872376 * (DEPT200 - 0.99066232356134)/0.09618092958834;
GC5_CLUS7 = GC5_CLUS7+0.69209117872377 * (DEPT210 - 0.99426089654102)/0.07554034136585;
GC5_CLUS3 = GC5_CLUS3+0.2143347187659 * (DEPT260 - 0.94732433690088)/0.22338864272858;
GC5_CLUS1 = GC5_CLUS1+0.26325511297008 * (METHPAYMDK - 0.08655188459748)/0.28118162916549;
GC5_CLUS1 = GC5_CLUS1+0.301209444711 * (MONLAST - 38.7579959671164)/40.2783526824403;
GC5_CLUS1 = GC5_CLUS1+0.17996233854645 * (TENURE - 83.4682798200713)/60.0499642836247;
GC5_CLUS2 = GC5_CLUS2+0.27025622569311 * (TOTORDQ010 - 0.93240266790755)/0.25105753944269;
GC5_CLUS2 = GC5_CLUS2+0.26794135607021 * (TOTORDQ020 - 0.93587715216379)/0.24497544765707;
GC5_CLUS2 = GC5_CLUS2+0.2076019813346 * (TOTORDQ030 - 0.94645571583682)/0.22511967032131;
GC5_CLUS3 = GC5_CLUS3+0.23186226466653 * (TOTORDQ040 - 0.91928028540406)/0.27240841454353;
GC5_CLUS2 = GC5_CLUS2+0.26895627760627 * (TOTORDQ050 - 0.92303396928804)/0.26654167550805;
GC5_CLUS2 = GC5_CLUS2+0.24380069908289 * (TOTORDQ060 - 0.92818365131068)/0.25818758435395;
GC5_CLUS2 = GC5_CLUS2+0.23486245182423 * (TOTORDQ070 - 0.92405770125639)/0.26490987723425;
GC5_CLUS3 = GC5_CLUS3+0.28470626429186 * (TOTORDQ080 - 0.89734760353652)/0.30350904378116;
GC5_CLUS5 = GC5_CLUS5+0.34171694062004 * (TOTORDQ090 - 0.91887699705289)/0.2730281558173;
GC5_CLUS5 = GC5_CLUS5+0.33889336426033 * (TOTORDQ100 - 0.93345742205677)/0.24923200086665;
GC5_CLUS5 = GC5_CLUS5+0.3462003434009 * (TOTORDQ110 - 0.92294090274546)/0.26668933083571;
GC5_CLUS3 = GC5_CLUS3+0.29888805736787 * (TOTORDQ120 - 0.89061579029005)/0.31212549820402;
GC5_CLUS5 = GC5_CLUS5+0.3380603013795 * (TOTORDQ130 - 0.90355203970839)/0.2952091712368;
GC5_CLUS5 = GC5_CLUS5+0.32450494073935 * (TOTORDQ140 - 0.9200868621064)/0.271162883384;
GC5_CLUS5 = GC5_CLUS5+0.33972226583648 * (TOTORDQ150 - 0.91378935939196)/0.2806791941105;
GC5_CLUS3 = GC5_CLUS3+0.29735414976665 * (TOTORDQ160 - 0.87538389948813)/0.33028822598524;
GC5_CLUS4 = GC5_CLUS4+0.39606761077979 * (TOTORDQ170 - 0.90532030401737)/0.29277655355917;
GC5_CLUS4 = GC5_CLUS4+0.43308794897106 * (TOTORDQ180 - 0.91667442221188)/0.27637799387312;
GC5_CLUS4 = GC5_CLUS4+0.37452554975409 * (TOTORDQ190 - 0.92560881029936)/0.26241051190929;
GC5_CLUS1 = GC5_CLUS1+0.11351555813635 * (TOTORDQ200 - 0.86108267411199)/0.34586560023062;
GC5_CLUS4 = GC5_CLUS4+0.37844592542621 * (TOTORDQ210 - 0.91844268652086)/0.27369333551993;
GC5_CLUS4 = GC5_CLUS4+0.36817602150559 * (TOTORDQ220 - 0.92213432604312)/0.26796424821009;
GC5_CLUS1 = GC5_CLUS1+0.14189323995962 * (UNITSLAP - 22.0808611006276)/19.5877886329162;
