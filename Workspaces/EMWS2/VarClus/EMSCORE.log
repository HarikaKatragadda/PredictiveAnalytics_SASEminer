*------------------------------------------------------------*
* Score Log
Date:                December 12, 2017
Time:                09:52:49
*------------------------------------------------------------*
18152   %let EMEXCEPTIONSTRING=;
18153   *------------------------------------------------------------*;
18154   * SCORE: VarClus;
18155   *------------------------------------------------------------*;
18156   %let EM_ACTION = SCORE;
18157   %let syscc = 0;
18158   
18159   %macro main;
18160   
18161      filename temp catalog 'sashelp.emexpl.variableclustering_macros.source';
18162      %include temp;
18163      filename temp catalog 'sashelp.emexpl.variableclustering_macros2.source';
18164      %include temp;
18165      filename temp;
18166   
18167     %SetProperties;
18168   
18169      %if %upcase(&EM_ACTION) = CREATE %then %do;
18170          filename temp catalog 'sashelp.emexpl.variableclustering_create.source';
18171          %include temp;
18172          filename temp;
18173          %create;
18174      %end;
18175      %else
18176      %if %upcase(&EM_ACTION) = TRAIN %then %do;
18177           filename temp catalog 'sashelp.emexpl.variableclustering_train.source';
18178              %include temp;
18179              filename temp;
18180              %train;
18181      %end;
18182      %else
18183      %if %upcase(&EM_ACTION) = SCORE %then %do;
18184              filename temp catalog 'sashelp.emexpl.variableclustering_score.source';
18185              %include temp;
18186              filename temp;
18187              %score;
18188      %end;
18189      %else
18190      %if %upcase(&EM_ACTION) = REPORT %then %do;
18191              filename temp catalog 'sashelp.emexpl.variableclustering_report.source';
18192              %include temp;
18193              filename temp;
18194              %report;
18195      %end;
18196      /*
18197      %if %upcase(&EM_ACTION) = OPENTESTTABLE %then %do;
18198          %put 'OPENING TABLE';
18199      %end;
18200      %if %upcase(&EM_ACTION) = CLOSETESTTABLE %then %do;
18201          %put 'CLOSE TABLE';
18202      %end;
18203      */
18204   %mend main;
18205   %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.VARIABLECLUSTERING_MACROS.SOURCE.
18206  +
18207  +/* Initialize property macro variables */
18208  +%macro SetProperties;
18209  +   %em_checkmacro(name=EM_PROPERTY_MAXCLUS,       global=Y, value=DEFAULT);
18210  +   %em_checkmacro(name=EM_PROPERTY_HIDEVARIABLE,  global=Y, value=Y);
18211  +   %em_checkmacro(name=EM_PROPERTY_PRINTOPTION,   global=Y, value=SHORT);
18212  +   %em_checkmacro(name=EM_PROPERTY_CLUSSOURCE,    global=Y, value=CORR);
18213  +   %em_checkmacro(name=EM_PROPERTY_CLUSCOMP,      global=Y, value=PRINCIPAL);
18214  +   %em_checkmacro(name=EM_PROPERTY_CLUSHIERACHY,      global=Y, value=Y);
18215  +   %em_checkmacro(name=EM_PROPERTY_INCLUDECLASSVAR,      global=Y, value=N);
18216  +   %em_checkmacro(name=EM_PROPERTY_EXPORTEDCOMP,      global=Y, value=CLUSTERCOMP);
18217  +   %em_checkmacro(name=EM_PROPERTY_MAXEIGEN,         global=Y, value=DEFAULT);
18218  +   %em_checkmacro(name=EM_PROPERTY_PROPORTION,      global=Y, value=DEFAULT);
18219  +   %em_checkmacro(name=EM_PROPERTY_PRINTOPTION,      global=Y, value=SHORT);
18220  +   %em_checkmacro(name=EM_PROPERTY_TWOSTAGECLUS,      global=Y, value=AUTO);
18221  +   %em_checkmacro(name=EM_PROPERTY_SUPPRESSSAMPWARN,      global=Y, value=N);
18222  +
18223  +%mend SetProperties;
18224  +
18225  +%Macro MakeDummyVariables(indata=,
18226  +                          outvar=,
18227  +                          outdata=,
18228  +                          fileref=,
18229  +                          recreatecmeta=N, /* optional */
18230  +                          incmeta=,     /* optional */
18231  +                          outcmeta=,    /* optional */
18232  +                          ndummyvars=_ndummyvars
18233  +                          );
18234  +    %global &ndummyvars;
18235  +
18236  +    proc dmdb batch data=&indata out=_dmdbdat dmdbcat=_dmdbcat classout=_classout;;
18237  +       class
18238  +       %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
18239  +       %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
18240  +    ;
18241  +    run;
18242  +    %let &ndummyvars = 0;
18243  +    data _null_;
18244  +    %let dsid = %sysfunc(open(work._classout));
18245  +      %let &ndummyvars = %sysfunc(attrn(&dsid, NOBS));
18246  +    %let dsid = %sysfunc(close(&dsid));
18247  +    run;
18248  +
18249  +    proc dmzip data=_dmdbdat dmdbcat=_dmdbcat;
18250  +       input
18251  +       %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
18252  +       %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
18253  +        / level=nominal stdize=no;
18254  +       make outvar = &outvar;
18255  +       score data = &indata out =&outdata;
18256  +       code  file=  "&fileref";
18257  +    run;
18258  +    %if &recreatecmeta eq Y %then %do;
18259  +    proc contents data =&outvar out=_tmpds(keep=NAME LABEL);
18260  +    data _tmpds;
18261  +        set _tmpds;
18262  +           ROLE = 'INPUT';
18263  +           LEVEL = 'INTERVAL';
18264  +           CREATOR='DMZIP';
18265  +           if NAME = '_TYPE_' then delete;
18266  +    run;
18267  +    data &outcmeta;
18268  +         set &incmeta _tmpds;
18269  +    run;
18270  +    %end;
18271  +    proc datasets lib=work nolist;
18272  +      delete  _dmdbdat _dmdbcat _classout
18273  +    %if &recreatecmeta eq Y %then %do;
18274  +    _tmpds
18275  +    %end;
18276  +    ;
18277  +    quit;
18278  +%Mend MakeDummyVariables;
18279  +
18280  +/*--- Determine Optimal Number of Cluster ----
18281  +%macro FindClusNum(statds=, groupds=, minvariation=);
18282  +   %global optnclus;
18283  +   data varclus_tmp(drop=_NAME_);
18284  +      set &statDs;
18285  +      where _type_ ='PROPOR';
18286  +   run;
18287  +   proc sort data=varclus_tmp;
18288  +      by _NCL_;
18289  +   run;
18290  +   proc transpose data=varclus_tmp out=varclus_tmp;
18291  +      by _NCL_;
18292  +      var %EM_INTERVAL_INPUT
18293  +      %if &EM_PROPERTY_INCLUDECLASSVAR eq Y %then %do;
18294  +      %let dsid = %sysfunc(open(&EM_USER_OUTDUMMY));
18295  +      %let nvar = %sysfunc(attrn(&dsid, NVAR));
18296  +          %do i = 2 %to &nvar;
18297  +          %let varname = %sysfunc(varname(&dsid, &i));
18298  +          &varname
18299  +          %end;
18300  +      %end;
18301  +   ;
18302  +   run;
18303  +
18304  +   %if &minVariation eq %then %do;
18305  +       %let minVariation = &EM_PROPERTY_MINVARIATION;
18306  +   %end;
18307  +   %if ^(0<&minVariation<100) %then %do;
18308  +       %let minVariation = 90;
18309  +   %end;
18310  +
18311  +   data _null_;
18312  +      set varclus_tmp end=eof;
18313  +      by _NCL_;
18314  +      retain flag 0;
18315  +      if first._ncl_ then flag=0;
18316  +      if .<col1 < &minVariation then flag=1;
18317  +      if last._ncl_ and ^flag then do;
18318  +         call symput('OPTNCL', _ncl_);
18319  +         stop;
18320  +      end;
18321  +     if eof then call symput('OPTNCL', _ncl_);
18322  +   run;
18323  +
18324  +   %let optnclus = &OPTNCL;
18325  +
18326  +   data varclus_tmp(drop=_NCL_ _NAME_);
18327  +      set &statDs;
18328  +      where _type_ in('RSQUARED' 'GROUP') and _NCL_=&OPTNCL;
18329  +   run;
18330  +   proc sort data=varclus_tmp;
18331  +      by _TYPE_;
18332  +   run;
18333  +   proc transpose data=varclus_tmp out=varclus_tmp;
18334  +      by _TYPE_;
18335  +   run;
18336  +   proc sort data=varclus_tmp;
18337  +      by _name_ _type_;
18338  +   run;
18339  +
18340  +  proc transpose data=varclus_tmp out=&groupds;
18341  +      by _NAME_;
18342  +   run;
18343  +   proc sort data=&groupDs(rename=(col1=Cluster col2=Rsquare _NAME_=VARIABLE));
18344  +      by Cluster descending Rsquare;
18345  +      where Cluster ne 0;
18346  +   run;
18347  +   proc datasets lib=work nolist mt=(DATA VIEW);
18348  +      delete varclus_tmp;
18349  +   run;
18350  +   quit;
18351  +%mend findClusNum;
18352  +*/
18353  +
18354  +%macro getNclusfromTrain(inoutstat=, nc=);
18355  +%global &nc;
18356  +data _null_;
18357  +    set &inoutstat end=eof;
18358  +    if eof then do;
18359  +    call symput("&nc", _ncl_);
18360  +    end;
18361  +run;
18362  +%mend  getNclusfromTrain;
18363  +
18364  +%macro MakeDeltaCode(groupds=, outstatscore=, deltacodefile=);
18365  +
18366  +     *--- Build Code to Modify Metadata ---*;
18367  +     filename X "&deltacodefile";
18368  +     data _null_;
18369  +        FILE X;
18370  +        set &groupds end=eof;
18371  +        /*by Cluster;*/
18372  +         if _N_=1 then do;
18373  +           %if &EM_PROPERTY_INCLUDECLASSVAR eq Y %then %do;
18374  +            put "if upcase(strip(ROLE)) ='INPUT' and upcase(strip(LEVEL)) ^='INTERVAL' then ROLE ='REJECTED' ;";
18375  +           %end;
18376  +           put "if upcase(strip(ROLE))='INPUT' and upcase(strip(LEVEL))='INTERVAL' then do;";
18377  +           put "if upcase(strip(NAME)) in (";
18378  +        end;
18379  +        if Strip(upcase(Selected)) eq 'YES' then do;
18380  +           string = '"'!!trim(left(VARIABLE))!!'"';
18381  +           put string;
18382  +        end;
18383  +        if eof then do;
18384  +           put ') then ROLE="INPUT";';
18385  +           put 'else ROLE="REJECTED";';
18386  +           put 'end;';
18387  +
18388  +           %if %upcase(&EM_PROPERTY_HIDEVARIABLE) eq Y %then %do;
18389  +             put 'if upcase(strip(ROLE)) = "REJECTED" then delete ;';
18390  +           %end;
18391  +        end;
18392  +     run;
18393  +     quit;
18394  +
18395  +     filename X;
18396  +
18397  +     quit;
18398  +%mend MakeDeltaCode;
18399  +
18400  +%macro MakeVarClusCorrData(statds=, corrds=, corrplotds= );
18401  +    %if ^%sysfunc(exist(&statds)) %then %do;
18402  +         %goto doendc;
18403  +    %end;
18404  +
18405  +    data &corrds(drop=_TYPE_ _NCL_) ;
18406  +       set &statds;
18407  +       where _type_ eq 'CORR' ;
18408  +    run ;
18409  +    proc sort data=&corrds;
18410  +       by _NAME_ ;
18411  +    run ;
18412  +    proc transpose data=&corrds out=&corrplotds name=_TMP_;
18413  +      BY _NAME_ ;
18414  +    run ;
18415  +    data &corrplotds;
18416  +       length _Y_ $100;
18417  +       set &corrplotDs;
18418  +       if _LABEL_ ne '' then _Y_=_LABEL_ ; else _Y_=_TMP_ ;
18419  +    run ;
18420  +    data varclus_match(rename=(_TMP_= _NAME_ _LABEL_=_X_));
18421  +       set &corrplotds;
18422  +       where _LABEL_ ne '' ;
18423  +       keep _TMP_ _LABEL_ ;
18424  +    run ;
18425  +    data _null_;
18426  +       nobs=0;
18427  +       dsid = open('varclus_match');
18428  +       if dsid then do;
18429  +          nobs = attrn(dsid, 'NOBS');
18430  +          dsid = close(dsid);
18431  +       end;
18432  +       call symput ('CORR_NOBS', nobs);
18433  +    run;
18434  +    %if &corr_nobs %then %do;
18435  +        proc sort data=varclus_match;
18436  +           by _name_;
18437  +        run ;
18438  +        proc sort data=&corrplotds;
18439  +           by _name_;
18440  +        run ;
18441  +        data &corrplotds(keep= _X_ _Y_ col1 rename=(col1=Correlation)) ;
18442  +           merge varclus_match &corrplotds;
18443  +           by _NAME_ ;
18444  +           if _X_ eq '' then _X_=_NAME_ ;
18445  +           label _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))";
18446  +           label _Y_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))";
18447  +           label col1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_correlation_vlabel, noquote))";
18448  +
18449  +       run ;
18450  +    %end;
18451  +    %else %do;
18452  +        proc sort data=&corrplotds;
18453  +           by _name_;
18454  +        run ;
18455  +        data &corrplotds(keep= _NAME_ _Y_ col1 rename=(_NAME_=_X_ col1=Correlation)) ;
18456  +           set &corrplotds;
18457  +           label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))" ;
18458  +           label _Y_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))" ;
18459  +           label col1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_correlation_vlabel, noquote))";
18460  +
18461  +        run ;
18462  +    %end;
18463  +    proc sort data=&corrplotds;
18464  +       by _X_ _Y_;
18465  +    run ;
18466  +    proc datasets lib=work nolist mt=(DATA VIEW);
18467  +       delete varclus_match;
18468  +    run;
18469  +    quit;
18470  +
18471  +%doendc:
18472  +
18473  +%mend MakeVarClusCorrData;
18474  +
18475  +%macro MakeStatPlotData(statds= , outstatplotds=);
18476  +   %if %sysfunc(exist(&statds)) %then %do;
18477  +
18478  +       data varclus_tmp(drop=_NAME_ _NCL_) ;
18479  +          set &statDs;
18480  +          where _type_ in('MEAN', 'STD', 'N');
18481  +       run ;
18482  +       proc transpose data=varclus_tmp out=&outstatplotds;
18483  +          id _TYPE_ ;
18484  +       run ;
18485  +       data &outstatplotds;
18486  +          set &outstatplotds(obs=1000);
18487  +          label _name_= "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_name, noquote))";
18488  +          label _label_="%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_label, noquote))" ;
18489  +          if MEAN ne 0 then SCALEDSTD= STD / MEAN ;
18490  +          else SCALEDSTD= STD ;
18491  +          label SCALEDSTD = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_scaledstd, noquote))";
18492  +       run ;
18493  +       proc sort data=&outstatplotds;
18494  +          by descending SCALEDSTD ;
18495  +       run ;
18496  +       proc datasets lib=work nolist mt=(DATA VIEW);
18497  +          delete varclus_tmp;
18498  +       run;
18499  +       quit;
18500  +    %end;
18501  +
18502  +%mend MakeStatPlotData;
18503  +
18504  +
18505  +%macro CreateScoreCode(indata=, ncluscomp=, fileref=);
18506  +     %EM_GETNAME(KEY=OUTSTATSCORE, type=DATA);
18507  +    data &EM_USER_OUTSTATSCORE;
18508  +          set &indata;
18509  +          if (_TYPE_ in ('SCORE' 'MEAN' 'STD') and _NCL_ = &ncluscomp ) or (_TYPE_ in ('MEAN' 'STD'));
18510  +          if _TYPE_ = 'MEAN' then _NAME_='MEAN';
18511  +          if _TYPE_ = 'STD' then _NAME_='STD';
18512  +          DROP _TYPE_ _NCL_;
18513  +     run;
18514  +
18515  +     filename _file_  "&fileRef";
18516  +
18517  +     data _null_;
18518  +        FILE _file_ MOD;
18519  +        put ' ';
18520  +        put '/*-------------------------------------------------*/';
18521  +        put '/* ' "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_score_title_begin , noquote))" '*/';
18522  +        put '/*-------------------------------------------------*/';
18523  +        put ' ';
18524  +        %let dsid = %sysfunc(open(&EM_USER_OUTSTATSCORE));
18525  +
18526  +        %let nvar = %sysfunc(attrn(&dsid, NVAR));
18527  +        %let vn_name =%sysfunc(varnum(&dsid, _NAME_));
18528  +
18529  +        %let k = 1;
18530  +        %do %while(^%sysfunc(fetch(&dsid)));
18531  +                %let _name = %sysfunc(getvarc(&dsid, &vn_name));
18532  +                %if &k > 2 %then %do;
18533  +                 %let cn = %eval(&k-2);
18534  +                 put "&_name = 0 ; /*---" "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_score_cluscompnum, noquote, &cn))"  "------ */";
18535  +                %end;
18536  +                %let k = %eval(&k+1);
18537  +        %end;
18538  +
18539  +        %let rc = %sysfunc(rewind(&dsid));
18540  +
18541  +        %do i= 2 %to &nvar;
18542  +            %let _varname =  %sysfunc(varname(&dsid, &i));
18543  +            %do %while(^%sysfunc(fetch(&dsid)));
18544  +                %let _name = %sysfunc(getvarc(&dsid, &vn_name));
18545  +                %if &_name = MEAN %then
18546  +                %let _mean = %sysfunc(getvarn(&dsid, &i));
18547  +                %else %if &_name = STD %then
18548  +                %let _std = %sysfunc(getvarn(&dsid, &i));
18549  +                %else %do;
18550  +                      %let coeff =  %sysfunc(getvarn(&dsid, &i));
18551  +                      %let abscoeff = %sysfunc(abs(&coeff));
18552  +                          %if &abscoeff >  0 %then %do;
18553  +                       put "&_name = &_name+&coeff * (&_varname - &_mean)/&_std;";
18554  +                           %end;
18555  +                 %end;
18556  +             %end;
18557  +             %let rc = %sysfunc(rewind(&dsid));
18558  +         %end;
18559  +
18560  +        %let dsid= %sysfunc(close(&dsid));
18561  +       run;
18562  +%mend CreateScoreCode;
18563  +
18564  +
18565  +
18566  +/*----------------------------------------------------------
18567  +    Instead of using %MakeRSquareData,
18568  +    %MakeVarClusResultTable at macro2.source is used
18569  + +----------------------------------------------------------*/
18570  +
18571  +
18572  +%macro MakeRSquareData(indata=, inClusRSquare=, outdata=, ncluster=);
18573  +
18574  +/* modifying  from ods rsquare = data */
18575  +
18576  +data &outdata(drop= ControlVar  NumberOfClusters CurrentCluster);
18577  +    Length Cluster $16;
18578  +    length Variable $32;
18579  +    Length VariableLabel $64;
18580  +    set &indata; retain CurrentCluster;
18581  +    if NumberOfClusters ^= &ncluster then delete;
18582  +    if strip(Cluster) eq '' then Cluster = CurrentCluster;
18583  +    CurrentCluster = Cluster;
18584  +   run;
18585  +proc sort data =&outdata ;
18586  +     by Cluster RsquareRatio;
18587  +run;
18588  +data _tmprsq(drop=index);
18589  +     set &outdata; by Cluster;
18590  +     if first.Cluster then do;
18591  +     index = strip(scan(Cluster,2 ));
18592  +     Variable = "Clus"||index;
18593  +     VariableLabel = "Cluster Component "||index;
18594  +     OwnCluster = 1;
18595  +     NextClosest = .;
18596  +     RsquareRatio = 0;
18597  +     output;
18598  +     end;
18599  +run;
18600  +
18601  +proc sort data = _tmprsq ;
18602  +     by Cluster RsquareRatio;
18603  +run;
18604  +data &outdata;
18605  +     set &outdata _tmprsq;
18606  +by Cluster;
18607  +run;
18608  +
18609  +
18610  +/* Just create the Selected variable with all YES */
18611  +
18612  +data &outdata;
18613  +    set &outdata; by cluster;
18614  +    length Selected $8;
18615  +    Selected = 'YES';
18616  +    label  OwnCluster = 'R-Sqaure with Cluster Component';
18617  +    label  NextClosest = 'R-Sqaure with Next Cluster Component';
18618  +    rename OwnCluster = RSqWithClusterComp;
18619  +    rename NextClosest = RSqWithNextClusComp;
18620  +run;
18621  +
18622  +
18623  +/* Selected = Y/N will be done %score section -----
18624  +
18625  +%if &EM_PROPERTY_EXPORTEDCOMP ne CLUSTERCOMP %then %do;
18626  +data &outdata;
18627  +    set &outdata; by cluster;
18628  +    length Selected $8;
18629  +    if first.Cluster then Selected = 'YES';
18630  +    else Selected = 'NO';
18631  +    label  OwnCluster = 'R-Sqaure with Cluster Component';
18632  +    label  NextClosest = 'R-Sqaure with Next Cluster Component';
18633  +    rename OwnCluster = RSqWithClusterComp;
18634  +    rename NextClosest = RSqWithNextClusComp;
18635  +run;
18636  +%end;
18637  +%else %do;
18638  +data &outdata;
18639  +    set &outdata; by cluster;
18640  +    if last.Cluster then Selected = 'YES';
18641  +    else Selected = 'NO';
18642  +    label  OwnCluster = 'R-Sqaure with Cluster Component';
18643  +    label  NextClosest = 'R-Sqaure with Next Cluster Component';
18644  +    rename OwnCluster = RSqWithClusterComp;
18645  +    rename NextClosest = RSqWithNextClusComp;
18646  +run;
18647  +%end;
18648  +---------------------------------------------------------------*/
18649  +
18650  +%if %sysfunc(exist(&inClusRSquare)) %then %do;
18651  +/* to calculate NextClosestClusRsq */
18652  +proc transpose data = &inClusRSquare  out=_clusRsq;
18653  +      by cluster;
18654  +      run;
18655  +data _clusRsq;
18656  +     set _clusRsq;
18657  +     if strip(upcase(Cluster)) eq strip(upcase(_NAME_)) then delete;
18658  +run;
18659  +
18660  +proc sort data=_clusRsq;
18661  +    by cluster col1;
18662  +    run;
18663  +data _clusRsq(drop=_NAME_ _LABEL_);
18664  +     set _clusRsq; by cluster;
18665  +     if last.Cluster then output;
18666  +     label  COL1 = 'R-Sqaure with Next Cluster Component';
18667  +     rename COL1 = RSqWithNextClusComp;
18668  +     rename Cluster = Variable;
18669  +     label  Cluster = "Variable";
18670  +run;
18671  +
18672  +proc sort data =&outdata;
18673  +     by Variable;
18674  +run;
18675  +data &outdata;
18676  +    merge &outdata _clusRsq;
18677  +    by Variable;
18678  +run;
18679  +proc sort data =&outdata;
18680  +by Cluster  RsquareRatio;
18681  +run;
18682  +quit;
18683  +%end;
18684  +
18685  +proc datasets lib = work nolist;
18686  +     delete _tmprsq _clusRsq;
18687  +     run;
18688  +quit;
18689  +
18690  +%mend MakeRSquareData;
18691  +
18692  +
18693  +/*-------------------------------------------------------------------------*/
18694  +
18695  +
18696  +
18697  +%macro ModifyCorr(indata=,
18698  +                  outdata=,
18699  +                  rsquare = Y
18700  +                  );
18701  +    data corr_tmp;
18702  +        set &indata;
18703  +    run;
18704  +     proc sql;
18705  +           update &indata
18706  +           set
18707  +     %let dsid = %sysfunc(open(work.corr_tmp));
18708  +     %let nvar = %sysfunc(attrn(&dsid, NVAR));
18709  +          %do i = 4 %to &nvar;
18710  +          %let _name = %sysfunc(varname(&dsid, &i));
18711  +             %if &rsquare eq Y %then %let _name_md = &_name.**2;
18712  +            %else  %let _name_md = &_name;
18713  +            %if &i < &nvar %then %do;
18714  +               &_name = 1- &_name_md ,
18715  +            %end;
18716  +            %else %do;
18717  +               &_name = &_name_md where _TYPE_ contains 'CORR' ;
18718  +            %end;
18719  +          %end;
18720  +      %let dsid= %sysfunc(close(&dsid));
18721  +
18722  +      select * from &indata;
18723  +      run;
18724  +      proc datasets lib = work nolist;
18725  +           delete corr_tmp;
18726  +      run;
18727  +      quit;
18728  +
18729  + %mend ModifyCorr;
18730  +
18731  + %macro MakeClusStructCorrData(indata=,outdata=, ncluster=, Rsquare=N);
18732  +    data &outdata(drop= _NCL_  _TYPE_);
18733  +       set &indata;
18734  +       if ^(strip(_NCL_) eq &ncluster and strip(_TYPE_) eq 'STRUCTUR') then delete;
18735  +       rename _NAME_ = Cluster;
18736  +       label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_clustername,  noquote))";
18737  +    run;
18738  +    %if &RSquare eq Y %then %do;
18739  +     data corr_tmp;
18740  +        set &outdata;
18741  +     run;
18742  +
18743  +     data &outdata(drop=i);
18744  +          set &outdata;
18745  +          %let dsid = %sysfunc(open(work.corr_tmp));
18746  +          %let nvar = %sysfunc(attrn(&dsid, NVAR));
18747  +          %do i = 2 %to &nvar;
18748  +            %let _name = %sysfunc(varname(&dsid, &i));
18749  +            %let _name_md = &_name.**2;
18750  +                &_name = &_name_md;
18751  +          %end;
18752  +      %let dsid= %sysfunc(close(&dsid));
18753  +      run;
18754  +      proc datasets lib = work nolist;
18755  +           delete corr_tmp;
18756  +      run;
18757  +
18758  +    %end;
18759  +     quit;
18760  +%mend MakeClusStructCorrData;
18761  +
18762  +%macro MakeInterClusCorrData(indata=, outdata=, ncluster=, RSquare=N, makeplotds=N, plotds=);
18763  +    data &outdata(drop= _NCL_  _TYPE_);
18764  +       set &indata;
18765  +       if ^(strip(_NCL_) eq &ncluster and strip(_TYPE_) eq 'CCORR') then delete;
18766  +       rename _NAME_ = Cluster;
18767  +       label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_clustername,  noquote))";
18768  +    run;
18769  +    data corr_tmp;
18770  +        set &outdata;
18771  +    run;
18772  +
18773  +    %let dsid = %sysfunc(open(work.corr_tmp));
18774  +    %let nclus2= %eval(&ncluster+1);
18775  +    data &outdata;
18776  +         set &outdata;
18777  +          %do i = 2 %to &nclus2;
18778  +          %let i_1 = %eval(&i-1);
18779  +            %let _name = %sysfunc(varname(&dsid, &i));
18780  +            %let _newName = Clus&i_1;
18781  +                rename &_name = &_newName; ;
18782  +                *label &_name ="Cluster &i_1";
18783  +                label &_name = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_clusternum, noquote,  &i_1))";
18784  +          %end;
18785  +          keep Cluster
18786  +          %do i = 2 %to &nclus2;
18787  +                %let _name = %sysfunc(varname(&dsid, &i));
18788  +                &_name
18789  +          %end;
18790  +          ;
18791  +    %let dsid= %sysfunc(close(&dsid));
18792  +     run;
18793  +     quit;
18794  +
18795  +    %if &RSquare eq Y %then %do;
18796  +
18797  +       data corr_tmp;
18798  +        set &outdata;
18799  +     run;
18800  +
18801  +     data &outdata(drop=i);
18802  +          set &outdata;
18803  +          %let dsid = %sysfunc(open(work.corr_tmp));
18804  +          %let nvar = %sysfunc(attrn(&dsid, NVAR));
18805  +          %do i = 2 %to &nvar;
18806  +            %let _name = %sysfunc(varname(&dsid, &i));
18807  +            %let _name_md = &_name.**2;
18808  +                &_name = &_name_md;
18809  +          %end;
18810  +      %let dsid= %sysfunc(close(&dsid));
18811  +      run;
18812  +    %end;
18813  +
18814  +    %if &makeplotds eq Y %then %do;
18815  +     proc transpose data = &outdata
18816  +          out=&plotds(drop=_LABEL_ rename=(_NAME_ = Y Cluster=X Col1= Correlation));
18817  +          by cluster;
18818  +     run;
18819  +     data &plotds;
18820  +          set  &plotds;
18821  +          label x="%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))";
18822  +          label Y="%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))";
18823  +     run;
18824  +     %end;
18825  +     proc datasets lib = work nolist;
18826  +           delete corr_tmp;
18827  +     run;
18828  +     quit;
18829  +%mend MakeInterClusCorrData;
18830  +
18831  +
18832  +%macro MakeClusConstellData(indata=, outlink=, outnode=);
18833  +
18834  +data &outlink(drop = Selected);
18835  +     set &indata;
18836  +     LINKID = _N_;
18837  +     label LINKID = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_linkid,  noquote))";
18838  +     if strip(upcase(Cluster)) eq strip(upcase(Variable)) then Variable = ClosestCluster;
18839  +run;
18840  +data &outnode(keep=NODEID TYPE LABEL);
18841  +    set &indata;
18842  +    length TYPE $16;
18843  +    rename Variable = NODEID;
18844  +    label  Variable= "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodeidvar, noquote))";
18845  +    if strip(upcase(Cluster)) eq strip(upcase(Variable))
18846  +    then  TYPE = "CLUSTER";
18847  +    else  TYPE="VARIABLE";
18848  +    label TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodetype, noquote))";
18849  +run;
18850  +quit;
18851  +%mend MakeClusConstellData;
18852  +
18853  +
18854  +
18855  +%macro MakeClusConstellData(indata=, outlink=, outnode=);
18856  +
18857  +data &outlink(drop = Selected);
18858  +     set &indata;
18859  +     LINKID = _N_;
18860  +     label LINKID = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_linkid,  noquote))";
18861  +     if strip(upcase(Cluster)) eq strip(upcase(Variable)) then Variable = ClosestCluster;
18862  +run;
18863  +data &outnode(keep=NODEID TYPE LABEL);
18864  +    set &indata;
18865  +    length TYPE $16;
18866  +    rename Variable = NODEID;
18867  +    label  Variable= "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodeidvar, noquote))";
18868  +    if strip(upcase(Cluster)) eq strip(upcase(Variable))
18869  +    then  TYPE = "CLUSTER";
18870  +    else  TYPE="VARIABLE";
18871  +    label TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodetype, noquote))";
18872  +run;
18873  +quit;
18874  +%mend MakeClusConstellData;
18875  +
18876  +
18877  +/*--- This will work only when inds is not a view data -------
18878  +
18879  +%macro getNVarNObs(inds=, nvar=, nobs=);
18880  +
18881  +    %global &nvar;
18882  +    %global &nobs;
18883  +    data _null_;
18884  +         dsid = open("&inds");
18885  +         nv = attrn(dsid, 'NVAR');
18886  +         no = attrn(dsid, 'NOBS');
18887  +         dsid = close(dsid);
18888  +         call symput("&nvar", nv);
18889  +         call symput("&nobs", no);
18890  +    run;
18891  +    quit;
18892  +%mend  getNVarNObs;
18893  +
18894  ++---------------------------------------------------------------*/
18895  +
18896  +
18897  +%macro getNVar(inds=, nvar=);
18898  +    %global &nvar;
18899  +    data _null_;
18900  +         dsid = open("&inds");
18901  +         nv = attrn(dsid, 'NVAR');
18902  +         dsid = close(dsid);
18903  +         call symput("&nvar", nv);
18904  +    run;
18905  +    quit;
18906  +%mend  getNVar;
18907  +
18908  +
18909  +
18910  +%macro getNObs(inds=, nobs=);
18911  +    %global &nobs;
18912  +    data _null_;
18913  +        set &inds end=eof;
18914  +        if eof then call symput("&nobs", _N_);
18915  +    run;
18916  +    quit;
18917  +%mend  getNObs;
18918  +
18919  +%Macro CreateVarclusMeta(trainnum=);
18920  +   %EM_GETNAME(KEY=VARCLUSMETA, TYPE=DATA);
18921  +    data &EM_USER_VARCLUSMETA;
18922  +         length TrainNum 8.;
18923  +         length NewTrain $8;
18924  +         length NGCluster 8.;
18925  +         length ExportedComp $16;
18926  +         length HideVariable $8;
18927  +         TrainNum = &trainnum;
18928  +         NewTrain = "Y";
18929  +         ExportedComp = "&EM_PROPERTY_EXPORTEDCOMP";
18930  +         HideVariable = "&EM_PROPERTY_HIDEVARIABLE";
18931  +         NGCluster = 0; /* zero means no twostage */
18932  +   run;
18933  +   quit;
18934  +%mend CreateVarclusMeta;
NOTE: %INCLUDE (level 1) ending.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.VARIABLECLUSTERING_MACROS2.SOURCE.
18935  +
18936  +%macro MakeInterClusCorrData(indata=, outdata=, ncluster=, globalclusid=, RSquare=N, makeplotds=N, plotds=);
18937  +    data &outdata(drop= _NCL_  _TYPE_);
18938  +       set &indata;
18939  +       if ^(strip(_NCL_) eq &ncluster and strip(_TYPE_) eq 'CCORR') then delete;
18940  +       %if &globalclusid ne %then %do;
18941  +       _NAME_ = "GC&globalclusid._"||upcase(_NAME_);
18942  +       rename _NAME_ = Cluster;
18943  +       %end;
18944  +       %else %do;
18945  +        _NAME_ = upcase(_NAME_);
18946  +       rename _NAME_ = Cluster;
18947  +       %end;
18948  +       label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_clustername,  noquote))";
18949  +    run;
18950  +    data corr_tmp;
18951  +        set &outdata;
18952  +    run;
18953  +
18954  +    %let dsid = %sysfunc(open(work.corr_tmp));
18955  +    %let nclus2= %eval(&ncluster+1);
18956  +    data &outdata;
18957  +         set &outdata;
18958  +          %do i = 2 %to &nclus2;
18959  +          %let i_1 = %eval(&i-1);
18960  +            %let _name = %sysfunc(varname(&dsid, &i));
18961  +            %if &globalclusid ne %then
18962  +                %do; %let _newName = GC&globalclusid._CLUS&i_1;
18963  +                     rename &_name = &_newName;
18964  +                     *label &_name ="GC &globalclusid : Cluster &i_1";
18965  +                     label &_name = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gc_clusternum, noquote,  &globalclusid, &i_1))";
18966  +                %end;
18967  +            %else
18968  +                %do; %let _newName = CLUS&i_1;
18969  +                     rename &_name = &_newName;
18970  +                     *label &_name ="Cluster &i_1";
18971  +                     label &_name = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_clusternum, noquote,  &i_1))";
18972  +                %end;
18973  +          %end;
18974  +          keep Cluster
18975  +          %do i = 2 %to &nclus2;
18976  +                %let _name = %sysfunc(varname(&dsid, &i));
18977  +                &_name
18978  +          %end;
18979  +          ;
18980  +    %let dsid= %sysfunc(close(&dsid));
18981  +     run;
18982  +     quit;
18983  +
18984  +    %if &RSquare eq Y %then %do;
18985  +
18986  +       data corr_tmp;
18987  +        set &outdata;
18988  +     run;
18989  +
18990  +     data &outdata;
18991  +          set &outdata;
18992  +          %let dsid = %sysfunc(open(work.corr_tmp));
18993  +          %let nvar = %sysfunc(attrn(&dsid, NVAR));
18994  +          %do i = 2 %to &nvar;
18995  +            %let _name = %sysfunc(varname(&dsid, &i));
18996  +            %let _name_md = &_name.**2;
18997  +                &_name = &_name_md;
18998  +          %end;
18999  +      %let dsid= %sysfunc(close(&dsid));
19000  +      run;
19001  +    %end;
19002  +
19003  +    %if &makeplotds eq Y %then %do;
19004  +     proc transpose data = &outdata
19005  +          out=&plotds(drop=_LABEL_ rename=(_NAME_ = Y Cluster=X Col1= Correlation));
19006  +          by cluster;
19007  +     run;
19008  +     data &plotds;
19009  +          set  &plotds;
19010  +          label x="%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))";
19011  +          label Y="%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))";
19012  +          label  Correlation="%sysfunc(sasmsg(sashelp.dmine, rpt_correlation_vlabel, noquote))";
19013  +     run;
19014  +     %end;
19015  +     proc datasets lib = work nolist;
19016  +           delete corr_tmp;
19017  +     run;
19018  +     quit;
19019  +%mend MakeInterClusCorrData;
19020  +
19021  +%macro MakeOwnRSquare(indata=, outdata=, ncluster=, globalclusid=);
19022  +    data _tmpds(drop= _NCL_);
19023  +       set &indata;
19024  +       if ^(strip(_NCL_) eq &ncluster and strip(_TYPE_) in ('GROUP','RSQUARED')) then delete;
19025  +       %if &globalclusid ne %then %do;
19026  +           _NAME_ = "GC&globalclusid.";
19027  +       rename _NAME_ = Cluster;
19028  +       %end;
19029  +       %else %do;
19030  +        _NAME_ = "CLUS";
19031  +        rename _NAME_ = Cluster;
19032  +       %end;
19033  +       label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_clustername,  noquote))";
19034  +    run;
19035  +    proc transpose data =_tmpds out =&outdata;
19036  +    run;
19037  +
19038  +    data &outdata(drop=COL1);
19039  +        %if &globalclusid ne %then %do;
19040  +        length GCluster $16;
19041  +        %end;
19042  +        length Cluster $32;
19043  +        length _NAME_ $32;
19044  +         set &outdata;
19045  +         _NAME_ = upcase(_NAME_);
19046  +         rename _NAME_=Variable;
19047  +         *label _NAME_="Variable";
19048  +         label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))" ;
19049  +         label Cluster = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))" ;
19050  +         label GCluster = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gcluster, noquote))" ;
19051  +
19052  +         %if &globalclusid ne %then %do;
19053  +          GCluster = "GC&globalclusid";
19054  +          Cluster = "GC&globalclusid._CLUS"||strip(COL1);
19055  +         %end;
19056  +         %else %do;
19057  +         Cluster = "CLUS"||strip(COL1);
19058  +        %end;
19059  +         rename COL2 = RSqWithOwnClusComp;
19060  +         *label COL2 = "R-Square With Own Cluster Component";
19061  +         label COL2 = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_ownrsq, noquote))" ;
19062  +
19063  +   run;
19064  +   proc sort data =&outdata;
19065  +        by Cluster RSqWithOwnClusComp;
19066  +   run;
19067  +   proc datasets lib = work nolist;
19068  +           delete _tmpds;
19069  +   run;
19070  +   quit;
19071  +%mend MakeOwnRSquare;
19072  +
19073  +%macro MakeClusStructCorrData(indata=, outdata=, globalclusid=, ncluster=, Rsquare=N);
19074  +    data &outdata(drop= _NCL_  _TYPE_);
19075  +       %if &globalclusid ne %then %do;
19076  +        length GCluster $16;
19077  +        %end;
19078  +       set &indata;
19079  +       if ^(strip(_NCL_) eq &ncluster and strip(_TYPE_) eq 'STRUCTUR') then delete;
19080  +       %if &globalclusid ne %then %do;
19081  +         GCluster = "GC&globalclusid";
19082  +         _NAME_ = "GC&globalclusid._"||upcase(_NAME_);
19083  +         rename _NAME_ = Cluster;
19084  +         label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))" ;
19085  +         label GCluster = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gcluster, noquote))" ;
19086  +
19087  +       %end;
19088  +       %else %do;
19089  +         _NAME_ = upcase(_NAME_);
19090  +         rename _NAME_ = Cluster;
19091  +         label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))" ;
19092  +         label GCluster = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gcluster, noquote))" ;
19093  +
19094  +       %end;
19095  +     run;
19096  +    %if &RSquare eq Y %then %do;
19097  +     data corr_tmp;
19098  +          set &outdata;
19099  +     run;
19100  +     %let istart = 2;
19101  +     %if &globalclusid ne %then %let istart = 3;
19102  +     data &outdata;
19103  +          set &outdata;
19104  +          %let dsid = %sysfunc(open(work.corr_tmp));
19105  +          %let nvar = %sysfunc(attrn(&dsid, NVAR));
19106  +          %do i =&istart %to &nvar;
19107  +            %let _name = %sysfunc(varname(&dsid, &i));
19108  +            %let _name_md = &_name.**2;
19109  +                &_name = &_name_md;
19110  +          %end;
19111  +      %let dsid= %sysfunc(close(&dsid));
19112  +      run;
19113  +      proc datasets lib = work nolist;
19114  +           delete corr_tmp;
19115  +      run;
19116  +    %end;
19117  +     quit;
19118  +%mend MakeClusStructCorrData;
19119  +
19120  +/*
19121  +%MakeClusStructCorrData(indata=playpen._outstat, outdata=_structrsq , ncluster=7, Rsquare=Y);
19122  +*/
19123  +
19124  +%macro FindNextClosestClusByVar(indata=, outdata=, globalclusid=, ncluster=);
19125  +
19126  +     /* The indata should be the outdata
19127  +        from %MakeClusStructCorrData(indata=, outdata=, ); */
19128  +
19129  +     proc sort data =&indata out=_tmpclusRsq;
19130  +     by cluster;
19131  +     run;
19132  +
19133  +     proc transpose data =_tmpclusRsq out=_tmpclusRsq;
19134  +      by cluster;
19135  +     run;
19136  +
19137  +     proc sort data=_tmpclusRsq;
19138  +        by _NAME_ COL1;
19139  +     run;
19140  +
19141  +     data _tmpclusRsq;
19142  +         length _NAME_ $32;
19143  +         set _tmpclusRsq; by _NAME_;
19144  +          _NAME_ = upcase(_NAME_);
19145  +          %if &ncluster ne 1 %then %do;
19146  +             if last._NAME_ then delete;
19147  +          %end;
19148  +          %else %do;
19149  +             COL1 = 0;
19150  +          %end;
19151  +     run;
19152  +     /* need to sort again */
19153  +     proc sort data=_tmpclusRsq;
19154  +        by _NAME_ COL1;
19155  +     run;
19156  +
19157  +     data &outdata;
19158  +         set _tmpclusRsq; by _NAME_;
19159  +         Cluster = upcase(Cluster);
19160  +         if last._NAME_ then output;
19161  +         *label  COL1 = 'R-Sqaure with Next Cluster Component';
19162  +         label COL1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nextrsq, noquote))" ;
19163  +         rename COL1 = RSqWithNextClusComp;
19164  +         Cluster = upcase(Cluster);
19165  +         rename Cluster = ClosestCluster;
19166  +         *label  Cluster = "Next Closest Cluster";
19167  +         label Cluster = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nextclus, noquote))" ;
19168  +         rename _NAME_ = Variable;
19169  +         label  _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))" ;
19170  +    run;
19171  +
19172  +
19173  +    %if &globalclusid ne %then %do;
19174  +    data &outdata;
19175  +       length GCluster $16;
19176  +       set &outdata;
19177  +       GCluster = "GC&globalclusid";
19178  +       run;
19179  +    %end;
19180  +    proc datasets lib = work nolist;
19181  +           delete _tmpclusRsq;
19182  +    run;
19183  +    quit;
19184  +%mend FindNextClosestClusByVar;
19185  +
19186  +
19187  +%macro FindNextClosestClusByCluster(indata=, outdata=, globalclusid=, ncluster=);
19188  +     /* The indata should be the outdata from %MakeInterClusCorrData(indata=, outdata=, ); */
19189  +     proc sort data =&indata out=_tmpclusRsq;
19190  +     by cluster;
19191  +     run;
19192  +     proc transpose data =_tmpclusRsq out=_tmpclusRsq;
19193  +     by cluster;
19194  +     run;
19195  +     proc sort data=_tmpclusRsq;
19196  +        by _NAME_ col1;
19197  +     run;
19198  +     data _tmpclusRsq;
19199  +         length _NAME_ $32;
19200  +         set _tmpclusRsq; by _NAME_;
19201  +          _NAME_ = upcase(_NAME_);
19202  +          %if &ncluster ne 1 %then %do;
19203  +             if last._NAME_ then delete;
19204  +          %end;
19205  +          %else %do;
19206  +             COL1 = 0;
19207  +          %end;
19208  +     run;
19209  +     data &outdata;
19210  +         set _tmpclusRsq; by _NAME_;
19211  +         Cluster = upcase(Cluster);
19212  +         if last._NAME_ then output;
19213  +         *label  COL1 = 'R-Sqaure with Next Cluster Component';
19214  +         label COL1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nextrsq, noquote))" ;
19215  +         rename COL1 = RSqWithNextClusComp;
19216  +         Cluster = upcase(Cluster);
19217  +         rename Cluster = ClosestCluster;
19218  +         *label  Cluster = "Next Closest Cluster";
19219  +         label Cluster = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nextclus, noquote))" ;
19220  +         rename _NAME_ = Variable;
19221  +         *label  _NAME_ = "Variable";
19222  +         label  _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))" ;
19223  +
19224  +    run;
19225  +    %if &globalclusid ne %then %do;
19226  +    data &outdata;
19227  +       length GCluster $16;
19228  +       set &outdata;
19229  +       GCluster = "GC&globalclusid";
19230  +       run;
19231  +    %end;
19232  +
19233  +    proc datasets lib = work nolist;
19234  +           delete _tmpclusRsq;
19235  +    run;
19236  +
19237  +    quit;
19238  +%mend FindNextClosestClusByCluster;
19239  +
19240  +%macro MakeVarClusResultTable(indata1=, indata2=, indata3=, outdata=, globalclusid=, ncluster=, selectedcomp=clustercomp);
19241  +/*----
19242  +  indata1=_ownRsq, indata2=_nextVarRsq, indata3=_nextClusRSq,
19243  +-----------*/
19244  +
19245  +proc sort data =&indata1;
19246  +    by Variable;
19247  +run;
19248  +proc sort data =&indata2;
19249  +    by Variable;
19250  +run;
19251  +data &outdata;
19252  +    merge &indata1 &indata2;
19253  +    by Variable;
19254  +    length Type $16;
19255  +    Type = 'Variable';
19256  +    *label Type ='Type';
19257  +    label Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_type, noquote))" ;
19258  +run;
19259  +
19260  +
19261  +data &indata3;
19262  +    set  &indata3 ;
19263  +    length RSqWithOwnClusComp 8.;
19264  +    Cluster = Variable;
19265  +    RSqWithOwnClusComp = 1;
19266  +    *label RSqWithOwnClusComp = "R-Square With Own Cluster Component";
19267  +    label RSqWithOwnClusComp = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_ownrsq, noquote))" ;
19268  +    length Type $16;
19269  +    Type = 'ClusterComp';
19270  +    label Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_type, noquote))" ;
19271  +
19272  +;
19273  +run;
19274  +
19275  +proc sort data=&outdata;
19276  +    by Cluster;
19277  +run;
19278  +proc sort data =&indata3;
19279  +    by Cluster;
19280  +run;
19281  +
19282  +data &outdata;
19283  +     set &outdata &indata3;
19284  +     by Cluster;
19285  +run;
19286  +
19287  +
19288  +/* Create the Selected variable with all YES */
19289  +
19290  +data &outdata;
19291  +     set &outdata;
19292  +     length RsqRatio 8.;
19293  +     length Selected $8;
19294  +     *label RSqRatio = "1-R**2 Ratio";
19295  +     label RSqRatio =  "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_oneminusrsq, noquote))" ;
19296  +     *label Selected = "Variable Selected";
19297  +     label Selected = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_varselected, noquote))" ;
19298  +     RsqRatio = (1-RSqWithOwnClusComp)/(1-RSqWithNextClusComp);
19299  +     Selected ='YES';
19300  +     rename _LABEL_ = Label;
19301  +     label _LABEL_ =  "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_label, noquote))" ;
19302  +run;
19303  +
19304  +
19305  +/*----  Selected = Y/N will be assigened at the %score                   -------+
19306  +        Just create the Selected variable with all YES at the step above
19307  + +------------------------------------------------------------------------------+
19308  +
19309  +proc sort data=&outdata;
19310  +    by Cluster RsqRatio;
19311  +run;
19312  +
19313  +%if &selectedcomp eq CLUSTERCOMP %then %do;
19314  +data &outdata;
19315  +     set &outdata; by Cluster;
19316  +     length Selected $8;
19317  +     label Selected = "Variable Selected";
19318  +     if  first.Cluster then Selected ='Yes';
19319  +     else Selected = 'No';
19320  +    run;
19321  +%end;
19322  +%else %do;
19323  +data &outdata(drop = _var _varchange);
19324  +     set &outdata; retain _var 0; by Cluster;
19325  +     length Selected $8;
19326  +     label Selected = "Variable Selected";
19327  +     if first.Cluster then  _varchange = 0;
19328  +     else _varchange =1;
19329  +     if _var ne _varchange then  Selected  = 'Yes';
19330  +     else Selected = 'No';
19331  +     if last.cluster then  _var = 0;
19332  +     else _var = _varchange;
19333  +run;
19334  +%end;
19335  +
19336  +--------------------------------------------------------------*/
19337  +
19338  +quit;
19339  +%mend MakeVarClusResultTable;
19340  +
19341  +%Macro MakePlotDataFromCorrTable(indata=, outdata=, globalclusid=);
19342  +     proc sort data =&indata;
19343  +        by cluster;
19344  +     run;
19345  +     proc transpose data =&indata
19346  +          out=&outdata(drop=_LABEL_ rename=(_NAME_ = Y Cluster=X Col1= Correlation));
19347  +          by cluster;
19348  +     run;
19349  +     data &outdata;
19350  +          set  &outdata;
19351  +          label x= "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))" ;
19352  +          label Y= "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))" ;
19353  +          label Correlation = "%sysfunc(sasmsg(sashelp.dmine, rpt_correlation_vlabel, noquote))" ;
19354  +     run;
19355  +     %if &globalclusid ne %then %do;
19356  +     data &outdata;
19357  +          Length GCluster $16;
19358  +          label GCluster = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gcluster, noquote))" ;
19359  +          set  &outdata;
19360  +          GCluster ="GC&globalclusid.";
19361  +          run;
19362  +     %end;
19363  +
19364  +%Mend MakePlotDataFromCorrTable;
19365  +
19366  +
19367  +%macro MakeCorrelation(indata=,
19368  +                       outstat=_tmpoutstat,
19369  +                       corrmatrix=N,
19370  +                       outcorr=_tmpoutcorr,
19371  +                       includeclassvar=N,
19372  +                       target=,
19373  +                       freq=,
19374  +                       weight=);
19375  +   %if &target eq  %then %do;
19376  +
19377  +       proc varclus data=&indata outstat=&outstat hi maxclusters=1 noprint;
19378  +            var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
19379  +       %if &includeclassvar eq Y %then %do;
19380  +          %let dsid = %sysfunc(open(&EM_USER_OUTDUMMY));
19381  +          %let nvar = %sysfunc(attrn(&dsid, NVAR));
19382  +          %do i = 2 %to &nvar;
19383  +          %let varname = %sysfunc(varname(&dsid, &i));
19384  +          &varname
19385  +          %end;
19386  +       %end;
19387  +       ;
19388  +      %if &freq ne  %then %do;
19389  +          freq &freq;
19390  +      %end;
19391  +      %if &weight ne  %then %do;
19392  +          weight &weight;
19393  +      %end;
19394  +
19395  +      run;
19396  +      %if &corrmatrix eq Y %then %do;
19397  +      data  &outcorr (drop = _NCL_ _TYPE_);
19398  +           set  &outstat ;
19399  +           if _TYPE_ ='CORR' then output;
19400  +      run;
19401  +      %end;
19402  +    %end;
19403  +    %else %do;
19404  +       proc corr data=&indata outp=&outstat noprint;
19405  +            var
19406  +       %let dsid = %sysfunc(open(&indata));
19407  +       %let nvar = %sysfunc(attrn(&dsid, NVAR));
19408  +          %do i = 1 %to &nvar;
19409  +              %let _name = %sysfunc(varname(&dsid, &i));
19410  +              %if &_name ne &target %then;
19411  +              &_name
19412  +           %end;
19413  +        %let dsid= %sysfunc(close(&dsid));
19414  +        ;
19415  +        with &target;
19416  +        run;
19417  +    %end;
19418  +    quit;
19419  +%mend MakeCorrelation;
19420  +
19421  +
19422  +%macro MakeCorrelationDistance(indata=,
19423  +                               outdata=,
19424  +                               rsquare = N
19425  +                               );
19426  +    data corr_tmp;
19427  +        set &indata;
19428  +        if _N_ = 1 then do;
19429  +           output;
19430  +           stop;
19431  +         end;
19432  +    run;
19433  +    %if &outdata ne  %then %let  _outdata = &outdata;
19434  +    %else %let _outdata = &indata;
19435  +
19436  +    data &_outdata;
19437  +         set &indata;
19438  +
19439  +         %let dsid = %sysfunc(open(work.corr_tmp));
19440  +         %let nvar = %sysfunc(attrn(&dsid, NVAR));
19441  +          %do i = 2 %to &nvar;
19442  +              %let _name = %sysfunc(varname(&dsid, &i));
19443  +              %if &rsquare eq Y %then %let _name_md = &_name.**2;
19444  +              %else  %let _name_md = &_name;
19445  +              &_name = 1- &_name_md;
19446  +          %end;
19447  +      %let dsid= %sysfunc(close(&dsid));
19448  +      run;
19449  +      proc datasets lib = work nolist;
19450  +           delete corr_tmp;
19451  +      run;
19452  +      quit;
19453  +  %mend MakeCorrelationDistance;
19454  +
19455  +
19456  +%macro UpdateOutStatCorrToDistance(indata=, /* indata should be a outstat from proc varclus */
19457  +                                   rsquare = N
19458  +                                   );
19459  +    data corr_tmp;
19460  +        set &indata;
19461  +    run;
19462  +    proc sql noprint;
19463  +           update &indata
19464  +           set
19465  +     %let dsid = %sysfunc(open(work.corr_tmp));
19466  +     %let nvar = %sysfunc(attrn(&dsid, NVAR));
19467  +          %do i = 4 %to &nvar;
19468  +          %let _name = %sysfunc(varname(&dsid, &i));
19469  +             %if &rsquare eq Y %then %let _name_md = &_name.**2;
19470  +            %else  %let _name_md = &_name;
19471  +            %if &i < &nvar %then %do;
19472  +               &_name = 1- &_name_md ,
19473  +            %end;
19474  +            %else %do;
19475  +               &_name = &_name_md where _TYPE_ eq 'CORR' ;
19476  +            %end;
19477  +          %end;
19478  +      %let dsid= %sysfunc(close(&dsid));
19479  +
19480  +      select * from &indata;
19481  +      run;
19482  +     data &indata( drop = _NCL_);
19483  +           set &indata;
19484  +           if _TYPE_ not in ('CORR', 'STD', 'N', 'MEAN') then delete;
19485  +           if _TYPE_ ='CORR' then _TYPE_ ='DISTANCE';
19486  +     run;
19487  +     data &indata(DROP = _NCL_);
19488  +           set &indata;
19489  +           if _TYPE_ = 'CORR' then _TYPE_ ='DISTANCE';
19490  +           if _TYPE_ not in ('DISTANCE', 'N', 'STD', 'MEAN') then delete;
19491  +           rename _NAME_ = _VAR_;
19492  +     run;
19493  +     proc datasets lib = work nolist;
19494  +           delete corr_tmp;
19495  +     run;
19496  +     quit;
19497  + %mend UpdateOutStatCorrToDistance;
19498  +
19499  +
19500  +%macro HierClusWithCorr(indata= ,
19501  +                        ncluster=,
19502  +                        method = Ward,
19503  +                        outtree = _outtree,
19504  +                        idvar =_VAR_,
19505  +                        outdata=,
19506  +                        rescore = N,
19507  +                        newncluster=
19508  +                        );
19509  +      %global &newncluster;
19510  +      %if &rescore ne Y %then %do;
19511  +      proc cluster data=&indata(type=Distance where=(upcase(strip(_TYPE_)) = "DISTANCE"))
19512  +                   method=&method outtree=&outtree noprint;
19513  +           id &idvar;
19514  +      run;
19515  +      %end;
19516  +      proc tree data=&outtree nclusters = &ncluster out=&outdata noprint;
19517  +      run;
19518  +      /* ----- Check some variables like CL1, CL5..., remove them ----*/
19519  +      proc contents data =&indata out=_outcontent(keep=NAME) noprint;
19520  +      run;
19521  +      data _outcontent;
19522  +          set _outcontent;
19523  +          if NAME in ('_TYPE_' , '_VAR_') then delete;
19524  +          index = 1;
19525  +          rename NAME = _NAME_;
19526  +      run;
19527  +      proc sort data=_outcontent;
19528  +          by _NAME_;
19529  +      run;
19530  +      proc sort data =&outdata;
19531  +           by _NAME_;
19532  +      run;
19533  +      data &outdata(drop=index);
19534  +          merge &outdata _outcontent;
19535  +          by _NAME_;
19536  +          if index = . then delete;
19537  +      run;
19538  +      /*-----------------------------------------------------------*/
19539  +      data &outdata;
19540  +           length CLUSNAME $16;
19541  +           set &outdata;
19542  +           if CLUSTER > &ncluster then delete;
19543  +           CLUSNAME='GC'||strip(CLUSTER);
19544  +           *label CLUSNAME = "Cluster Name";
19545  +           label CLUSNAME  = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_clustername, noquote))" ;
19546  +           rename _NAME_ = VARIABLE ;
19547  +           *label _NAME_ = "Variable";
19548  +           *label CLUSTER = "Cluster";
19549  +           label _NAME_ ="%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))" ;
19550  +           label CLUSTER ="%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_cluster, noquote))" ;
19551  +      run;
19552  +      proc sort data=&outdata out=&outdata;
19553  +           by CLUSTER;
19554  +      run;
19555  +      proc means data =&outdata noprint;
19556  +           output out=_meanout;
19557  +      run;
19558  +      data _null_;
19559  +            set _meanout;
19560  +            if strip(_STAT_) eq 'MAX' then do;
19561  +            call symput("&newncluster", CLUSTER);
19562  +            stop;
19563  +            end;
19564  +      run;
19565  +
19566  +      proc datasets lib = work nolist;
19567  +           delete _outcontent _meanout;
19568  +      run;
19569  +      quit;
19570  +%mend  HierClusWithCorr;
19571  +
19572  +%macro CreateScoreCode2(indata=, ncluscomp=, globalclusid=, fileref=);
19573  +
19574  +     data _tmpindata;
19575  +          set &indata;
19576  +          if (_TYPE_ in ('SCORE' 'MEAN' 'STD') and _NCL_ = &ncluscomp ) or (_TYPE_ in ('MEAN' 'STD'));
19577  +          if _TYPE_ = 'MEAN' then _NAME_='MEAN';
19578  +          if _TYPE_ = 'STD' then _NAME_='STD';
19579  +          if _TYPE_ = 'SCORE' then _NAME_=upcase("GC&globalclusid._"||_NAME_);
19580  +          DROP _TYPE_ _NCL_;
19581  +     run;
19582  +
19583  +     filename _file_  "&fileRef";
19584  +
19585  +     data _null_;
19586  +        FILE _file_ MOD;
19587  +        put ' ';
19588  +        put "/*-------------------------------------------------*/";
19589  +        put '/* ' "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_score_title_gclus, noquote, &globalclusid))" '*/';
19590  +        put "/*-------------------------------------------------*/";
19591  +        put ' ';
19592  +        %let dsid = %sysfunc(open(work._tmpindata));
19593  +
19594  +        %let nvar = %sysfunc(attrn(&dsid, NVAR));
19595  +        %let vn_name =%sysfunc(varnum(&dsid, _NAME_));
19596  +        %let k = 1;
19597  +        %do %while(^%sysfunc(fetch(&dsid)));
19598  +               %let _name = %sysfunc(getvarc(&dsid, &vn_name));
19599  +               %if &k > 2 %then %do;
19600  +                %let cn = %eval(&k-2);
19601  +                 put "&_name = 0 ; /*---" "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_score_gcluscompnum, noquote, &globalclusid, &cn))" "------ */";
19602  +                %end;
19603  +                %let k = %eval(&k+1);
19604  +
19605  +        %end;
19606  +        %let rc = %sysfunc(rewind(&dsid));
19607  +
19608  +        %do j= 2 %to &nvar;
19609  +            %let _varname = %sysfunc(varname(&dsid, &j));
19610  +            %do %while(^%sysfunc(fetch(&dsid)));
19611  +                %let _name = %sysfunc(getvarc(&dsid, &vn_name));
19612  +                %if &_name = MEAN %then
19613  +                %let _mean = %sysfunc(getvarn(&dsid, &j));
19614  +                %else %if &_name = STD %then
19615  +                %let _std = %sysfunc(getvarn(&dsid, &j));
19616  +                %else %do;
19617  +                      %let coeff =  %sysfunc(getvarn(&dsid, &j));
19618  +                      %let abscoeff = %sysfunc(abs(&coeff));
19619  +                          %if &abscoeff >  0 %then %do;
19620  +                       put "&_name = &_name+&coeff * (&_varname - &_mean)/&_std;";
19621  +                           %end;
19622  +                 %end;
19623  +             %end;
19624  +             %let rc = %sysfunc(rewind(&dsid));
19625  +         %end;
19626  +
19627  +        %let dsid= %sysfunc(close(&dsid));
19628  +
19629  +     run;
19630  +
19631  +     filename _file_;
19632  +     proc datasets lib = work nolist;
19633  +           delete _tmpindata;
19634  +     run;
19635  +     quit;
19636  +%mend CreateScoreCode2;
19637  +
19638  +
19639  +%macro MakeDeltaCode2(groupds=,deltacodefile=);
19640  +
19641  +     /*--- Build Code to Modify Metadata ---*/
19642  +     filename X "&deltacodefile";
19643  +     data _null_;
19644  +        FILE X;
19645  +        set &groupds end=eof;
19646  +        if _N_=1 then do;
19647  +           %if &EM_PROPERTY_INCLUDECLASSVAR eq Y %then %do;
19648  +            put "if upcase(strip(ROLE)) ='INPUT' and upcase(strip(LEVEL)) ^='INTERVAL' then ROLE ='REJECTED' ;";
19649  +           %end;
19650  +           put "if upcase(strip(ROLE))='INPUT' and upcase(strip(LEVEL))='INTERVAL' then do;";
19651  +           put "if upcase(strip(NAME)) in (";
19652  +        end;
19653  +        if Strip(upcase(Selected)) eq 'YES' then do;
19654  +           string = '"'!!trim(left(VARIABLE))!!'"';
19655  +           put string;
19656  +        end;
19657  +        if eof then do;
19658  +           put ') then ROLE="INPUT";';
19659  +           put 'else ROLE="REJECTED";';
19660  +           put 'end;';
19661  +
19662  +           %if %upcase(&EM_PROPERTY_HIDEVARIABLE) eq Y %then %do;
19663  +             put 'if upcase(strip(ROLE)) = "REJECTED" then delete ;';
19664  +           %end;
19665  +        end;
19666  +     run;
19667  +     quit;
19668  +
19669  +     filename X;
19670  +     quit;
19671  +%mend MakeDeltaCode2;
19672  +
19673  +%macro getInitialGClusterNumber(indata=, ninput=, ndummy=0, div=100, ngc=);
19674  +  %global &ngc;
19675  +  data _null_;
19676  +  %if &indata ne %then %do;
19677  +      %let dsid = %sysfunc(open(&indata));
19678  +           %let nvar = %sysfunc(attrn(&dsid, NVAR));
19679  +      %let dsid = %sysfunc(close(&dsid));
19680  +  %end;
19681  +  %else %do;
19682  +       %let nvar = %eval(&ninput+&ndummy); ;
19683  +  %end;
19684  +  %let numgc = %eval(&nvar/&div+2);
19685  +  %let &ngc = &numgc;
19686  +   run;
19687  +  quit;
19688  +%mend getInitialGClusterNumber;
19689  +
19690  +
19691  +%macro MakeGobalConstellData(indata=, outlink=, outnode=);
19692  +data &outlink(drop = Selected);
19693  +     set &indata;
19694  +     LINKID = _N_;
19695  +     label LINKID = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_linkid, noquote))" ;
19696  +run;
19697  +data &outnode(keep=NODEID TYPE LABEL);
19698  +    set &indata;
19699  +    length TYPE $16;
19700  +    rename VARIABLE = NODEID;
19701  +    *label  CLUSNAME="Node ID";
19702  +    label CLUSNAME= "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodeidvar, noquote))" ;
19703  +    TYPE = "VARIABLE";
19704  +    *label TYPE = "Node Type";
19705  +    label TYPE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodetype, noquote))" ;
19706  +    run;
19707  +data _tmp(keep=NODEID TYPE LABEL);
19708  +    set &indata;
19709  +    length TYPE $16;
19710  +    rename CLUSNAME = NODEID;
19711  +    label  CLUSNAME= "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodeidvar, noquote))" ;
19712  +    TYPE = "GCLUSTER";
19713  +    label TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodetype, noquote))" ;
19714  +    run;
19715  +proc sort data=_tmp;
19716  +    by NODEID;
19717  +run;
19718  +data _tmp;
19719  +    set _tmp; by NODEID;
19720  +    if first.NODEID then output;
19721  +run;
19722  +proc sort data=&outnode;
19723  +    by NODEID;
19724  +run;
19725  +data  &outnode;
19726  +    set _tmp &outnode;
19727  +run;
19728  +proc datasets lib = work nolist;
19729  +     delete _tmp;
19730  +run;
19731  +quit;
19732  +%mend MakeGobalConstellData;
19733  +
19734  +/* Make contellation plot data among GCLUSTERS */
19735  +
19736  +%Macro MakeGClusterConstData(indata=, inoutrsq=, outnode=, outlink=);
19737  +
19738  +data &outlink(keep = _NAME_ _PARENT_ _LABEL_ LINKID);
19739  +     set &indata;
19740  +     LINKID = _N_;
19741  +     if upcase(substr(strip(_NAME_),1, 2))="CL" then do;
19742  +        _NAME_ = "ROOT"||upcase(substr(strip(_NAME_),5));
19743  +     end;
19744  +     if _PARENT_ ne " " and upcase(substr(strip(_PARENT_),1, 2))="CL" then do;
19745  +        _PARENT_ = "ROOT"||upcase(substr(strip(_PARENT_),5));
19746  +     end;
19747  +     if upcase(substr(strip(_LABEL_),1, 2))="CL" then do;
19748  +        _LABEL_ = "ROOT"||upcase(substr(strip(_LABEL_),5));
19749  +    end;
19750  +run;
19751  +
19752  +data _tmp_outrsquare;
19753  +        set &inoutrsq;
19754  +        if upcase(strip(TYPE)) = 'CLUSTERCOMP' then delete;
19755  +run;
19756  +
19757  +proc freq data =_tmp_outrsquare noprint;
19758  +         tables GCluster/out=_tmp_GCLUSFREQ(rename=(GCLUSTER=_NAME_));
19759  +run;
19760  +
19761  +data &outnode(keep=_NAME_ TYPE LABEL);
19762  +    set &outlink;
19763  +    length TYPE $16;
19764  +    length LABEL $100;
19765  +    /*label CLUSNAME= "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodeidvar, noquote))" ;*/
19766  +
19767  +    if upcase(substr(strip(_NAME_),1, 2))='GC' then do;
19768  +    TYPE = "GCLUSTER";
19769  +    LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gcluster, noquote)):"||_NAME_;
19770  +    end;
19771  +    else do;
19772  +    TYPE= "ROOT";
19773  +    LABEL= _NAME_;
19774  +    end;
19775  +    label TYPE  =  "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodetype, noquote))" ;
19776  +    label LABEL =  "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_label, noquote))" ;
19777  +    label _NAME_ =  "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_nodeidvar, noquote))" ;
19778  +    run;
19779  +
19780  +proc sort data=&outnode;
19781  +     by _NAME_;
19782  +proc sort data=_tmp_GCLUSFREQ;
19783  +     by _NAME_;
19784  +run;
19785  +
19786  +data  &outnode;
19787  +     merge &outnode _tmp_GCLUSFREQ; by _NAME_;
19788  +     if COUNT=. then COUNT=1;
19789  +run;
19790  +
19791  +proc datasets lib = work nolist;
19792  +     delete _tmp_outrsquare _tmp_GCLUSFREQ;
19793  +run;
19794  +
19795  +quit;
19796  +%Mend MakeGClusterConstData;
19797  +
19798  +
19799  +%macro CreateGClusterScoreCode(indata=,  globalclusid=, fileref=);
19800  +
19801  +    data _gscoretmpds;
19802  +          set &indata;
19803  +          if (_TYPE_ in ('SCORE' 'MEAN' 'STD') and _NCL_ = 1 ) or (_TYPE_ in ('MEAN' 'STD'));
19804  +          if _TYPE_ = 'MEAN' then _NAME_='MEAN';
19805  +          if _TYPE_ = 'STD' then _NAME_='STD';
19806  +          if _TYPE_ = 'SCORE' then _NAME_ = "GC"||strip(&globalclusid);
19807  +          DROP _TYPE_ _NCL_;
19808  +     run;
19809  +
19810  +    /*  %let gscorefile =  %bquote(&EM_NODEDIR)&EM_DSEP.gclusterscore.sas;
19811  +        GCluster Component &globalclusid ------ */
19812  +
19813  +    filename _file_  "&fileref";
19814  +
19815  +    data _null_;
19816  +        %if &globalclusid eq 1 %then %do;
19817  +          FILE _file_;
19818  +        %end;
19819  +        %else %do;
19820  +          FILE _file_ MOD;
19821  +        %end;
19822  +
19823  +        %let dsid = %sysfunc(open(work._gscoretmpds));
19824  +        %let nvar = %sysfunc(attrn(&dsid, NVAR));
19825  +        %let vn_name =%sysfunc(varnum(&dsid, _NAME_));
19826  +
19827  +        %let k = 1;
19828  +        %do %while(^%sysfunc(fetch(&dsid)));
19829  +                %let _name = %sysfunc(getvarc(&dsid, &vn_name));
19830  +                %if &k > 2 %then %do;
19831  +                put "&_name = 0 ; ";
19832  +                %end;
19833  +                %let k = %eval(&k+1);
19834  +        %end;
19835  +
19836  +        %let rc = %sysfunc(rewind(&dsid));
19837  +        %do i= 2 %to &nvar;
19838  +            %let _varname =  %sysfunc(varname(&dsid, &i));
19839  +            %do %while(^%sysfunc(fetch(&dsid)));
19840  +                %let _name = %sysfunc(getvarc(&dsid, &vn_name));
19841  +                %if &_name = MEAN %then
19842  +                %let _mean = %sysfunc(getvarn(&dsid, &i));
19843  +                %else %if &_name = STD %then
19844  +                %let _std = %sysfunc(getvarn(&dsid, &i));
19845  +                %else %do;
19846  +                      %let coeff =  %sysfunc(getvarn(&dsid, &i));
19847  +                      %let abscoeff = %sysfunc(abs(&coeff));
19848  +                          %if &abscoeff >  0 %then %do;
19849  +                       put "&_name = &_name+&coeff * (&_varname - &_mean)/&_std;";
19850  +                           %end;
19851  +                 %end;
19852  +             %end;
19853  +             %let rc = %sysfunc(rewind(&dsid));
19854  +
19855  +         %end;
19856  +
19857  +        %let dsid= %sysfunc(close(&dsid));
19858  +       run;
19859  +
19860  +
19861  +       proc datasets lib=work nolist;
19862  +            delete _gscoretmpds;
19863  +       run;
19864  +      quit;
19865  +
19866  +%mend CreateGClusterScoreCode;
19867  +
19868  +
19869  +%macro MakeGClusterCorrelation(Indata=, ngcluster=, gscorecode=, outrsquare=);
19870  +
19871  +   %EM_REGISTER(KEY=GSCORE, TYPE=DATA);
19872  +   %EM_GETNAME(KEY=GSCORE, TYPE=DATA);
19873  +   %EM_REGISTER(KEY=GSCORESTAT, TYPE=DATA);
19874  +   %EM_GETNAME(KEY=GSCORESTAT, TYPE=DATA);
19875  +   %EM_REGISTER(KEY=GSCORETREE, TYPE=DATA);
19876  +   %EM_GETNAME(KEY=GSCORETREE, TYPE=DATA);
19877  +   %EM_REGISTER(KEY=GSCORECORR, TYPE=DATA);
19878  +   %EM_GETNAME(KEY=GSCORECORR, TYPE=DATA);
19879  +   %EM_REGISTER(KEY=GSCORECORRPLOT, TYPE=DATA);
19880  +   %EM_GETNAME(KEY=GSCORECORRPLOT, TYPE=DATA);
19881  +   %EM_REGISTER(KEY=GCLUSLINK, TYPE=DATA);
19882  +   %EM_GETNAME(KEY=GCLUSLINK, TYPE=DATA);
19883  +   %EM_REGISTER(KEY=GCLUSNODE, TYPE=DATA);
19884  +   %EM_GETNAME(KEY=GCLUSNODE, TYPE=DATA);
19885  +
19886  +   filename gsfile "&gscorecode";
19887  +
19888  +   data &EM_USER_GSCORE;
19889  +             set &indata;
19890  +             %include  gsfile;
19891  +        keep
19892  +        %do i=1 %to &ngcluster;
19893  +         %let gcvarname = GC&i;
19894  +         &gcvarname
19895  +        %end;
19896  +     ;
19897  +   run;
19898  +
19899  +   proc varclus data=&EM_USER_GSCORE outstat=&EM_USER_GSCORESTAT outtree=&EM_USER_GSCORETREE
19900  +    %if %upcase(&EM_PROPERTY_CLUSCOMP) eq CENTROID %then %do; centroid %end;
19901  +    %if %upcase(&EM_PROPERTY_CLUSSOURCE) eq COV %then %do; cov %end;
19902  +    %if %upcase(&EM_PROPERTY_CLUSHIERACHY) eq Y %then %do; hi %end;
19903  +    noprint  ;
19904  +     var
19905  +       %do i=1 %to &ngcluster;
19906  +         %let gcvarname = GC&i;
19907  +         &gcvarname
19908  +        %end;
19909  +   ;
19910  +   run;
19911  +
19912  +
19913  +   %MakeVarClusCorrData(statds=&EM_USER_GSCORESTAT, corrds=&EM_USER_GSCORECORR, corrplotds=&EM_USER_GSCORECORRPLOT );
19914  +   data &EM_USER_GSCORECORRPLOT ;
19915  +        set &EM_USER_GSCORECORRPLOT;
19916  +        rename _X_ = X;
19917  +        rename _Y_ = Y;
19918  +        label _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gcluster, noquote))" ;
19919  +        label _Y_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gcluster, noquote))" ;
19920  +   run;
19921  +
19922  +   %MakeGClusterConstData(indata=&EM_USER_GSCORETREE, inoutrsq=&outrsquare, outnode=&EM_USER_GCLUSNODE, outlink=&EM_USER_GCLUSLINK);
19923  +
19924  +   data &EM_USER_GSCORETREE;
19925  +        length _NAME_ $32;
19926  +        length _LABEL_ $100;
19927  +        set &EM_USER_GSCORETREE(DROP=_LABEL_);
19928  +        if upcase(substr(strip(_NAME_),1, 2))='GC' then do;
19929  +         _LABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_gcluster, noquote)):"||_NAME_;
19930  +        end;else do;
19931  +         _LABEL_ = _NAME_;
19932  +        end;
19933  +       label _LABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_variable, noquote))";
19934  +
19935  +   run;
19936  +
19937  +   quit;
19938  +
19939  +%mend MakeGClusterCorrelation;
19940  +
19941  +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.VARIABLECLUSTERING_SCORE.SOURCE.
19942  +%macro score;
19943  +
19944  +filename temp catalog 'sashelp.emexpl.variableclustering_score_macros.source';
19945  +%include temp;
19946  +filename temp;
19947  +
19948  +%EM_GETNAME(key=VARCLUSMETA, type=DATA) ;
19949  +
19950  +data _null_;
19951  +         set &EM_USER_VARCLUSMETA;
19952  +         if _N_=1 then
19953  +         call symput('_trainnum', TrainNum);
19954  +         call symput('_exportedcomp', ExportedComp);
19955  +         call symput('_hidevariable', HideVariable);
19956  +         call symput('_newTrain', NewTrain);
19957  +run;
19958  +
19959  +%if &_newTrain = N %then %do;
19960  +        %if &EM_PROPERTY_EXPORTEDCOMP eq &_exportedcomp %then %let _exportedCompChanged = N;
19961  +        %else %let _exportedCompChanged = Y;
19962  +        %if &EM_PROPERTY_HIDEVARIABLE eq &_hidevariable %then %let _hideVariableChanged = N;
19963  +        %else  %let _hideVariableChanged = Y;
19964  +%end;
19965  +%else %do;
19966  +        %let _exportedCompChanged = Y;
19967  +        %let _hideVariableChanged = Y;
19968  +%end;
19969  +
19970  +%if (&_trainnum = 1 ) or %upcase(&EM_PROPERTY_TWOSTAGECLUS) = NO %then %do;
19971  +     filename temp catalog 'sashelp.emexpl.variableclustering_score1.source';
19972  +     %include temp;
19973  +     filename temp;
19974  +     %score1(ExportedCompChanged=&_exportedCompChanged, HideVariableChanged=&_hideVariableChanged);
19975  +%end;
19976  +%if (&_trainnum = 2 ) or %upcase(&EM_PROPERTY_TWOSTAGECLUS) = YES %then %do;
19977  +     filename temp catalog 'sashelp.emexpl.variableclustering_score2.source';
19978  +     %include temp;
19979  +     filename temp;
19980  +     %score2(ExportedCompChanged=&_exportedCompChanged, HideVariableChanged=&_hideVariableChanged);
19981  +%end;
19982  +
19983  +  /* store  current property values */
19984  + data &EM_USER_VARCLUSMETA;
19985  +       set &EM_USER_VARCLUSMETA;
19986  +        ExportedComp = "&EM_PROPERTY_EXPORTEDCOMP";
19987  +        HideVariable = "&EM_PROPERTY_HIDEVARIABLE";
19988  + run;
19989  +
19990  +%mend score;
19991  +
19992  +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.VARIABLECLUSTERING_SCORE_MACROS.SOURCE.
19993  +
19994  +%macro ChangeVariableSelectionFlag(Indata=, gcluster=);
19995  +     proc sort data =&indata;
19996  +              by Cluster RsqRatio Type;
19997  +     run;
19998  +     /*----------------------------------------------------------------------
19999  +      The Type variabe is used becuse the variable need to be selected
20000  +        instead of Cluster component when only one variable is in the cluster
20001  +     +-----------------------------------------------------------------------*/
20002  +
20003  +     %if &EM_PROPERTY_EXPORTEDCOMP eq CLUSTERCOMP %then %do;
20004  +         data &indata;
20005  +              set &indata; by cluster;
20006  +              if first.Cluster then Selected = 'YES';
20007  +              else Selected = 'NO';
20008  +         run;
20009  +         quit;
20010  +    %end;
20011  +    %else %do;
20012  +         data &indata(drop = _var _varchange);
20013  +              set &indata; retain _var 0; by Cluster;
20014  +             if first.Cluster then  _varchange = 0;
20015  +                 else _varchange =1;
20016  +             if _var ne _varchange then  Selected  = 'YES';
20017  +             else Selected = 'NO';
20018  +             if last.cluster then  _var = 0;
20019  +             else _var = _varchange;
20020  +         run;
20021  +         quit;
20022  +    %end;
20023  +%mend ChangeVariableSelectionFlag;
20024  +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      3:15   
NOTE: There were 1 observations read from the data set EMWS2.VARCLUS_VARCLUSMETA.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.03 seconds
      

NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.VARIABLECLUSTERING_SCORE2.SOURCE.
20025  +
20026  +%macro score2(ExportedCompChanged=,
20027  +              HideVariableChanged=);
20028  +
20029  +    %EM_GETNAME(KEY=OUTRSQUARE, TYPE=DATA);
20030  +    %EM_GETNAME(key=VARCLUSMETA, type=DATA);
20031  +     data _null_;
20032  +             set &EM_USER_VARCLUSMETA;
20033  +             if _N_=1 then
20034  +             call symput('_ngclus', NGCluster);
20035  +     run;
20036  +
20037  +    %if &ExportedCompChanged = Y %then %do;
20038  +        %ChangeVariableSelectionFlag(Indata=&EM_USER_OUTRSQUARE);
20039  +    %end;
20040  +
20041  +    %do i =1 %to &_ngclus;
20042  +            %let outrsquareds = OUTRSQUARE&i;
20043  +            %let gc = GC&i;
20044  +            %EM_GETNAME(KEY=&outrsquareds, TYPE=DATA);
20045  +            %let emuseroutrsq = &EM_USER_&outrsquareds;
20046  +            data &emuseroutrsq;
20047  +                 set &EM_USER_OUTRSQUARE;
20048  +                 if strip(GCluster) ne "&gc" then delete;
20049  +            run;
20050  +            /*
20051  +            proc print data = &emuseroutrsq;
20052  +            run;
20053  +            */
20054  +    %end;
20055  +
20056  +    %MakeDeltaCode2(groupds=&EM_USER_OUTRSQUARE, DeltaCodeFile=&EM_FILE_CDELTA_TRAIN);
20057  +
20058  +%mend score2;
20059  +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      464143:212   
NOTE: There were 1 observations read from the data set EMWS2.VARCLUS_VARCLUSMETA.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.01 seconds
      


NOTE: There were 503 observations read from the data set EMWS2.VARCLUS_OUTRSQUARE.
NOTE: The data set EMWS2.VARCLUS_OUTRSQUARE has 503 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           2.51 seconds
      cpu time            0.03 seconds
      


NOTE: There were 503 observations read from the data set EMWS2.VARCLUS_OUTRSQUARE.
NOTE: The data set EMWS2.VARCLUS_OUTRSQUARE has 503 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           2.34 seconds
      cpu time            0.07 seconds
      

WARNING: Apparent symbolic reference EM_USER_ not resolved.

NOTE: There were 503 observations read from the data set EMWS2.VARCLUS_OUTRSQUARE.
NOTE: The data set EMWS2.VARCLUS_OUTRSQUARE1 has 119 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           2.46 seconds
      cpu time            0.01 seconds
      

WARNING: Apparent symbolic reference EM_USER_ not resolved.

NOTE: There were 503 observations read from the data set EMWS2.VARCLUS_OUTRSQUARE.
NOTE: The data set EMWS2.VARCLUS_OUTRSQUARE2 has 320 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           2.67 seconds
      cpu time            0.00 seconds
      

WARNING: Apparent symbolic reference EM_USER_ not resolved.

NOTE: There were 503 observations read from the data set EMWS2.VARCLUS_OUTRSQUARE.
NOTE: The data set EMWS2.VARCLUS_OUTRSQUARE3 has 14 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           2.50 seconds
      cpu time            0.03 seconds
      

WARNING: Apparent symbolic reference EM_USER_ not resolved.

NOTE: There were 503 observations read from the data set EMWS2.VARCLUS_OUTRSQUARE.
NOTE: The data set EMWS2.VARCLUS_OUTRSQUARE4 has 5 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           2.56 seconds
      cpu time            0.04 seconds
      

WARNING: Apparent symbolic reference EM_USER_ not resolved.

NOTE: There were 503 observations read from the data set EMWS2.VARCLUS_OUTRSQUARE.
NOTE: The data set EMWS2.VARCLUS_OUTRSQUARE5 has 45 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           2.62 seconds
      cpu time            0.00 seconds
      


NOTE: The file X is:
      (no system-specific pathname available), 
      (no system-specific file attributes available)

NOTE: 167 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 93.
NOTE: There were 503 observations read from the data set EMWS2.VARCLUS_OUTRSQUARE.
NOTE: DATA statement used (Total process time):
      real time           0.59 seconds
      cpu time            0.01 seconds
      

NOTE: Fileref X has been deassigned.

NOTE: There were 1 observations read from the data set EMWS2.VARCLUS_VARCLUSMETA.
NOTE: The data set EMWS2.VARCLUS_VARCLUSMETA has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           2.37 seconds
      cpu time            0.01 seconds
      

20060   *------------------------------------------------------------*;
20061   * End SCORE: VarClus;
20062   *------------------------------------------------------------*;
20063   

20064   filename emflow "\\Client\C$\Users\sonik\Documents\6201 - MBAD - Monica\Project\Predictive Analytics1\Workspaces\EMWS2\VarClus\EMFLOWSCORE.sas";
20065   *------------------------------------------------------------*;
20066   * VarClus: Scoring DATA data;
20067   *------------------------------------------------------------*;
20068   data EMWS2.VarClus_TRAIN
20069   / view=EMWS2.VarClus_TRAIN
20070   ;
20071   set EMWS2.Part_TRAIN
20072   ;
20073   %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\Client\C$\Users\sonik\Documents\6201 - MBAD - Monica\Project\Predictive Analytics1\Workspaces\EMWS2\VarClus\EMFLOWSCORE.sas.
20074  +*** Begin Class Look-up, Standardization, Replacement ;
20075  +
20076  +*** Generate dummy variables for BOTHPAYM ;
20077  +label BOTHPAYM0 = 'BOTHPAYM=0' ;
20078  +label BOTHPAYM1 = 'BOTHPAYM=1' ;
20079  +if missing( BOTHPAYM ) then do;
20080  +   BOTHPAYM0 = .;
20081  +   BOTHPAYM1 = .;
20082  +end;
20083  +else do;
20084  +   length _dm4 $ 4; drop _dm4 ;
20085  +   _dm4 = put( BOTHPAYM , $4. );
20086  +   %DMNORMIP( _dm4 )
20087  +   if _dm4 = '0'  then do;
20088  +      BOTHPAYM0 = 1;
20089  +      BOTHPAYM1 = 0;
20090  +   end;
20091  +   else if _dm4 = '1'  then do;
20092  +      BOTHPAYM0 = 0;
20093  +      BOTHPAYM1 = 1;
20094  +   end;
20095  +   else do;
20096  +      delete;
20097  +   end;
20098  +end;
20099  +
20100  +*** Generate dummy variables for CCPAYM ;
20101  +label CCPAYM0 = 'CCPAYM=0' ;
20102  +label CCPAYM1 = 'CCPAYM=1' ;
20103  +if missing( CCPAYM ) then do;
20104  +   CCPAYM0 = .;
20105  +   CCPAYM1 = .;
20106  +end;
20107  +else do;
20108  +   length _dm4 $ 4; drop _dm4 ;
20109  +   _dm4 = put( CCPAYM , $4. );
20110  +   %DMNORMIP( _dm4 )
20111  +   if _dm4 = '0'  then do;
20112  +      CCPAYM0 = 1;
20113  +      CCPAYM1 = 0;
20114  +   end;
20115  +   else if _dm4 = '1'  then do;
20116  +      CCPAYM0 = 0;
20117  +      CCPAYM1 = 1;
20118  +   end;
20119  +   else do;
20120  +      delete;
20121  +   end;
20122  +end;
20123  +
20124  +*** Generate dummy variables for PCPAYM ;
20125  +label PCPAYM0 = 'PCPAYM=0' ;
20126  +label PCPAYM1 = 'PCPAYM=1' ;
20127  +if missing( PCPAYM ) then do;
20128  +   PCPAYM0 = .;
20129  +   PCPAYM1 = .;
20130  +end;
20131  +else do;
20132  +   length _dm4 $ 4; drop _dm4 ;
20133  +   _dm4 = put( PCPAYM , $4. );
20134  +   %DMNORMIP( _dm4 )
20135  +   if _dm4 = '0'  then do;
20136  +      PCPAYM0 = 1;
20137  +      PCPAYM1 = 0;
20138  +   end;
20139  +   else if _dm4 = '1'  then do;
20140  +      PCPAYM0 = 0;
20141  +      PCPAYM1 = 1;
20142  +   end;
20143  +   else do;
20144  +      delete;
20145  +   end;
20146  +end;
20147  +
20148  +*** Generate dummy variables for ACTBUY ;
20149  +label ACTBUY0 = 'ACTBUY=0' ;
20150  +label ACTBUY1 = 'ACTBUY=1' ;
20151  +label ACTBUY2 = 'ACTBUY=2' ;
20152  +label ACTBUY3 = 'ACTBUY=3' ;
20153  +label ACTBUY4 = 'ACTBUY=4' ;
20154  +label ACTBUY5 = 'ACTBUY=5' ;
20155  +label ACTBUY6 = 'ACTBUY=6' ;
20156  +label ACTBUY7 = 'ACTBUY=7' ;
20157  +label ACTBUY8 = 'ACTBUY=8' ;
20158  +label ACTBUY9 = 'ACTBUY=9' ;
20159  +label ACTBUY10 = 'ACTBUY=10' ;
20160  +*** encoding is sparse, initialize to zero;
20161  +ACTBUY0 = 0;
20162  +ACTBUY1 = 0;
20163  +ACTBUY2 = 0;
20164  +ACTBUY3 = 0;
20165  +ACTBUY4 = 0;
20166  +ACTBUY5 = 0;
20167  +ACTBUY6 = 0;
20168  +ACTBUY7 = 0;
20169  +ACTBUY8 = 0;
20170  +ACTBUY9 = 0;
20171  +ACTBUY10 = 0;
20172  +if missing( ACTBUY ) then do;
20173  +   ACTBUY0 = .;
20174  +   ACTBUY1 = .;
20175  +   ACTBUY2 = .;
20176  +   ACTBUY3 = .;
20177  +   ACTBUY4 = .;
20178  +   ACTBUY5 = .;
20179  +   ACTBUY6 = .;
20180  +   ACTBUY7 = .;
20181  +   ACTBUY8 = .;
20182  +   ACTBUY9 = .;
20183  +   ACTBUY10 = .;
20184  +end;
20185  +else do;
20186  +   length _dm12 $ 12; drop _dm12 ;
20187  +   _dm12 = put( ACTBUY , BEST12. );
20188  +   %DMNORMIP( _dm12 )
20189  +   _dm_find = 0; drop _dm_find;
20190  +   if _dm12 <= '4'  then do;
20191  +      if _dm12 <= '10'  then do;
20192  +         if _dm12 <= '1'  then do;
20193  +            if _dm12 = '0'  then do;
20194  +               ACTBUY0 = 1;
20195  +               _dm_find = 1;
20196  +            end;
20197  +            else do;
20198  +               if _dm12 = '1'  then do;
20199  +                  ACTBUY1 = 1;
20200  +                  _dm_find = 1;
20201  +               end;
20202  +            end;
20203  +         end;
20204  +         else do;
20205  +            if _dm12 = '10'  then do;
20206  +               ACTBUY10 = 1;
20207  +               _dm_find = 1;
20208  +            end;
20209  +         end;
20210  +      end;
20211  +      else do;
20212  +         if _dm12 <= '3'  then do;
20213  +            if _dm12 = '2'  then do;
20214  +               ACTBUY2 = 1;
20215  +               _dm_find = 1;
20216  +            end;
20217  +            else do;
20218  +               if _dm12 = '3'  then do;
20219  +                  ACTBUY3 = 1;
20220  +                  _dm_find = 1;
20221  +               end;
20222  +            end;
20223  +         end;
20224  +         else do;
20225  +            if _dm12 = '4'  then do;
20226  +               ACTBUY4 = 1;
20227  +               _dm_find = 1;
20228  +            end;
20229  +         end;
20230  +      end;
20231  +   end;
20232  +   else do;
20233  +      if _dm12 <= '7'  then do;
20234  +         if _dm12 <= '6'  then do;
20235  +            if _dm12 = '5'  then do;
20236  +               ACTBUY5 = 1;
20237  +               _dm_find = 1;
20238  +            end;
20239  +            else do;
20240  +               if _dm12 = '6'  then do;
20241  +                  ACTBUY6 = 1;
20242  +                  _dm_find = 1;
20243  +               end;
20244  +            end;
20245  +         end;
20246  +         else do;
20247  +            if _dm12 = '7'  then do;
20248  +               ACTBUY7 = 1;
20249  +               _dm_find = 1;
20250  +            end;
20251  +         end;
20252  +      end;
20253  +      else do;
20254  +         if _dm12 = '8'  then do;
20255  +            ACTBUY8 = 1;
20256  +            _dm_find = 1;
20257  +         end;
20258  +         else do;
20259  +            if _dm12 = '9'  then do;
20260  +               ACTBUY9 = 1;
20261  +               _dm_find = 1;
20262  +            end;
20263  +         end;
20264  +      end;
20265  +   end;
20266  +   if not _dm_find then do;
20267  +      delete;
20268  +   end;
20269  +end;
20270  +
20271  +*** Generate dummy variables for DEPT07 ;
20272  +label DEPT070 = 'DEPT07=0' ;
20273  +label DEPT073 = 'DEPT07=3' ;
20274  +label DEPT074 = 'DEPT07=4' ;
20275  +label DEPT075 = 'DEPT07=5' ;
20276  +label DEPT076 = 'DEPT07=6' ;
20277  +label DEPT077 = 'DEPT07=7' ;
20278  +label DEPT078 = 'DEPT07=8' ;
20279  +label DEPT079 = 'DEPT07=9' ;
20280  +label DEPT0711 = 'DEPT07=11' ;
20281  +*** encoding is sparse, initialize to zero;
20282  +DEPT070 = 0;
20283  +DEPT073 = 0;
20284  +DEPT074 = 0;
20285  +DEPT075 = 0;
20286  +DEPT076 = 0;
20287  +DEPT077 = 0;
20288  +DEPT078 = 0;
20289  +DEPT079 = 0;
20290  +DEPT0711 = 0;
20291  +if missing( DEPT07 ) then do;
20292  +   DEPT070 = .;
20293  +   DEPT073 = .;
20294  +   DEPT074 = .;
20295  +   DEPT075 = .;
20296  +   DEPT076 = .;
20297  +   DEPT077 = .;
20298  +   DEPT078 = .;
20299  +   DEPT079 = .;
20300  +   DEPT0711 = .;
20301  +end;
20302  +else do;
20303  +   length _dm12 $ 12; drop _dm12 ;
20304  +   _dm12 = put( DEPT07 , BEST12. );
20305  +   %DMNORMIP( _dm12 )
20306  +   if _dm12 = '0'  then do;
20307  +      DEPT070 = 1;
20308  +   end;
20309  +   else if _dm12 = '3'  then do;
20310  +      DEPT073 = 1;
20311  +   end;
20312  +   else if _dm12 = '5'  then do;
20313  +      DEPT075 = 1;
20314  +   end;
20315  +   else if _dm12 = '4'  then do;
20316  +      DEPT074 = 1;
20317  +   end;
20318  +   else if _dm12 = '7'  then do;
20319  +      DEPT077 = 1;
20320  +   end;
20321  +   else if _dm12 = '6'  then do;
20322  +      DEPT076 = 1;
20323  +   end;
20324  +   else if _dm12 = '11'  then do;
20325  +      DEPT0711 = 1;
20326  +   end;
20327  +   else if _dm12 = '8'  then do;
20328  +      DEPT078 = 1;
20329  +   end;
20330  +   else if _dm12 = '9'  then do;
20331  +      DEPT079 = 1;
20332  +   end;
20333  +   else do;
20334  +      delete;
20335  +   end;
20336  +end;
20337  +
20338  +*** Generate dummy variables for DEPT11 ;
20339  +label DEPT110 = 'DEPT11=0' ;
20340  +label DEPT113 = 'DEPT11=3' ;
20341  +label DEPT114 = 'DEPT11=4' ;
20342  +label DEPT115 = 'DEPT11=5' ;
20343  +label DEPT116 = 'DEPT11=6' ;
20344  +label DEPT117 = 'DEPT11=7' ;
20345  +label DEPT118 = 'DEPT11=8' ;
20346  +label DEPT119 = 'DEPT11=9' ;
20347  +label DEPT1110 = 'DEPT11=10' ;
20348  +label DEPT1111 = 'DEPT11=11' ;
20349  +label DEPT1113 = 'DEPT11=13' ;
20350  +label DEPT1116 = 'DEPT11=16' ;
20351  +label DEPT1118 = 'DEPT11=18' ;
20352  +label DEPT1129 = 'DEPT11=29' ;
20353  +*** encoding is sparse, initialize to zero;
20354  +DEPT110 = 0;
20355  +DEPT113 = 0;
20356  +DEPT114 = 0;
20357  +DEPT115 = 0;
20358  +DEPT116 = 0;
20359  +DEPT117 = 0;
20360  +DEPT118 = 0;
20361  +DEPT119 = 0;
20362  +DEPT1110 = 0;
20363  +DEPT1111 = 0;
20364  +DEPT1113 = 0;
20365  +DEPT1116 = 0;
20366  +DEPT1118 = 0;
20367  +DEPT1129 = 0;
20368  +if missing( DEPT11 ) then do;
20369  +   DEPT110 = .;
20370  +   DEPT113 = .;
20371  +   DEPT114 = .;
20372  +   DEPT115 = .;
20373  +   DEPT116 = .;
20374  +   DEPT117 = .;
20375  +   DEPT118 = .;
20376  +   DEPT119 = .;
20377  +   DEPT1110 = .;
20378  +   DEPT1111 = .;
20379  +   DEPT1113 = .;
20380  +   DEPT1116 = .;
20381  +   DEPT1118 = .;
20382  +   DEPT1129 = .;
20383  +end;
20384  +else do;
20385  +   length _dm12 $ 12; drop _dm12 ;
20386  +   _dm12 = put( DEPT11 , BEST12. );
20387  +   %DMNORMIP( _dm12 )
20388  +   if _dm12 = '0'  then do;
20389  +      DEPT110 = 1;
20390  +   end;
20391  +   else if _dm12 = '3'  then do;
20392  +      DEPT113 = 1;
20393  +   end;
20394  +   else if _dm12 = '5'  then do;
20395  +      DEPT115 = 1;
20396  +   end;
20397  +   else if _dm12 = '4'  then do;
20398  +      DEPT114 = 1;
20399  +   end;
20400  +   else if _dm12 = '7'  then do;
20401  +      DEPT117 = 1;
20402  +   end;
20403  +   else if _dm12 = '6'  then do;
20404  +      DEPT116 = 1;
20405  +   end;
20406  +   else if _dm12 = '8'  then do;
20407  +      DEPT118 = 1;
20408  +   end;
20409  +   else if _dm12 = '9'  then do;
20410  +      DEPT119 = 1;
20411  +   end;
20412  +   else if _dm12 = '11'  then do;
20413  +      DEPT1111 = 1;
20414  +   end;
20415  +   else if _dm12 = '13'  then do;
20416  +      DEPT1113 = 1;
20417  +   end;
20418  +   else if _dm12 = '10'  then do;
20419  +      DEPT1110 = 1;
20420  +   end;
20421  +   else if _dm12 = '16'  then do;
20422  +      DEPT1116 = 1;
20423  +   end;
20424  +   else if _dm12 = '18'  then do;
20425  +      DEPT1118 = 1;
20426  +   end;
20427  +   else if _dm12 = '29'  then do;
20428  +      DEPT1129 = 1;
20429  +   end;
20430  +   else do;
20431  +      delete;
20432  +   end;
20433  +end;
20434  +
20435  +*** Generate dummy variables for DEPT12 ;
20436  +label DEPT120 = 'DEPT12=0' ;
20437  +label DEPT123 = 'DEPT12=3' ;
20438  +label DEPT124 = 'DEPT12=4' ;
20439  +label DEPT125 = 'DEPT12=5' ;
20440  +label DEPT126 = 'DEPT12=6' ;
20441  +label DEPT127 = 'DEPT12=7' ;
20442  +label DEPT128 = 'DEPT12=8' ;
20443  +label DEPT129 = 'DEPT12=9' ;
20444  +label DEPT1210 = 'DEPT12=10' ;
20445  +label DEPT1211 = 'DEPT12=11' ;
20446  +label DEPT1212 = 'DEPT12=12' ;
20447  +label DEPT1213 = 'DEPT12=13' ;
20448  +label DEPT1215 = 'DEPT12=15' ;
20449  +label DEPT1216 = 'DEPT12=16' ;
20450  +*** encoding is sparse, initialize to zero;
20451  +DEPT120 = 0;
20452  +DEPT123 = 0;
20453  +DEPT124 = 0;
20454  +DEPT125 = 0;
20455  +DEPT126 = 0;
20456  +DEPT127 = 0;
20457  +DEPT128 = 0;
20458  +DEPT129 = 0;
20459  +DEPT1210 = 0;
20460  +DEPT1211 = 0;
20461  +DEPT1212 = 0;
20462  +DEPT1213 = 0;
20463  +DEPT1215 = 0;
20464  +DEPT1216 = 0;
20465  +if missing( DEPT12 ) then do;
20466  +   DEPT120 = .;
20467  +   DEPT123 = .;
20468  +   DEPT124 = .;
20469  +   DEPT125 = .;
20470  +   DEPT126 = .;
20471  +   DEPT127 = .;
20472  +   DEPT128 = .;
20473  +   DEPT129 = .;
20474  +   DEPT1210 = .;
20475  +   DEPT1211 = .;
20476  +   DEPT1212 = .;
20477  +   DEPT1213 = .;
20478  +   DEPT1215 = .;
20479  +   DEPT1216 = .;
20480  +end;
20481  +else do;
20482  +   length _dm12 $ 12; drop _dm12 ;
20483  +   _dm12 = put( DEPT12 , BEST12. );
20484  +   %DMNORMIP( _dm12 )
20485  +   if _dm12 = '0'  then do;
20486  +      DEPT120 = 1;
20487  +   end;
20488  +   else if _dm12 = '3'  then do;
20489  +      DEPT123 = 1;
20490  +   end;
20491  +   else if _dm12 = '5'  then do;
20492  +      DEPT125 = 1;
20493  +   end;
20494  +   else if _dm12 = '4'  then do;
20495  +      DEPT124 = 1;
20496  +   end;
20497  +   else if _dm12 = '7'  then do;
20498  +      DEPT127 = 1;
20499  +   end;
20500  +   else if _dm12 = '6'  then do;
20501  +      DEPT126 = 1;
20502  +   end;
20503  +   else if _dm12 = '9'  then do;
20504  +      DEPT129 = 1;
20505  +   end;
20506  +   else if _dm12 = '8'  then do;
20507  +      DEPT128 = 1;
20508  +   end;
20509  +   else if _dm12 = '11'  then do;
20510  +      DEPT1211 = 1;
20511  +   end;
20512  +   else if _dm12 = '13'  then do;
20513  +      DEPT1213 = 1;
20514  +   end;
20515  +   else if _dm12 = '10'  then do;
20516  +      DEPT1210 = 1;
20517  +   end;
20518  +   else if _dm12 = '15'  then do;
20519  +      DEPT1215 = 1;
20520  +   end;
20521  +   else if _dm12 = '12'  then do;
20522  +      DEPT1212 = 1;
20523  +   end;
20524  +   else if _dm12 = '16'  then do;
20525  +      DEPT1216 = 1;
20526  +   end;
20527  +   else do;
20528  +      delete;
20529  +   end;
20530  +end;
20531  +
20532  +*** Generate dummy variables for DEPT17 ;
20533  +label DEPT170 = 'DEPT17=0' ;
20534  +label DEPT173 = 'DEPT17=3' ;
20535  +label DEPT174 = 'DEPT17=4' ;
20536  +label DEPT175 = 'DEPT17=5' ;
20537  +label DEPT176 = 'DEPT17=6' ;
20538  +label DEPT177 = 'DEPT17=7' ;
20539  +label DEPT178 = 'DEPT17=8' ;
20540  +label DEPT179 = 'DEPT17=9' ;
20541  +label DEPT1710 = 'DEPT17=10' ;
20542  +label DEPT1711 = 'DEPT17=11' ;
20543  +label DEPT1712 = 'DEPT17=12' ;
20544  +label DEPT1713 = 'DEPT17=13' ;
20545  +label DEPT1714 = 'DEPT17=14' ;
20546  +label DEPT1715 = 'DEPT17=15' ;
20547  +label DEPT1716 = 'DEPT17=16' ;
20548  +label DEPT1717 = 'DEPT17=17' ;
20549  +label DEPT1723 = 'DEPT17=23' ;
20550  +label DEPT1734 = 'DEPT17=34' ;
20551  +*** encoding is sparse, initialize to zero;
20552  +DEPT170 = 0;
20553  +DEPT173 = 0;
20554  +DEPT174 = 0;
20555  +DEPT175 = 0;
20556  +DEPT176 = 0;
20557  +DEPT177 = 0;
20558  +DEPT178 = 0;
20559  +DEPT179 = 0;
20560  +DEPT1710 = 0;
20561  +DEPT1711 = 0;
20562  +DEPT1712 = 0;
20563  +DEPT1713 = 0;
20564  +DEPT1714 = 0;
20565  +DEPT1715 = 0;
20566  +DEPT1716 = 0;
20567  +DEPT1717 = 0;
20568  +DEPT1723 = 0;
20569  +DEPT1734 = 0;
20570  +if missing( DEPT17 ) then do;
20571  +   DEPT170 = .;
20572  +   DEPT173 = .;
20573  +   DEPT174 = .;
20574  +   DEPT175 = .;
20575  +   DEPT176 = .;
20576  +   DEPT177 = .;
20577  +   DEPT178 = .;
20578  +   DEPT179 = .;
20579  +   DEPT1710 = .;
20580  +   DEPT1711 = .;
20581  +   DEPT1712 = .;
20582  +   DEPT1713 = .;
20583  +   DEPT1714 = .;
20584  +   DEPT1715 = .;
20585  +   DEPT1716 = .;
20586  +   DEPT1717 = .;
20587  +   DEPT1723 = .;
20588  +   DEPT1734 = .;
20589  +end;
20590  +else do;
20591  +   length _dm12 $ 12; drop _dm12 ;
20592  +   _dm12 = put( DEPT17 , BEST12. );
20593  +   %DMNORMIP( _dm12 )
20594  +   if _dm12 = '0'  then do;
20595  +      DEPT170 = 1;
20596  +   end;
20597  +   else if _dm12 = '3'  then do;
20598  +      DEPT173 = 1;
20599  +   end;
20600  +   else if _dm12 = '5'  then do;
20601  +      DEPT175 = 1;
20602  +   end;
20603  +   else if _dm12 = '4'  then do;
20604  +      DEPT174 = 1;
20605  +   end;
20606  +   else if _dm12 = '6'  then do;
20607  +      DEPT176 = 1;
20608  +   end;
20609  +   else if _dm12 = '7'  then do;
20610  +      DEPT177 = 1;
20611  +   end;
20612  +   else if _dm12 = '8'  then do;
20613  +      DEPT178 = 1;
20614  +   end;
20615  +   else if _dm12 = '9'  then do;
20616  +      DEPT179 = 1;
20617  +   end;
20618  +   else if _dm12 = '10'  then do;
20619  +      DEPT1710 = 1;
20620  +   end;
20621  +   else if _dm12 = '12'  then do;
20622  +      DEPT1712 = 1;
20623  +   end;
20624  +   else if _dm12 = '11'  then do;
20625  +      DEPT1711 = 1;
20626  +   end;
20627  +   else if _dm12 = '14'  then do;
20628  +      DEPT1714 = 1;
20629  +   end;
20630  +   else if _dm12 = '17'  then do;
20631  +      DEPT1717 = 1;
20632  +   end;
20633  +   else if _dm12 = '13'  then do;
20634  +      DEPT1713 = 1;
20635  +   end;
20636  +   else if _dm12 = '15'  then do;
20637  +      DEPT1715 = 1;
20638  +   end;
20639  +   else if _dm12 = '16'  then do;
20640  +      DEPT1716 = 1;
20641  +   end;
20642  +   else if _dm12 = '23'  then do;
20643  +      DEPT1723 = 1;
20644  +   end;
20645  +   else if _dm12 = '34'  then do;
20646  +      DEPT1734 = 1;
20647  +   end;
20648  +   else do;
20649  +      delete;
20650  +   end;
20651  +end;
20652  +
20653  +*** Generate dummy variables for DEPT18 ;
20654  +label DEPT180 = 'DEPT18=0' ;
20655  +label DEPT183 = 'DEPT18=3' ;
20656  +label DEPT184 = 'DEPT18=4' ;
20657  +label DEPT185 = 'DEPT18=5' ;
20658  +label DEPT186 = 'DEPT18=6' ;
20659  +label DEPT187 = 'DEPT18=7' ;
20660  +label DEPT188 = 'DEPT18=8' ;
20661  +label DEPT189 = 'DEPT18=9' ;
20662  +label DEPT1810 = 'DEPT18=10' ;
20663  +label DEPT1811 = 'DEPT18=11' ;
20664  +label DEPT1812 = 'DEPT18=12' ;
20665  +label DEPT1813 = 'DEPT18=13' ;
20666  +*** encoding is sparse, initialize to zero;
20667  +DEPT180 = 0;
20668  +DEPT183 = 0;
20669  +DEPT184 = 0;
20670  +DEPT185 = 0;
20671  +DEPT186 = 0;
20672  +DEPT187 = 0;
20673  +DEPT188 = 0;
20674  +DEPT189 = 0;
20675  +DEPT1810 = 0;
20676  +DEPT1811 = 0;
20677  +DEPT1812 = 0;
20678  +DEPT1813 = 0;
20679  +if missing( DEPT18 ) then do;
20680  +   DEPT180 = .;
20681  +   DEPT183 = .;
20682  +   DEPT184 = .;
20683  +   DEPT185 = .;
20684  +   DEPT186 = .;
20685  +   DEPT187 = .;
20686  +   DEPT188 = .;
20687  +   DEPT189 = .;
20688  +   DEPT1810 = .;
20689  +   DEPT1811 = .;
20690  +   DEPT1812 = .;
20691  +   DEPT1813 = .;
20692  +end;
20693  +else do;
20694  +   length _dm12 $ 12; drop _dm12 ;
20695  +   _dm12 = put( DEPT18 , BEST12. );
20696  +   %DMNORMIP( _dm12 )
20697  +   if _dm12 = '0'  then do;
20698  +      DEPT180 = 1;
20699  +   end;
20700  +   else if _dm12 = '3'  then do;
20701  +      DEPT183 = 1;
20702  +   end;
20703  +   else if _dm12 = '4'  then do;
20704  +      DEPT184 = 1;
20705  +   end;
20706  +   else if _dm12 = '5'  then do;
20707  +      DEPT185 = 1;
20708  +   end;
20709  +   else if _dm12 = '7'  then do;
20710  +      DEPT187 = 1;
20711  +   end;
20712  +   else if _dm12 = '6'  then do;
20713  +      DEPT186 = 1;
20714  +   end;
20715  +   else if _dm12 = '10'  then do;
20716  +      DEPT1810 = 1;
20717  +   end;
20718  +   else if _dm12 = '11'  then do;
20719  +      DEPT1811 = 1;
20720  +   end;
20721  +   else if _dm12 = '8'  then do;
20722  +      DEPT188 = 1;
20723  +   end;
20724  +   else if _dm12 = '9'  then do;
20725  +      DEPT189 = 1;
20726  +   end;
20727  +   else if _dm12 = '12'  then do;
20728  +      DEPT1812 = 1;
20729  +   end;
20730  +   else if _dm12 = '13'  then do;
20731  +      DEPT1813 = 1;
20732  +   end;
20733  +   else do;
20734  +      delete;
20735  +   end;
20736  +end;
20737  +
20738  +*** Generate dummy variables for DEPT19 ;
20739  +label DEPT190 = 'DEPT19=0' ;
20740  +label DEPT193 = 'DEPT19=3' ;
20741  +label DEPT194 = 'DEPT19=4' ;
20742  +label DEPT195 = 'DEPT19=5' ;
20743  +label DEPT196 = 'DEPT19=6' ;
20744  +label DEPT197 = 'DEPT19=7' ;
20745  +label DEPT198 = 'DEPT19=8' ;
20746  +label DEPT199 = 'DEPT19=9' ;
20747  +label DEPT1910 = 'DEPT19=10' ;
20748  +label DEPT1911 = 'DEPT19=11' ;
20749  +label DEPT1912 = 'DEPT19=12' ;
20750  +label DEPT1913 = 'DEPT19=13' ;
20751  +label DEPT1914 = 'DEPT19=14' ;
20752  +label DEPT1915 = 'DEPT19=15' ;
20753  +label DEPT1918 = 'DEPT19=18' ;
20754  +label DEPT1920 = 'DEPT19=20' ;
20755  +*** encoding is sparse, initialize to zero;
20756  +DEPT190 = 0;
20757  +DEPT193 = 0;
20758  +DEPT194 = 0;
20759  +DEPT195 = 0;
20760  +DEPT196 = 0;
20761  +DEPT197 = 0;
20762  +DEPT198 = 0;
20763  +DEPT199 = 0;
20764  +DEPT1910 = 0;
20765  +DEPT1911 = 0;
20766  +DEPT1912 = 0;
20767  +DEPT1913 = 0;
20768  +DEPT1914 = 0;
20769  +DEPT1915 = 0;
20770  +DEPT1918 = 0;
20771  +DEPT1920 = 0;
20772  +if missing( DEPT19 ) then do;
20773  +   DEPT190 = .;
20774  +   DEPT193 = .;
20775  +   DEPT194 = .;
20776  +   DEPT195 = .;
20777  +   DEPT196 = .;
20778  +   DEPT197 = .;
20779  +   DEPT198 = .;
20780  +   DEPT199 = .;
20781  +   DEPT1910 = .;
20782  +   DEPT1911 = .;
20783  +   DEPT1912 = .;
20784  +   DEPT1913 = .;
20785  +   DEPT1914 = .;
20786  +   DEPT1915 = .;
20787  +   DEPT1918 = .;
20788  +   DEPT1920 = .;
20789  +end;
20790  +else do;
20791  +   length _dm12 $ 12; drop _dm12 ;
20792  +   _dm12 = put( DEPT19 , BEST12. );
20793  +   %DMNORMIP( _dm12 )
20794  +   if _dm12 = '0'  then do;
20795  +      DEPT190 = 1;
20796  +   end;
20797  +   else if _dm12 = '3'  then do;
20798  +      DEPT193 = 1;
20799  +   end;
20800  +   else if _dm12 = '4'  then do;
20801  +      DEPT194 = 1;
20802  +   end;
20803  +   else if _dm12 = '5'  then do;
20804  +      DEPT195 = 1;
20805  +   end;
20806  +   else if _dm12 = '6'  then do;
20807  +      DEPT196 = 1;
20808  +   end;
20809  +   else if _dm12 = '7'  then do;
20810  +      DEPT197 = 1;
20811  +   end;
20812  +   else if _dm12 = '8'  then do;
20813  +      DEPT198 = 1;
20814  +   end;
20815  +   else if _dm12 = '9'  then do;
20816  +      DEPT199 = 1;
20817  +   end;
20818  +   else if _dm12 = '10'  then do;
20819  +      DEPT1910 = 1;
20820  +   end;
20821  +   else if _dm12 = '11'  then do;
20822  +      DEPT1911 = 1;
20823  +   end;
20824  +   else if _dm12 = '12'  then do;
20825  +      DEPT1912 = 1;
20826  +   end;
20827  +   else if _dm12 = '13'  then do;
20828  +      DEPT1913 = 1;
20829  +   end;
20830  +   else if _dm12 = '14'  then do;
20831  +      DEPT1914 = 1;
20832  +   end;
20833  +   else if _dm12 = '15'  then do;
20834  +      DEPT1915 = 1;
20835  +   end;
20836  +   else if _dm12 = '18'  then do;
20837  +      DEPT1918 = 1;
20838  +   end;
20839  +   else if _dm12 = '20'  then do;
20840  +      DEPT1920 = 1;
20841  +   end;
20842  +   else do;
20843  +      delete;
20844  +   end;
20845  +end;
20846  +
20847  +*** Generate dummy variables for DEPT20 ;
20848  +label DEPT200 = 'DEPT20=0' ;
20849  +label DEPT203 = 'DEPT20=3' ;
20850  +label DEPT204 = 'DEPT20=4' ;
20851  +label DEPT205 = 'DEPT20=5' ;
20852  +label DEPT206 = 'DEPT20=6' ;
20853  +label DEPT207 = 'DEPT20=7' ;
20854  +label DEPT208 = 'DEPT20=8' ;
20855  +*** encoding is sparse, initialize to zero;
20856  +DEPT200 = 0;
20857  +DEPT203 = 0;
20858  +DEPT204 = 0;
20859  +DEPT205 = 0;
20860  +DEPT206 = 0;
20861  +DEPT207 = 0;
20862  +DEPT208 = 0;
20863  +if missing( DEPT20 ) then do;
20864  +   DEPT200 = .;
20865  +   DEPT203 = .;
20866  +   DEPT204 = .;
20867  +   DEPT205 = .;
20868  +   DEPT206 = .;
20869  +   DEPT207 = .;
20870  +   DEPT208 = .;
20871  +end;
20872  +else do;
20873  +   length _dm12 $ 12; drop _dm12 ;
20874  +   _dm12 = put( DEPT20 , BEST12. );
20875  +   %DMNORMIP( _dm12 )
20876  +   if _dm12 = '0'  then do;
20877  +      DEPT200 = 1;
20878  +   end;
20879  +   else if _dm12 = '3'  then do;
20880  +      DEPT203 = 1;
20881  +   end;
20882  +   else if _dm12 = '5'  then do;
20883  +      DEPT205 = 1;
20884  +   end;
20885  +   else if _dm12 = '4'  then do;
20886  +      DEPT204 = 1;
20887  +   end;
20888  +   else if _dm12 = '6'  then do;
20889  +      DEPT206 = 1;
20890  +   end;
20891  +   else if _dm12 = '7'  then do;
20892  +      DEPT207 = 1;
20893  +   end;
20894  +   else if _dm12 = '8'  then do;
20895  +      DEPT208 = 1;
20896  +   end;
20897  +   else do;
20898  +      delete;
20899  +   end;
20900  +end;
20901  +
20902  +*** Generate dummy variables for DEPT21 ;
20903  +label DEPT210 = 'DEPT21=0' ;
20904  +label DEPT213 = 'DEPT21=3' ;
20905  +label DEPT214 = 'DEPT21=4' ;
20906  +label DEPT215 = 'DEPT21=5' ;
20907  +label DEPT216 = 'DEPT21=6' ;
20908  +label DEPT219 = 'DEPT21=9' ;
20909  +*** encoding is sparse, initialize to zero;
20910  +DEPT210 = 0;
20911  +DEPT213 = 0;
20912  +DEPT214 = 0;
20913  +DEPT215 = 0;
20914  +DEPT216 = 0;
20915  +DEPT219 = 0;
20916  +if missing( DEPT21 ) then do;
20917  +   DEPT210 = .;
20918  +   DEPT213 = .;
20919  +   DEPT214 = .;
20920  +   DEPT215 = .;
20921  +   DEPT216 = .;
20922  +   DEPT219 = .;
20923  +end;
20924  +else do;
20925  +   length _dm12 $ 12; drop _dm12 ;
20926  +   _dm12 = put( DEPT21 , BEST12. );
20927  +   %DMNORMIP( _dm12 )
20928  +   if _dm12 = '0'  then do;
20929  +      DEPT210 = 1;
20930  +   end;
20931  +   else if _dm12 = '3'  then do;
20932  +      DEPT213 = 1;
20933  +   end;
20934  +   else if _dm12 = '5'  then do;
20935  +      DEPT215 = 1;
20936  +   end;
20937  +   else if _dm12 = '4'  then do;
20938  +      DEPT214 = 1;
20939  +   end;
20940  +   else if _dm12 = '6'  then do;
20941  +      DEPT216 = 1;
20942  +   end;
20943  +   else if _dm12 = '9'  then do;
20944  +      DEPT219 = 1;
20945  +   end;
20946  +   else do;
20947  +      delete;
20948  +   end;
20949  +end;
20950  +
20951  +*** Generate dummy variables for DEPT26 ;
20952  +label DEPT260 = 'DEPT26=0' ;
20953  +label DEPT263 = 'DEPT26=3' ;
20954  +label DEPT264 = 'DEPT26=4' ;
20955  +label DEPT265 = 'DEPT26=5' ;
20956  +label DEPT266 = 'DEPT26=6' ;
20957  +label DEPT267 = 'DEPT26=7' ;
20958  +label DEPT268 = 'DEPT26=8' ;
20959  +label DEPT269 = 'DEPT26=9' ;
20960  +label DEPT2610 = 'DEPT26=10' ;
20961  +label DEPT2611 = 'DEPT26=11' ;
20962  +label DEPT2614 = 'DEPT26=14' ;
20963  +label DEPT2615 = 'DEPT26=15' ;
20964  +label DEPT2622 = 'DEPT26=22' ;
20965  +label DEPT2625 = 'DEPT26=25' ;
20966  +label DEPT2655 = 'DEPT26=55' ;
20967  +*** encoding is sparse, initialize to zero;
20968  +DEPT260 = 0;
20969  +DEPT263 = 0;
20970  +DEPT264 = 0;
20971  +DEPT265 = 0;
20972  +DEPT266 = 0;
20973  +DEPT267 = 0;
20974  +DEPT268 = 0;
20975  +DEPT269 = 0;
20976  +DEPT2610 = 0;
20977  +DEPT2611 = 0;
20978  +DEPT2614 = 0;
20979  +DEPT2615 = 0;
20980  +DEPT2622 = 0;
20981  +DEPT2625 = 0;
20982  +DEPT2655 = 0;
20983  +if missing( DEPT26 ) then do;
20984  +   DEPT260 = .;
20985  +   DEPT263 = .;
20986  +   DEPT264 = .;
20987  +   DEPT265 = .;
20988  +   DEPT266 = .;
20989  +   DEPT267 = .;
20990  +   DEPT268 = .;
20991  +   DEPT269 = .;
20992  +   DEPT2610 = .;
20993  +   DEPT2611 = .;
20994  +   DEPT2614 = .;
20995  +   DEPT2615 = .;
20996  +   DEPT2622 = .;
20997  +   DEPT2625 = .;
20998  +   DEPT2655 = .;
20999  +end;
21000  +else do;
21001  +   length _dm12 $ 12; drop _dm12 ;
21002  +   _dm12 = put( DEPT26 , BEST12. );
21003  +   %DMNORMIP( _dm12 )
21004  +   if _dm12 = '0'  then do;
21005  +      DEPT260 = 1;
21006  +   end;
21007  +   else if _dm12 = '3'  then do;
21008  +      DEPT263 = 1;
21009  +   end;
21010  +   else if _dm12 = '4'  then do;
21011  +      DEPT264 = 1;
21012  +   end;
21013  +   else if _dm12 = '5'  then do;
21014  +      DEPT265 = 1;
21015  +   end;
21016  +   else if _dm12 = '6'  then do;
21017  +      DEPT266 = 1;
21018  +   end;
21019  +   else if _dm12 = '7'  then do;
21020  +      DEPT267 = 1;
21021  +   end;
21022  +   else if _dm12 = '8'  then do;
21023  +      DEPT268 = 1;
21024  +   end;
21025  +   else if _dm12 = '9'  then do;
21026  +      DEPT269 = 1;
21027  +   end;
21028  +   else if _dm12 = '11'  then do;
21029  +      DEPT2611 = 1;
21030  +   end;
21031  +   else if _dm12 = '10'  then do;
21032  +      DEPT2610 = 1;
21033  +   end;
21034  +   else if _dm12 = '14'  then do;
21035  +      DEPT2614 = 1;
21036  +   end;
21037  +   else if _dm12 = '15'  then do;
21038  +      DEPT2615 = 1;
21039  +   end;
21040  +   else if _dm12 = '22'  then do;
21041  +      DEPT2622 = 1;
21042  +   end;
21043  +   else if _dm12 = '25'  then do;
21044  +      DEPT2625 = 1;
21045  +   end;
21046  +   else if _dm12 = '55'  then do;
21047  +      DEPT2655 = 1;
21048  +   end;
21049  +   else do;
21050  +      delete;
21051  +   end;
21052  +end;
21053  +
21054  +*** Generate dummy variables for METHPAYM ;
21055  +label METHPAYMCC = 'METHPAYM=CC' ;
21056  +label METHPAYMCK = 'METHPAYM=CK' ;
21057  +label METHPAYMDK = 'METHPAYM=DK' ;
21058  +label METHPAYMXBOT = 'METHPAYM=XBOT' ;
21059  +*** encoding is sparse, initialize to zero;
21060  +METHPAYMCC = 0;
21061  +METHPAYMCK = 0;
21062  +METHPAYMDK = 0;
21063  +METHPAYMXBOT = 0;
21064  +if missing( METHPAYM ) then do;
21065  +   METHPAYMCC = .;
21066  +   METHPAYMCK = .;
21067  +   METHPAYMDK = .;
21068  +   METHPAYMXBOT = .;
21069  +end;
21070  +else do;
21071  +   length _dm4 $ 4; drop _dm4 ;
21072  +   _dm4 = put( METHPAYM , $4. );
21073  +   %DMNORMIP( _dm4 )
21074  +   if _dm4 = 'CC'  then do;
21075  +      METHPAYMCC = 1;
21076  +   end;
21077  +   else if _dm4 = 'CK'  then do;
21078  +      METHPAYMCK = 1;
21079  +   end;
21080  +   else if _dm4 = 'XBOT'  then do;
21081  +      METHPAYMXBOT = 1;
21082  +   end;
21083  +   else if _dm4 = 'DK'  then do;
21084  +      METHPAYMDK = 1;
21085  +   end;
21086  +   else do;
21087  +      delete;
21088  +   end;
21089  +end;
21090  +
21091  +*** Generate dummy variables for TOTORDQ01 ;
21092  +label TOTORDQ010 = 'TOTORDQ01=0' ;
21093  +label TOTORDQ011 = 'TOTORDQ01=1' ;
21094  +label TOTORDQ012 = 'TOTORDQ01=2' ;
21095  +label TOTORDQ013 = 'TOTORDQ01=3' ;
21096  +label TOTORDQ014 = 'TOTORDQ01=4' ;
21097  +label TOTORDQ015 = 'TOTORDQ01=5' ;
21098  +label TOTORDQ016 = 'TOTORDQ01=6' ;
21099  +*** encoding is sparse, initialize to zero;
21100  +TOTORDQ010 = 0;
21101  +TOTORDQ011 = 0;
21102  +TOTORDQ012 = 0;
21103  +TOTORDQ013 = 0;
21104  +TOTORDQ014 = 0;
21105  +TOTORDQ015 = 0;
21106  +TOTORDQ016 = 0;
21107  +if missing( TOTORDQ01 ) then do;
21108  +   TOTORDQ010 = .;
21109  +   TOTORDQ011 = .;
21110  +   TOTORDQ012 = .;
21111  +   TOTORDQ013 = .;
21112  +   TOTORDQ014 = .;
21113  +   TOTORDQ015 = .;
21114  +   TOTORDQ016 = .;
21115  +end;
21116  +else do;
21117  +   length _dm12 $ 12; drop _dm12 ;
21118  +   _dm12 = put( TOTORDQ01 , BEST12. );
21119  +   %DMNORMIP( _dm12 )
21120  +   if _dm12 = '0'  then do;
21121  +      TOTORDQ010 = 1;
21122  +   end;
21123  +   else if _dm12 = '1'  then do;
21124  +      TOTORDQ011 = 1;
21125  +   end;
21126  +   else if _dm12 = '2'  then do;
21127  +      TOTORDQ012 = 1;
21128  +   end;
21129  +   else if _dm12 = '3'  then do;
21130  +      TOTORDQ013 = 1;
21131  +   end;
21132  +   else if _dm12 = '4'  then do;
21133  +      TOTORDQ014 = 1;
21134  +   end;
21135  +   else if _dm12 = '5'  then do;
21136  +      TOTORDQ015 = 1;
21137  +   end;
21138  +   else if _dm12 = '6'  then do;
21139  +      TOTORDQ016 = 1;
21140  +   end;
21141  +   else do;
21142  +      delete;
21143  +   end;
21144  +end;
21145  +
21146  +*** Generate dummy variables for TOTORDQ02 ;
21147  +label TOTORDQ020 = 'TOTORDQ02=0' ;
21148  +label TOTORDQ021 = 'TOTORDQ02=1' ;
21149  +label TOTORDQ022 = 'TOTORDQ02=2' ;
21150  +label TOTORDQ023 = 'TOTORDQ02=3' ;
21151  +label TOTORDQ024 = 'TOTORDQ02=4' ;
21152  +label TOTORDQ025 = 'TOTORDQ02=5' ;
21153  +label TOTORDQ028 = 'TOTORDQ02=8' ;
21154  +*** encoding is sparse, initialize to zero;
21155  +TOTORDQ020 = 0;
21156  +TOTORDQ021 = 0;
21157  +TOTORDQ022 = 0;
21158  +TOTORDQ023 = 0;
21159  +TOTORDQ024 = 0;
21160  +TOTORDQ025 = 0;
21161  +TOTORDQ028 = 0;
21162  +if missing( TOTORDQ02 ) then do;
21163  +   TOTORDQ020 = .;
21164  +   TOTORDQ021 = .;
21165  +   TOTORDQ022 = .;
21166  +   TOTORDQ023 = .;
21167  +   TOTORDQ024 = .;
21168  +   TOTORDQ025 = .;
21169  +   TOTORDQ028 = .;
21170  +end;
21171  +else do;
21172  +   length _dm12 $ 12; drop _dm12 ;
21173  +   _dm12 = put( TOTORDQ02 , BEST12. );
21174  +   %DMNORMIP( _dm12 )
21175  +   if _dm12 = '0'  then do;
21176  +      TOTORDQ020 = 1;
21177  +   end;
21178  +   else if _dm12 = '1'  then do;
21179  +      TOTORDQ021 = 1;
21180  +   end;
21181  +   else if _dm12 = '2'  then do;
21182  +      TOTORDQ022 = 1;
21183  +   end;
21184  +   else if _dm12 = '3'  then do;
21185  +      TOTORDQ023 = 1;
21186  +   end;
21187  +   else if _dm12 = '4'  then do;
21188  +      TOTORDQ024 = 1;
21189  +   end;
21190  +   else if _dm12 = '5'  then do;
21191  +      TOTORDQ025 = 1;
21192  +   end;
21193  +   else if _dm12 = '8'  then do;
21194  +      TOTORDQ028 = 1;
21195  +   end;
21196  +   else do;
21197  +      delete;
21198  +   end;
21199  +end;
21200  +
21201  +*** Generate dummy variables for TOTORDQ03 ;
21202  +label TOTORDQ030 = 'TOTORDQ03=0' ;
21203  +label TOTORDQ031 = 'TOTORDQ03=1' ;
21204  +label TOTORDQ032 = 'TOTORDQ03=2' ;
21205  +label TOTORDQ033 = 'TOTORDQ03=3' ;
21206  +label TOTORDQ034 = 'TOTORDQ03=4' ;
21207  +*** encoding is sparse, initialize to zero;
21208  +TOTORDQ030 = 0;
21209  +TOTORDQ031 = 0;
21210  +TOTORDQ032 = 0;
21211  +TOTORDQ033 = 0;
21212  +TOTORDQ034 = 0;
21213  +if missing( TOTORDQ03 ) then do;
21214  +   TOTORDQ030 = .;
21215  +   TOTORDQ031 = .;
21216  +   TOTORDQ032 = .;
21217  +   TOTORDQ033 = .;
21218  +   TOTORDQ034 = .;
21219  +end;
21220  +else do;
21221  +   length _dm12 $ 12; drop _dm12 ;
21222  +   _dm12 = put( TOTORDQ03 , BEST12. );
21223  +   %DMNORMIP( _dm12 )
21224  +   if _dm12 = '0'  then do;
21225  +      TOTORDQ030 = 1;
21226  +   end;
21227  +   else if _dm12 = '1'  then do;
21228  +      TOTORDQ031 = 1;
21229  +   end;
21230  +   else if _dm12 = '2'  then do;
21231  +      TOTORDQ032 = 1;
21232  +   end;
21233  +   else if _dm12 = '3'  then do;
21234  +      TOTORDQ033 = 1;
21235  +   end;
21236  +   else if _dm12 = '4'  then do;
21237  +      TOTORDQ034 = 1;
21238  +   end;
21239  +   else do;
21240  +      delete;
21241  +   end;
21242  +end;
21243  +
21244  +*** Generate dummy variables for TOTORDQ04 ;
21245  +label TOTORDQ040 = 'TOTORDQ04=0' ;
21246  +label TOTORDQ041 = 'TOTORDQ04=1' ;
21247  +label TOTORDQ042 = 'TOTORDQ04=2' ;
21248  +label TOTORDQ043 = 'TOTORDQ04=3' ;
21249  +label TOTORDQ044 = 'TOTORDQ04=4' ;
21250  +label TOTORDQ045 = 'TOTORDQ04=5' ;
21251  +label TOTORDQ046 = 'TOTORDQ04=6' ;
21252  +label TOTORDQ049 = 'TOTORDQ04=9' ;
21253  +label TOTORDQ0416 = 'TOTORDQ04=16' ;
21254  +*** encoding is sparse, initialize to zero;
21255  +TOTORDQ040 = 0;
21256  +TOTORDQ041 = 0;
21257  +TOTORDQ042 = 0;
21258  +TOTORDQ043 = 0;
21259  +TOTORDQ044 = 0;
21260  +TOTORDQ045 = 0;
21261  +TOTORDQ046 = 0;
21262  +TOTORDQ049 = 0;
21263  +TOTORDQ0416 = 0;
21264  +if missing( TOTORDQ04 ) then do;
21265  +   TOTORDQ040 = .;
21266  +   TOTORDQ041 = .;
21267  +   TOTORDQ042 = .;
21268  +   TOTORDQ043 = .;
21269  +   TOTORDQ044 = .;
21270  +   TOTORDQ045 = .;
21271  +   TOTORDQ046 = .;
21272  +   TOTORDQ049 = .;
21273  +   TOTORDQ0416 = .;
21274  +end;
21275  +else do;
21276  +   length _dm12 $ 12; drop _dm12 ;
21277  +   _dm12 = put( TOTORDQ04 , BEST12. );
21278  +   %DMNORMIP( _dm12 )
21279  +   if _dm12 = '0'  then do;
21280  +      TOTORDQ040 = 1;
21281  +   end;
21282  +   else if _dm12 = '1'  then do;
21283  +      TOTORDQ041 = 1;
21284  +   end;
21285  +   else if _dm12 = '2'  then do;
21286  +      TOTORDQ042 = 1;
21287  +   end;
21288  +   else if _dm12 = '3'  then do;
21289  +      TOTORDQ043 = 1;
21290  +   end;
21291  +   else if _dm12 = '4'  then do;
21292  +      TOTORDQ044 = 1;
21293  +   end;
21294  +   else if _dm12 = '5'  then do;
21295  +      TOTORDQ045 = 1;
21296  +   end;
21297  +   else if _dm12 = '6'  then do;
21298  +      TOTORDQ046 = 1;
21299  +   end;
21300  +   else if _dm12 = '9'  then do;
21301  +      TOTORDQ049 = 1;
21302  +   end;
21303  +   else if _dm12 = '16'  then do;
21304  +      TOTORDQ0416 = 1;
21305  +   end;
21306  +   else do;
21307  +      delete;
21308  +   end;
21309  +end;
21310  +
21311  +*** Generate dummy variables for TOTORDQ05 ;
21312  +label TOTORDQ050 = 'TOTORDQ05=0' ;
21313  +label TOTORDQ051 = 'TOTORDQ05=1' ;
21314  +label TOTORDQ052 = 'TOTORDQ05=2' ;
21315  +label TOTORDQ053 = 'TOTORDQ05=3' ;
21316  +label TOTORDQ054 = 'TOTORDQ05=4' ;
21317  +label TOTORDQ055 = 'TOTORDQ05=5' ;
21318  +*** encoding is sparse, initialize to zero;
21319  +TOTORDQ050 = 0;
21320  +TOTORDQ051 = 0;
21321  +TOTORDQ052 = 0;
21322  +TOTORDQ053 = 0;
21323  +TOTORDQ054 = 0;
21324  +TOTORDQ055 = 0;
21325  +if missing( TOTORDQ05 ) then do;
21326  +   TOTORDQ050 = .;
21327  +   TOTORDQ051 = .;
21328  +   TOTORDQ052 = .;
21329  +   TOTORDQ053 = .;
21330  +   TOTORDQ054 = .;
21331  +   TOTORDQ055 = .;
21332  +end;
21333  +else do;
21334  +   length _dm12 $ 12; drop _dm12 ;
21335  +   _dm12 = put( TOTORDQ05 , BEST12. );
21336  +   %DMNORMIP( _dm12 )
21337  +   if _dm12 = '0'  then do;
21338  +      TOTORDQ050 = 1;
21339  +   end;
21340  +   else if _dm12 = '1'  then do;
21341  +      TOTORDQ051 = 1;
21342  +   end;
21343  +   else if _dm12 = '2'  then do;
21344  +      TOTORDQ052 = 1;
21345  +   end;
21346  +   else if _dm12 = '3'  then do;
21347  +      TOTORDQ053 = 1;
21348  +   end;
21349  +   else if _dm12 = '4'  then do;
21350  +      TOTORDQ054 = 1;
21351  +   end;
21352  +   else if _dm12 = '5'  then do;
21353  +      TOTORDQ055 = 1;
21354  +   end;
21355  +   else do;
21356  +      delete;
21357  +   end;
21358  +end;
21359  +
21360  +*** Generate dummy variables for TOTORDQ06 ;
21361  +label TOTORDQ060 = 'TOTORDQ06=0' ;
21362  +label TOTORDQ061 = 'TOTORDQ06=1' ;
21363  +label TOTORDQ062 = 'TOTORDQ06=2' ;
21364  +label TOTORDQ063 = 'TOTORDQ06=3' ;
21365  +label TOTORDQ064 = 'TOTORDQ06=4' ;
21366  +label TOTORDQ065 = 'TOTORDQ06=5' ;
21367  +label TOTORDQ069 = 'TOTORDQ06=9' ;
21368  +*** encoding is sparse, initialize to zero;
21369  +TOTORDQ060 = 0;
21370  +TOTORDQ061 = 0;
21371  +TOTORDQ062 = 0;
21372  +TOTORDQ063 = 0;
21373  +TOTORDQ064 = 0;
21374  +TOTORDQ065 = 0;
21375  +TOTORDQ069 = 0;
21376  +if missing( TOTORDQ06 ) then do;
21377  +   TOTORDQ060 = .;
21378  +   TOTORDQ061 = .;
21379  +   TOTORDQ062 = .;
21380  +   TOTORDQ063 = .;
21381  +   TOTORDQ064 = .;
21382  +   TOTORDQ065 = .;
21383  +   TOTORDQ069 = .;
21384  +end;
21385  +else do;
21386  +   length _dm12 $ 12; drop _dm12 ;
21387  +   _dm12 = put( TOTORDQ06 , BEST12. );
21388  +   %DMNORMIP( _dm12 )
21389  +   if _dm12 = '0'  then do;
21390  +      TOTORDQ060 = 1;
21391  +   end;
21392  +   else if _dm12 = '1'  then do;
21393  +      TOTORDQ061 = 1;
21394  +   end;
21395  +   else if _dm12 = '2'  then do;
21396  +      TOTORDQ062 = 1;
21397  +   end;
21398  +   else if _dm12 = '3'  then do;
21399  +      TOTORDQ063 = 1;
21400  +   end;
21401  +   else if _dm12 = '4'  then do;
21402  +      TOTORDQ064 = 1;
21403  +   end;
21404  +   else if _dm12 = '5'  then do;
21405  +      TOTORDQ065 = 1;
21406  +   end;
21407  +   else if _dm12 = '9'  then do;
21408  +      TOTORDQ069 = 1;
21409  +   end;
21410  +   else do;
21411  +      delete;
21412  +   end;
21413  +end;
21414  +
21415  +*** Generate dummy variables for TOTORDQ07 ;
21416  +label TOTORDQ070 = 'TOTORDQ07=0' ;
21417  +label TOTORDQ071 = 'TOTORDQ07=1' ;
21418  +label TOTORDQ072 = 'TOTORDQ07=2' ;
21419  +label TOTORDQ073 = 'TOTORDQ07=3' ;
21420  +label TOTORDQ074 = 'TOTORDQ07=4' ;
21421  +label TOTORDQ075 = 'TOTORDQ07=5' ;
21422  +label TOTORDQ078 = 'TOTORDQ07=8' ;
21423  +*** encoding is sparse, initialize to zero;
21424  +TOTORDQ070 = 0;
21425  +TOTORDQ071 = 0;
21426  +TOTORDQ072 = 0;
21427  +TOTORDQ073 = 0;
21428  +TOTORDQ074 = 0;
21429  +TOTORDQ075 = 0;
21430  +TOTORDQ078 = 0;
21431  +if missing( TOTORDQ07 ) then do;
21432  +   TOTORDQ070 = .;
21433  +   TOTORDQ071 = .;
21434  +   TOTORDQ072 = .;
21435  +   TOTORDQ073 = .;
21436  +   TOTORDQ074 = .;
21437  +   TOTORDQ075 = .;
21438  +   TOTORDQ078 = .;
21439  +end;
21440  +else do;
21441  +   length _dm12 $ 12; drop _dm12 ;
21442  +   _dm12 = put( TOTORDQ07 , BEST12. );
21443  +   %DMNORMIP( _dm12 )
21444  +   if _dm12 = '0'  then do;
21445  +      TOTORDQ070 = 1;
21446  +   end;
21447  +   else if _dm12 = '1'  then do;
21448  +      TOTORDQ071 = 1;
21449  +   end;
21450  +   else if _dm12 = '2'  then do;
21451  +      TOTORDQ072 = 1;
21452  +   end;
21453  +   else if _dm12 = '3'  then do;
21454  +      TOTORDQ073 = 1;
21455  +   end;
21456  +   else if _dm12 = '4'  then do;
21457  +      TOTORDQ074 = 1;
21458  +   end;
21459  +   else if _dm12 = '5'  then do;
21460  +      TOTORDQ075 = 1;
21461  +   end;
21462  +   else if _dm12 = '8'  then do;
21463  +      TOTORDQ078 = 1;
21464  +   end;
21465  +   else do;
21466  +      delete;
21467  +   end;
21468  +end;
21469  +
21470  +*** Generate dummy variables for TOTORDQ08 ;
21471  +label TOTORDQ080 = 'TOTORDQ08=0' ;
21472  +label TOTORDQ081 = 'TOTORDQ08=1' ;
21473  +label TOTORDQ082 = 'TOTORDQ08=2' ;
21474  +label TOTORDQ083 = 'TOTORDQ08=3' ;
21475  +label TOTORDQ084 = 'TOTORDQ08=4' ;
21476  +label TOTORDQ085 = 'TOTORDQ08=5' ;
21477  +label TOTORDQ086 = 'TOTORDQ08=6' ;
21478  +label TOTORDQ0810 = 'TOTORDQ08=10' ;
21479  +label TOTORDQ0823 = 'TOTORDQ08=23' ;
21480  +*** encoding is sparse, initialize to zero;
21481  +TOTORDQ080 = 0;
21482  +TOTORDQ081 = 0;
21483  +TOTORDQ082 = 0;
21484  +TOTORDQ083 = 0;
21485  +TOTORDQ084 = 0;
21486  +TOTORDQ085 = 0;
21487  +TOTORDQ086 = 0;
21488  +TOTORDQ0810 = 0;
21489  +TOTORDQ0823 = 0;
21490  +if missing( TOTORDQ08 ) then do;
21491  +   TOTORDQ080 = .;
21492  +   TOTORDQ081 = .;
21493  +   TOTORDQ082 = .;
21494  +   TOTORDQ083 = .;
21495  +   TOTORDQ084 = .;
21496  +   TOTORDQ085 = .;
21497  +   TOTORDQ086 = .;
21498  +   TOTORDQ0810 = .;
21499  +   TOTORDQ0823 = .;
21500  +end;
21501  +else do;
21502  +   length _dm12 $ 12; drop _dm12 ;
21503  +   _dm12 = put( TOTORDQ08 , BEST12. );
21504  +   %DMNORMIP( _dm12 )
21505  +   if _dm12 = '0'  then do;
21506  +      TOTORDQ080 = 1;
21507  +   end;
21508  +   else if _dm12 = '1'  then do;
21509  +      TOTORDQ081 = 1;
21510  +   end;
21511  +   else if _dm12 = '2'  then do;
21512  +      TOTORDQ082 = 1;
21513  +   end;
21514  +   else if _dm12 = '3'  then do;
21515  +      TOTORDQ083 = 1;
21516  +   end;
21517  +   else if _dm12 = '4'  then do;
21518  +      TOTORDQ084 = 1;
21519  +   end;
21520  +   else if _dm12 = '5'  then do;
21521  +      TOTORDQ085 = 1;
21522  +   end;
21523  +   else if _dm12 = '6'  then do;
21524  +      TOTORDQ086 = 1;
21525  +   end;
21526  +   else if _dm12 = '10'  then do;
21527  +      TOTORDQ0810 = 1;
21528  +   end;
21529  +   else if _dm12 = '23'  then do;
21530  +      TOTORDQ0823 = 1;
21531  +   end;
21532  +   else do;
21533  +      delete;
21534  +   end;
21535  +end;
21536  +
21537  +*** Generate dummy variables for TOTORDQ09 ;
21538  +label TOTORDQ090 = 'TOTORDQ09=0' ;
21539  +label TOTORDQ091 = 'TOTORDQ09=1' ;
21540  +label TOTORDQ092 = 'TOTORDQ09=2' ;
21541  +label TOTORDQ093 = 'TOTORDQ09=3' ;
21542  +label TOTORDQ094 = 'TOTORDQ09=4' ;
21543  +label TOTORDQ095 = 'TOTORDQ09=5' ;
21544  +*** encoding is sparse, initialize to zero;
21545  +TOTORDQ090 = 0;
21546  +TOTORDQ091 = 0;
21547  +TOTORDQ092 = 0;
21548  +TOTORDQ093 = 0;
21549  +TOTORDQ094 = 0;
21550  +TOTORDQ095 = 0;
21551  +if missing( TOTORDQ09 ) then do;
21552  +   TOTORDQ090 = .;
21553  +   TOTORDQ091 = .;
21554  +   TOTORDQ092 = .;
21555  +   TOTORDQ093 = .;
21556  +   TOTORDQ094 = .;
21557  +   TOTORDQ095 = .;
21558  +end;
21559  +else do;
21560  +   length _dm12 $ 12; drop _dm12 ;
21561  +   _dm12 = put( TOTORDQ09 , BEST12. );
21562  +   %DMNORMIP( _dm12 )
21563  +   if _dm12 = '0'  then do;
21564  +      TOTORDQ090 = 1;
21565  +   end;
21566  +   else if _dm12 = '1'  then do;
21567  +      TOTORDQ091 = 1;
21568  +   end;
21569  +   else if _dm12 = '2'  then do;
21570  +      TOTORDQ092 = 1;
21571  +   end;
21572  +   else if _dm12 = '3'  then do;
21573  +      TOTORDQ093 = 1;
21574  +   end;
21575  +   else if _dm12 = '4'  then do;
21576  +      TOTORDQ094 = 1;
21577  +   end;
21578  +   else if _dm12 = '5'  then do;
21579  +      TOTORDQ095 = 1;
21580  +   end;
21581  +   else do;
21582  +      delete;
21583  +   end;
21584  +end;
21585  +
21586  +*** Generate dummy variables for TOTORDQ10 ;
21587  +label TOTORDQ100 = 'TOTORDQ10=0' ;
21588  +label TOTORDQ101 = 'TOTORDQ10=1' ;
21589  +label TOTORDQ102 = 'TOTORDQ10=2' ;
21590  +label TOTORDQ103 = 'TOTORDQ10=3' ;
21591  +label TOTORDQ104 = 'TOTORDQ10=4' ;
21592  +label TOTORDQ106 = 'TOTORDQ10=6' ;
21593  +*** encoding is sparse, initialize to zero;
21594  +TOTORDQ100 = 0;
21595  +TOTORDQ101 = 0;
21596  +TOTORDQ102 = 0;
21597  +TOTORDQ103 = 0;
21598  +TOTORDQ104 = 0;
21599  +TOTORDQ106 = 0;
21600  +if missing( TOTORDQ10 ) then do;
21601  +   TOTORDQ100 = .;
21602  +   TOTORDQ101 = .;
21603  +   TOTORDQ102 = .;
21604  +   TOTORDQ103 = .;
21605  +   TOTORDQ104 = .;
21606  +   TOTORDQ106 = .;
21607  +end;
21608  +else do;
21609  +   length _dm12 $ 12; drop _dm12 ;
21610  +   _dm12 = put( TOTORDQ10 , BEST12. );
21611  +   %DMNORMIP( _dm12 )
21612  +   if _dm12 = '0'  then do;
21613  +      TOTORDQ100 = 1;
21614  +   end;
21615  +   else if _dm12 = '1'  then do;
21616  +      TOTORDQ101 = 1;
21617  +   end;
21618  +   else if _dm12 = '2'  then do;
21619  +      TOTORDQ102 = 1;
21620  +   end;
21621  +   else if _dm12 = '3'  then do;
21622  +      TOTORDQ103 = 1;
21623  +   end;
21624  +   else if _dm12 = '4'  then do;
21625  +      TOTORDQ104 = 1;
21626  +   end;
21627  +   else if _dm12 = '6'  then do;
21628  +      TOTORDQ106 = 1;
21629  +   end;
21630  +   else do;
21631  +      delete;
21632  +   end;
21633  +end;
21634  +
21635  +*** Generate dummy variables for TOTORDQ11 ;
21636  +label TOTORDQ110 = 'TOTORDQ11=0' ;
21637  +label TOTORDQ111 = 'TOTORDQ11=1' ;
21638  +label TOTORDQ112 = 'TOTORDQ11=2' ;
21639  +label TOTORDQ113 = 'TOTORDQ11=3' ;
21640  +label TOTORDQ114 = 'TOTORDQ11=4' ;
21641  +label TOTORDQ115 = 'TOTORDQ11=5' ;
21642  +label TOTORDQ117 = 'TOTORDQ11=7' ;
21643  +*** encoding is sparse, initialize to zero;
21644  +TOTORDQ110 = 0;
21645  +TOTORDQ111 = 0;
21646  +TOTORDQ112 = 0;
21647  +TOTORDQ113 = 0;
21648  +TOTORDQ114 = 0;
21649  +TOTORDQ115 = 0;
21650  +TOTORDQ117 = 0;
21651  +if missing( TOTORDQ11 ) then do;
21652  +   TOTORDQ110 = .;
21653  +   TOTORDQ111 = .;
21654  +   TOTORDQ112 = .;
21655  +   TOTORDQ113 = .;
21656  +   TOTORDQ114 = .;
21657  +   TOTORDQ115 = .;
21658  +   TOTORDQ117 = .;
21659  +end;
21660  +else do;
21661  +   length _dm12 $ 12; drop _dm12 ;
21662  +   _dm12 = put( TOTORDQ11 , BEST12. );
21663  +   %DMNORMIP( _dm12 )
21664  +   if _dm12 = '0'  then do;
21665  +      TOTORDQ110 = 1;
21666  +   end;
21667  +   else if _dm12 = '1'  then do;
21668  +      TOTORDQ111 = 1;
21669  +   end;
21670  +   else if _dm12 = '2'  then do;
21671  +      TOTORDQ112 = 1;
21672  +   end;
21673  +   else if _dm12 = '3'  then do;
21674  +      TOTORDQ113 = 1;
21675  +   end;
21676  +   else if _dm12 = '4'  then do;
21677  +      TOTORDQ114 = 1;
21678  +   end;
21679  +   else if _dm12 = '5'  then do;
21680  +      TOTORDQ115 = 1;
21681  +   end;
21682  +   else if _dm12 = '7'  then do;
21683  +      TOTORDQ117 = 1;
21684  +   end;
21685  +   else do;
21686  +      delete;
21687  +   end;
21688  +end;
21689  +
21690  +*** Generate dummy variables for TOTORDQ12 ;
21691  +label TOTORDQ120 = 'TOTORDQ12=0' ;
21692  +label TOTORDQ121 = 'TOTORDQ12=1' ;
21693  +label TOTORDQ122 = 'TOTORDQ12=2' ;
21694  +label TOTORDQ123 = 'TOTORDQ12=3' ;
21695  +label TOTORDQ124 = 'TOTORDQ12=4' ;
21696  +label TOTORDQ125 = 'TOTORDQ12=5' ;
21697  +label TOTORDQ126 = 'TOTORDQ12=6' ;
21698  +label TOTORDQ127 = 'TOTORDQ12=7' ;
21699  +label TOTORDQ129 = 'TOTORDQ12=9' ;
21700  +label TOTORDQ1221 = 'TOTORDQ12=21' ;
21701  +*** encoding is sparse, initialize to zero;
21702  +TOTORDQ120 = 0;
21703  +TOTORDQ121 = 0;
21704  +TOTORDQ122 = 0;
21705  +TOTORDQ123 = 0;
21706  +TOTORDQ124 = 0;
21707  +TOTORDQ125 = 0;
21708  +TOTORDQ126 = 0;
21709  +TOTORDQ127 = 0;
21710  +TOTORDQ129 = 0;
21711  +TOTORDQ1221 = 0;
21712  +if missing( TOTORDQ12 ) then do;
21713  +   TOTORDQ120 = .;
21714  +   TOTORDQ121 = .;
21715  +   TOTORDQ122 = .;
21716  +   TOTORDQ123 = .;
21717  +   TOTORDQ124 = .;
21718  +   TOTORDQ125 = .;
21719  +   TOTORDQ126 = .;
21720  +   TOTORDQ127 = .;
21721  +   TOTORDQ129 = .;
21722  +   TOTORDQ1221 = .;
21723  +end;
21724  +else do;
21725  +   length _dm12 $ 12; drop _dm12 ;
21726  +   _dm12 = put( TOTORDQ12 , BEST12. );
21727  +   %DMNORMIP( _dm12 )
21728  +   if _dm12 = '0'  then do;
21729  +      TOTORDQ120 = 1;
21730  +   end;
21731  +   else if _dm12 = '1'  then do;
21732  +      TOTORDQ121 = 1;
21733  +   end;
21734  +   else if _dm12 = '2'  then do;
21735  +      TOTORDQ122 = 1;
21736  +   end;
21737  +   else if _dm12 = '3'  then do;
21738  +      TOTORDQ123 = 1;
21739  +   end;
21740  +   else if _dm12 = '4'  then do;
21741  +      TOTORDQ124 = 1;
21742  +   end;
21743  +   else if _dm12 = '5'  then do;
21744  +      TOTORDQ125 = 1;
21745  +   end;
21746  +   else if _dm12 = '7'  then do;
21747  +      TOTORDQ127 = 1;
21748  +   end;
21749  +   else if _dm12 = '6'  then do;
21750  +      TOTORDQ126 = 1;
21751  +   end;
21752  +   else if _dm12 = '9'  then do;
21753  +      TOTORDQ129 = 1;
21754  +   end;
21755  +   else if _dm12 = '21'  then do;
21756  +      TOTORDQ1221 = 1;
21757  +   end;
21758  +   else do;
21759  +      delete;
21760  +   end;
21761  +end;
21762  +
21763  +*** Generate dummy variables for TOTORDQ13 ;
21764  +label TOTORDQ130 = 'TOTORDQ13=0' ;
21765  +label TOTORDQ131 = 'TOTORDQ13=1' ;
21766  +label TOTORDQ132 = 'TOTORDQ13=2' ;
21767  +label TOTORDQ133 = 'TOTORDQ13=3' ;
21768  +label TOTORDQ134 = 'TOTORDQ13=4' ;
21769  +label TOTORDQ135 = 'TOTORDQ13=5' ;
21770  +*** encoding is sparse, initialize to zero;
21771  +TOTORDQ130 = 0;
21772  +TOTORDQ131 = 0;
21773  +TOTORDQ132 = 0;
21774  +TOTORDQ133 = 0;
21775  +TOTORDQ134 = 0;
21776  +TOTORDQ135 = 0;
21777  +if missing( TOTORDQ13 ) then do;
21778  +   TOTORDQ130 = .;
21779  +   TOTORDQ131 = .;
21780  +   TOTORDQ132 = .;
21781  +   TOTORDQ133 = .;
21782  +   TOTORDQ134 = .;
21783  +   TOTORDQ135 = .;
21784  +end;
21785  +else do;
21786  +   length _dm12 $ 12; drop _dm12 ;
21787  +   _dm12 = put( TOTORDQ13 , BEST12. );
21788  +   %DMNORMIP( _dm12 )
21789  +   if _dm12 = '0'  then do;
21790  +      TOTORDQ130 = 1;
21791  +   end;
21792  +   else if _dm12 = '1'  then do;
21793  +      TOTORDQ131 = 1;
21794  +   end;
21795  +   else if _dm12 = '2'  then do;
21796  +      TOTORDQ132 = 1;
21797  +   end;
21798  +   else if _dm12 = '3'  then do;
21799  +      TOTORDQ133 = 1;
21800  +   end;
21801  +   else if _dm12 = '4'  then do;
21802  +      TOTORDQ134 = 1;
21803  +   end;
21804  +   else if _dm12 = '5'  then do;
21805  +      TOTORDQ135 = 1;
21806  +   end;
21807  +   else do;
21808  +      delete;
21809  +   end;
21810  +end;
21811  +
21812  +*** Generate dummy variables for TOTORDQ14 ;
21813  +label TOTORDQ140 = 'TOTORDQ14=0' ;
21814  +label TOTORDQ141 = 'TOTORDQ14=1' ;
21815  +label TOTORDQ142 = 'TOTORDQ14=2' ;
21816  +label TOTORDQ143 = 'TOTORDQ14=3' ;
21817  +label TOTORDQ144 = 'TOTORDQ14=4' ;
21818  +label TOTORDQ145 = 'TOTORDQ14=5' ;
21819  +label TOTORDQ146 = 'TOTORDQ14=6' ;
21820  +*** encoding is sparse, initialize to zero;
21821  +TOTORDQ140 = 0;
21822  +TOTORDQ141 = 0;
21823  +TOTORDQ142 = 0;
21824  +TOTORDQ143 = 0;
21825  +TOTORDQ144 = 0;
21826  +TOTORDQ145 = 0;
21827  +TOTORDQ146 = 0;
21828  +if missing( TOTORDQ14 ) then do;
21829  +   TOTORDQ140 = .;
21830  +   TOTORDQ141 = .;
21831  +   TOTORDQ142 = .;
21832  +   TOTORDQ143 = .;
21833  +   TOTORDQ144 = .;
21834  +   TOTORDQ145 = .;
21835  +   TOTORDQ146 = .;
21836  +end;
21837  +else do;
21838  +   length _dm12 $ 12; drop _dm12 ;
21839  +   _dm12 = put( TOTORDQ14 , BEST12. );
21840  +   %DMNORMIP( _dm12 )
21841  +   if _dm12 = '0'  then do;
21842  +      TOTORDQ140 = 1;
21843  +   end;
21844  +   else if _dm12 = '1'  then do;
21845  +      TOTORDQ141 = 1;
21846  +   end;
21847  +   else if _dm12 = '2'  then do;
21848  +      TOTORDQ142 = 1;
21849  +   end;
21850  +   else if _dm12 = '3'  then do;
21851  +      TOTORDQ143 = 1;
21852  +   end;
21853  +   else if _dm12 = '4'  then do;
21854  +      TOTORDQ144 = 1;
21855  +   end;
21856  +   else if _dm12 = '5'  then do;
21857  +      TOTORDQ145 = 1;
21858  +   end;
21859  +   else if _dm12 = '6'  then do;
21860  +      TOTORDQ146 = 1;
21861  +   end;
21862  +   else do;
21863  +      delete;
21864  +   end;
21865  +end;
21866  +
21867  +*** Generate dummy variables for TOTORDQ15 ;
21868  +label TOTORDQ150 = 'TOTORDQ15=0' ;
21869  +label TOTORDQ151 = 'TOTORDQ15=1' ;
21870  +label TOTORDQ152 = 'TOTORDQ15=2' ;
21871  +label TOTORDQ153 = 'TOTORDQ15=3' ;
21872  +label TOTORDQ154 = 'TOTORDQ15=4' ;
21873  +label TOTORDQ155 = 'TOTORDQ15=5' ;
21874  +label TOTORDQ158 = 'TOTORDQ15=8' ;
21875  +*** encoding is sparse, initialize to zero;
21876  +TOTORDQ150 = 0;
21877  +TOTORDQ151 = 0;
21878  +TOTORDQ152 = 0;
21879  +TOTORDQ153 = 0;
21880  +TOTORDQ154 = 0;
21881  +TOTORDQ155 = 0;
21882  +TOTORDQ158 = 0;
21883  +if missing( TOTORDQ15 ) then do;
21884  +   TOTORDQ150 = .;
21885  +   TOTORDQ151 = .;
21886  +   TOTORDQ152 = .;
21887  +   TOTORDQ153 = .;
21888  +   TOTORDQ154 = .;
21889  +   TOTORDQ155 = .;
21890  +   TOTORDQ158 = .;
21891  +end;
21892  +else do;
21893  +   length _dm12 $ 12; drop _dm12 ;
21894  +   _dm12 = put( TOTORDQ15 , BEST12. );
21895  +   %DMNORMIP( _dm12 )
21896  +   if _dm12 = '0'  then do;
21897  +      TOTORDQ150 = 1;
21898  +   end;
21899  +   else if _dm12 = '1'  then do;
21900  +      TOTORDQ151 = 1;
21901  +   end;
21902  +   else if _dm12 = '2'  then do;
21903  +      TOTORDQ152 = 1;
21904  +   end;
21905  +   else if _dm12 = '3'  then do;
21906  +      TOTORDQ153 = 1;
21907  +   end;
21908  +   else if _dm12 = '4'  then do;
21909  +      TOTORDQ154 = 1;
21910  +   end;
21911  +   else if _dm12 = '5'  then do;
21912  +      TOTORDQ155 = 1;
21913  +   end;
21914  +   else if _dm12 = '8'  then do;
21915  +      TOTORDQ158 = 1;
21916  +   end;
21917  +   else do;
21918  +      delete;
21919  +   end;
21920  +end;
21921  +
21922  +*** Generate dummy variables for TOTORDQ16 ;
21923  +label TOTORDQ160 = 'TOTORDQ16=0' ;
21924  +label TOTORDQ161 = 'TOTORDQ16=1' ;
21925  +label TOTORDQ162 = 'TOTORDQ16=2' ;
21926  +label TOTORDQ163 = 'TOTORDQ16=3' ;
21927  +label TOTORDQ164 = 'TOTORDQ16=4' ;
21928  +label TOTORDQ165 = 'TOTORDQ16=5' ;
21929  +label TOTORDQ166 = 'TOTORDQ16=6' ;
21930  +label TOTORDQ167 = 'TOTORDQ16=7' ;
21931  +label TOTORDQ1610 = 'TOTORDQ16=10' ;
21932  +*** encoding is sparse, initialize to zero;
21933  +TOTORDQ160 = 0;
21934  +TOTORDQ161 = 0;
21935  +TOTORDQ162 = 0;
21936  +TOTORDQ163 = 0;
21937  +TOTORDQ164 = 0;
21938  +TOTORDQ165 = 0;
21939  +TOTORDQ166 = 0;
21940  +TOTORDQ167 = 0;
21941  +TOTORDQ1610 = 0;
21942  +if missing( TOTORDQ16 ) then do;
21943  +   TOTORDQ160 = .;
21944  +   TOTORDQ161 = .;
21945  +   TOTORDQ162 = .;
21946  +   TOTORDQ163 = .;
21947  +   TOTORDQ164 = .;
21948  +   TOTORDQ165 = .;
21949  +   TOTORDQ166 = .;
21950  +   TOTORDQ167 = .;
21951  +   TOTORDQ1610 = .;
21952  +end;
21953  +else do;
21954  +   length _dm12 $ 12; drop _dm12 ;
21955  +   _dm12 = put( TOTORDQ16 , BEST12. );
21956  +   %DMNORMIP( _dm12 )
21957  +   if _dm12 = '0'  then do;
21958  +      TOTORDQ160 = 1;
21959  +   end;
21960  +   else if _dm12 = '1'  then do;
21961  +      TOTORDQ161 = 1;
21962  +   end;
21963  +   else if _dm12 = '2'  then do;
21964  +      TOTORDQ162 = 1;
21965  +   end;
21966  +   else if _dm12 = '3'  then do;
21967  +      TOTORDQ163 = 1;
21968  +   end;
21969  +   else if _dm12 = '4'  then do;
21970  +      TOTORDQ164 = 1;
21971  +   end;
21972  +   else if _dm12 = '5'  then do;
21973  +      TOTORDQ165 = 1;
21974  +   end;
21975  +   else if _dm12 = '6'  then do;
21976  +      TOTORDQ166 = 1;
21977  +   end;
21978  +   else if _dm12 = '7'  then do;
21979  +      TOTORDQ167 = 1;
21980  +   end;
21981  +   else if _dm12 = '10'  then do;
21982  +      TOTORDQ1610 = 1;
21983  +   end;
21984  +   else do;
21985  +      delete;
21986  +   end;
21987  +end;
21988  +
21989  +*** Generate dummy variables for TOTORDQ17 ;
21990  +label TOTORDQ170 = 'TOTORDQ17=0' ;
21991  +label TOTORDQ171 = 'TOTORDQ17=1' ;
21992  +label TOTORDQ172 = 'TOTORDQ17=2' ;
21993  +label TOTORDQ173 = 'TOTORDQ17=3' ;
21994  +label TOTORDQ174 = 'TOTORDQ17=4' ;
21995  +label TOTORDQ175 = 'TOTORDQ17=5' ;
21996  +*** encoding is sparse, initialize to zero;
21997  +TOTORDQ170 = 0;
21998  +TOTORDQ171 = 0;
21999  +TOTORDQ172 = 0;
22000  +TOTORDQ173 = 0;
22001  +TOTORDQ174 = 0;
22002  +TOTORDQ175 = 0;
22003  +if missing( TOTORDQ17 ) then do;
22004  +   TOTORDQ170 = .;
22005  +   TOTORDQ171 = .;
22006  +   TOTORDQ172 = .;
22007  +   TOTORDQ173 = .;
22008  +   TOTORDQ174 = .;
22009  +   TOTORDQ175 = .;
22010  +end;
22011  +else do;
22012  +   length _dm12 $ 12; drop _dm12 ;
22013  +   _dm12 = put( TOTORDQ17 , BEST12. );
22014  +   %DMNORMIP( _dm12 )
22015  +   if _dm12 = '0'  then do;
22016  +      TOTORDQ170 = 1;
22017  +   end;
22018  +   else if _dm12 = '1'  then do;
22019  +      TOTORDQ171 = 1;
22020  +   end;
22021  +   else if _dm12 = '2'  then do;
22022  +      TOTORDQ172 = 1;
22023  +   end;
22024  +   else if _dm12 = '3'  then do;
22025  +      TOTORDQ173 = 1;
22026  +   end;
22027  +   else if _dm12 = '4'  then do;
22028  +      TOTORDQ174 = 1;
22029  +   end;
22030  +   else if _dm12 = '5'  then do;
22031  +      TOTORDQ175 = 1;
22032  +   end;
22033  +   else do;
22034  +      delete;
22035  +   end;
22036  +end;
22037  +
22038  +*** Generate dummy variables for TOTORDQ18 ;
22039  +label TOTORDQ180 = 'TOTORDQ18=0' ;
22040  +label TOTORDQ181 = 'TOTORDQ18=1' ;
22041  +label TOTORDQ182 = 'TOTORDQ18=2' ;
22042  +label TOTORDQ183 = 'TOTORDQ18=3' ;
22043  +label TOTORDQ184 = 'TOTORDQ18=4' ;
22044  +label TOTORDQ185 = 'TOTORDQ18=5' ;
22045  +*** encoding is sparse, initialize to zero;
22046  +TOTORDQ180 = 0;
22047  +TOTORDQ181 = 0;
22048  +TOTORDQ182 = 0;
22049  +TOTORDQ183 = 0;
22050  +TOTORDQ184 = 0;
22051  +TOTORDQ185 = 0;
22052  +if missing( TOTORDQ18 ) then do;
22053  +   TOTORDQ180 = .;
22054  +   TOTORDQ181 = .;
22055  +   TOTORDQ182 = .;
22056  +   TOTORDQ183 = .;
22057  +   TOTORDQ184 = .;
22058  +   TOTORDQ185 = .;
22059  +end;
22060  +else do;
22061  +   length _dm12 $ 12; drop _dm12 ;
22062  +   _dm12 = put( TOTORDQ18 , BEST12. );
22063  +   %DMNORMIP( _dm12 )
22064  +   if _dm12 = '0'  then do;
22065  +      TOTORDQ180 = 1;
22066  +   end;
22067  +   else if _dm12 = '1'  then do;
22068  +      TOTORDQ181 = 1;
22069  +   end;
22070  +   else if _dm12 = '2'  then do;
22071  +      TOTORDQ182 = 1;
22072  +   end;
22073  +   else if _dm12 = '3'  then do;
22074  +      TOTORDQ183 = 1;
22075  +   end;
22076  +   else if _dm12 = '4'  then do;
22077  +      TOTORDQ184 = 1;
22078  +   end;
22079  +   else if _dm12 = '5'  then do;
22080  +      TOTORDQ185 = 1;
22081  +   end;
22082  +   else do;
22083  +      delete;
22084  +   end;
22085  +end;
22086  +
22087  +*** Generate dummy variables for TOTORDQ19 ;
22088  +label TOTORDQ190 = 'TOTORDQ19=0' ;
22089  +label TOTORDQ191 = 'TOTORDQ19=1' ;
22090  +label TOTORDQ192 = 'TOTORDQ19=2' ;
22091  +label TOTORDQ193 = 'TOTORDQ19=3' ;
22092  +label TOTORDQ194 = 'TOTORDQ19=4' ;
22093  +label TOTORDQ195 = 'TOTORDQ19=5' ;
22094  +*** encoding is sparse, initialize to zero;
22095  +TOTORDQ190 = 0;
22096  +TOTORDQ191 = 0;
22097  +TOTORDQ192 = 0;
22098  +TOTORDQ193 = 0;
22099  +TOTORDQ194 = 0;
22100  +TOTORDQ195 = 0;
22101  +if missing( TOTORDQ19 ) then do;
22102  +   TOTORDQ190 = .;
22103  +   TOTORDQ191 = .;
22104  +   TOTORDQ192 = .;
22105  +   TOTORDQ193 = .;
22106  +   TOTORDQ194 = .;
22107  +   TOTORDQ195 = .;
22108  +end;
22109  +else do;
22110  +   length _dm12 $ 12; drop _dm12 ;
22111  +   _dm12 = put( TOTORDQ19 , BEST12. );
22112  +   %DMNORMIP( _dm12 )
22113  +   if _dm12 = '0'  then do;
22114  +      TOTORDQ190 = 1;
22115  +   end;
22116  +   else if _dm12 = '1'  then do;
22117  +      TOTORDQ191 = 1;
22118  +   end;
22119  +   else if _dm12 = '2'  then do;
22120  +      TOTORDQ192 = 1;
22121  +   end;
22122  +   else if _dm12 = '3'  then do;
22123  +      TOTORDQ193 = 1;
22124  +   end;
22125  +   else if _dm12 = '4'  then do;
22126  +      TOTORDQ194 = 1;
22127  +   end;
22128  +   else if _dm12 = '5'  then do;
22129  +      TOTORDQ195 = 1;
22130  +   end;
22131  +   else do;
22132  +      delete;
22133  +   end;
22134  +end;
22135  +
22136  +*** Generate dummy variables for TOTORDQ20 ;
22137  +label TOTORDQ200 = 'TOTORDQ20=0' ;
22138  +label TOTORDQ201 = 'TOTORDQ20=1' ;
22139  +label TOTORDQ202 = 'TOTORDQ20=2' ;
22140  +label TOTORDQ203 = 'TOTORDQ20=3' ;
22141  +label TOTORDQ204 = 'TOTORDQ20=4' ;
22142  +label TOTORDQ205 = 'TOTORDQ20=5' ;
22143  +label TOTORDQ207 = 'TOTORDQ20=7' ;
22144  +label TOTORDQ208 = 'TOTORDQ20=8' ;
22145  +label TOTORDQ2010 = 'TOTORDQ20=10' ;
22146  +label TOTORDQ2027 = 'TOTORDQ20=27' ;
22147  +*** encoding is sparse, initialize to zero;
22148  +TOTORDQ200 = 0;
22149  +TOTORDQ201 = 0;
22150  +TOTORDQ202 = 0;
22151  +TOTORDQ203 = 0;
22152  +TOTORDQ204 = 0;
22153  +TOTORDQ205 = 0;
22154  +TOTORDQ207 = 0;
22155  +TOTORDQ208 = 0;
22156  +TOTORDQ2010 = 0;
22157  +TOTORDQ2027 = 0;
22158  +if missing( TOTORDQ20 ) then do;
22159  +   TOTORDQ200 = .;
22160  +   TOTORDQ201 = .;
22161  +   TOTORDQ202 = .;
22162  +   TOTORDQ203 = .;
22163  +   TOTORDQ204 = .;
22164  +   TOTORDQ205 = .;
22165  +   TOTORDQ207 = .;
22166  +   TOTORDQ208 = .;
22167  +   TOTORDQ2010 = .;
22168  +   TOTORDQ2027 = .;
22169  +end;
22170  +else do;
22171  +   length _dm12 $ 12; drop _dm12 ;
22172  +   _dm12 = put( TOTORDQ20 , BEST12. );
22173  +   %DMNORMIP( _dm12 )
22174  +   if _dm12 = '0'  then do;
22175  +      TOTORDQ200 = 1;
22176  +   end;
22177  +   else if _dm12 = '1'  then do;
22178  +      TOTORDQ201 = 1;
22179  +   end;
22180  +   else if _dm12 = '2'  then do;
22181  +      TOTORDQ202 = 1;
22182  +   end;
22183  +   else if _dm12 = '3'  then do;
22184  +      TOTORDQ203 = 1;
22185  +   end;
22186  +   else if _dm12 = '4'  then do;
22187  +      TOTORDQ204 = 1;
22188  +   end;
22189  +   else if _dm12 = '5'  then do;
22190  +      TOTORDQ205 = 1;
22191  +   end;
22192  +   else if _dm12 = '7'  then do;
22193  +      TOTORDQ207 = 1;
22194  +   end;
22195  +   else if _dm12 = '8'  then do;
22196  +      TOTORDQ208 = 1;
22197  +   end;
22198  +   else if _dm12 = '10'  then do;
22199  +      TOTORDQ2010 = 1;
22200  +   end;
22201  +   else if _dm12 = '27'  then do;
22202  +      TOTORDQ2027 = 1;
22203  +   end;
22204  +   else do;
22205  +      delete;
22206  +   end;
22207  +end;
22208  +
22209  +*** Generate dummy variables for TOTORDQ21 ;
22210  +label TOTORDQ210 = 'TOTORDQ21=0' ;
22211  +label TOTORDQ211 = 'TOTORDQ21=1' ;
22212  +label TOTORDQ212 = 'TOTORDQ21=2' ;
22213  +label TOTORDQ213 = 'TOTORDQ21=3' ;
22214  +label TOTORDQ214 = 'TOTORDQ21=4' ;
22215  +label TOTORDQ215 = 'TOTORDQ21=5' ;
22216  +label TOTORDQ219 = 'TOTORDQ21=9' ;
22217  +*** encoding is sparse, initialize to zero;
22218  +TOTORDQ210 = 0;
22219  +TOTORDQ211 = 0;
22220  +TOTORDQ212 = 0;
22221  +TOTORDQ213 = 0;
22222  +TOTORDQ214 = 0;
22223  +TOTORDQ215 = 0;
22224  +TOTORDQ219 = 0;
22225  +if missing( TOTORDQ21 ) then do;
22226  +   TOTORDQ210 = .;
22227  +   TOTORDQ211 = .;
22228  +   TOTORDQ212 = .;
22229  +   TOTORDQ213 = .;
22230  +   TOTORDQ214 = .;
22231  +   TOTORDQ215 = .;
22232  +   TOTORDQ219 = .;
22233  +end;
22234  +else do;
22235  +   length _dm12 $ 12; drop _dm12 ;
22236  +   _dm12 = put( TOTORDQ21 , BEST12. );
22237  +   %DMNORMIP( _dm12 )
22238  +   if _dm12 = '0'  then do;
22239  +      TOTORDQ210 = 1;
22240  +   end;
22241  +   else if _dm12 = '1'  then do;
22242  +      TOTORDQ211 = 1;
22243  +   end;
22244  +   else if _dm12 = '2'  then do;
22245  +      TOTORDQ212 = 1;
22246  +   end;
22247  +   else if _dm12 = '3'  then do;
22248  +      TOTORDQ213 = 1;
22249  +   end;
22250  +   else if _dm12 = '4'  then do;
22251  +      TOTORDQ214 = 1;
22252  +   end;
22253  +   else if _dm12 = '5'  then do;
22254  +      TOTORDQ215 = 1;
22255  +   end;
22256  +   else if _dm12 = '9'  then do;
22257  +      TOTORDQ219 = 1;
22258  +   end;
22259  +   else do;
22260  +      delete;
22261  +   end;
22262  +end;
22263  +
22264  +*** Generate dummy variables for TOTORDQ22 ;
22265  +label TOTORDQ220 = 'TOTORDQ22=0' ;
22266  +label TOTORDQ221 = 'TOTORDQ22=1' ;
22267  +label TOTORDQ222 = 'TOTORDQ22=2' ;
22268  +label TOTORDQ223 = 'TOTORDQ22=3' ;
22269  +label TOTORDQ224 = 'TOTORDQ22=4' ;
22270  +label TOTORDQ225 = 'TOTORDQ22=5' ;
22271  +label TOTORDQ226 = 'TOTORDQ22=6' ;
22272  +*** encoding is sparse, initialize to zero;
22273  +TOTORDQ220 = 0;
22274  +TOTORDQ221 = 0;
22275  +TOTORDQ222 = 0;
22276  +TOTORDQ223 = 0;
22277  +TOTORDQ224 = 0;
22278  +TOTORDQ225 = 0;
22279  +TOTORDQ226 = 0;
22280  +if missing( TOTORDQ22 ) then do;
22281  +   TOTORDQ220 = .;
22282  +   TOTORDQ221 = .;
22283  +   TOTORDQ222 = .;
22284  +   TOTORDQ223 = .;
22285  +   TOTORDQ224 = .;
22286  +   TOTORDQ225 = .;
22287  +   TOTORDQ226 = .;
22288  +end;
22289  +else do;
22290  +   length _dm12 $ 12; drop _dm12 ;
22291  +   _dm12 = put( TOTORDQ22 , BEST12. );
22292  +   %DMNORMIP( _dm12 )
22293  +   if _dm12 = '0'  then do;
22294  +      TOTORDQ220 = 1;
22295  +   end;
22296  +   else if _dm12 = '1'  then do;
22297  +      TOTORDQ221 = 1;
22298  +   end;
22299  +   else if _dm12 = '2'  then do;
22300  +      TOTORDQ222 = 1;
22301  +   end;
22302  +   else if _dm12 = '3'  then do;
22303  +      TOTORDQ223 = 1;
22304  +   end;
22305  +   else if _dm12 = '4'  then do;
22306  +      TOTORDQ224 = 1;
22307  +   end;
22308  +   else if _dm12 = '5'  then do;
22309  +      TOTORDQ225 = 1;
22310  +   end;
22311  +   else if _dm12 = '6'  then do;
22312  +      TOTORDQ226 = 1;
22313  +   end;
22314  +   else do;
22315  +      delete;
22316  +   end;
22317  +end;
22318  +
22319  +*** End Class Look-up, Standardization, Replacement ;
22320  +
22321  +
22322  +/*-------------------------------------------------*/
22323  +/* Varclus Score Code Begins: GCLUSTER 1*/
22324  +/*-------------------------------------------------*/
22325  +
22326  +GC1_CLUS1 = 0 ; /*---Global Cluster 1 : Cluster Component 1------ */
22327  +GC1_CLUS2 = 0 ; /*---Global Cluster 1 : Cluster Component 2------ */
22328  +GC1_CLUS3 = 0 ; /*---Global Cluster 1 : Cluster Component 3------ */
22329  +GC1_CLUS4 = 0 ; /*---Global Cluster 1 : Cluster Component 4------ */
22330  +GC1_CLUS5 = 0 ; /*---Global Cluster 1 : Cluster Component 5------ */
22331  +GC1_CLUS6 = 0 ; /*---Global Cluster 1 : Cluster Component 6------ */
22332  +GC1_CLUS7 = 0 ; /*---Global Cluster 1 : Cluster Component 7------ */
22333  +GC1_CLUS8 = 0 ; /*---Global Cluster 1 : Cluster Component 8------ */
22334  +GC1_CLUS9 = 0 ; /*---Global Cluster 1 : Cluster Component 9------ */
22335  +GC1_CLUS10 = 0 ; /*---Global Cluster 1 : Cluster Component 10------ */
22336  +GC1_CLUS11 = 0 ; /*---Global Cluster 1 : Cluster Component 11------ */
22337  +GC1_CLUS12 = 0 ; /*---Global Cluster 1 : Cluster Component 12------ */
22338  +GC1_CLUS13 = 0 ; /*---Global Cluster 1 : Cluster Component 13------ */
22339  +GC1_CLUS14 = 0 ; /*---Global Cluster 1 : Cluster Component 14------ */
22340  +GC1_CLUS15 = 0 ; /*---Global Cluster 1 : Cluster Component 15------ */
22341  +GC1_CLUS16 = 0 ; /*---Global Cluster 1 : Cluster Component 16------ */
22342  +GC1_CLUS17 = 0 ; /*---Global Cluster 1 : Cluster Component 17------ */
22343  +GC1_CLUS18 = 0 ; /*---Global Cluster 1 : Cluster Component 18------ */
22344  +GC1_CLUS19 = 0 ; /*---Global Cluster 1 : Cluster Component 19------ */
22345  +GC1_CLUS20 = 0 ; /*---Global Cluster 1 : Cluster Component 20------ */
22346  +GC1_CLUS21 = 0 ; /*---Global Cluster 1 : Cluster Component 21------ */
22347  +GC1_CLUS22 = 0 ; /*---Global Cluster 1 : Cluster Component 22------ */
22348  +GC1_CLUS23 = 0 ; /*---Global Cluster 1 : Cluster Component 23------ */
22349  +GC1_CLUS24 = 0 ; /*---Global Cluster 1 : Cluster Component 24------ */
22350  +GC1_CLUS25 = 0 ; /*---Global Cluster 1 : Cluster Component 25------ */
22351  +GC1_CLUS26 = 0 ; /*---Global Cluster 1 : Cluster Component 26------ */
22352  +GC1_CLUS27 = 0 ; /*---Global Cluster 1 : Cluster Component 27------ */
22353  +GC1_CLUS28 = 0 ; /*---Global Cluster 1 : Cluster Component 28------ */
22354  +GC1_CLUS29 = 0 ; /*---Global Cluster 1 : Cluster Component 29------ */
22355  +GC1_CLUS30 = 0 ; /*---Global Cluster 1 : Cluster Component 30------ */
22356  +GC1_CLUS31 = 0 ; /*---Global Cluster 1 : Cluster Component 31------ */
22357  +GC1_CLUS32 = 0 ; /*---Global Cluster 1 : Cluster Component 32------ */
22358  +GC1_CLUS33 = 0 ; /*---Global Cluster 1 : Cluster Component 33------ */
22359  +GC1_CLUS34 = 0 ; /*---Global Cluster 1 : Cluster Component 34------ */
22360  +GC1_CLUS35 = 0 ; /*---Global Cluster 1 : Cluster Component 35------ */
22361  +GC1_CLUS36 = 0 ; /*---Global Cluster 1 : Cluster Component 36------ */
22362  +GC1_CLUS37 = 0 ; /*---Global Cluster 1 : Cluster Component 37------ */
22363  +GC1_CLUS38 = 0 ; /*---Global Cluster 1 : Cluster Component 38------ */
22364  +GC1_CLUS20 = GC1_CLUS20+0.25268259289693 * (ACTBUY3 - 0.0514657980456)/0.22094927955546;
22365  +GC1_CLUS27 = GC1_CLUS27+1 * (ACTBUY5 - 0.00896541026834)/0.09426190815315;
22366  +GC1_CLUS2 = GC1_CLUS2+0.5 * (BOTHPAYM1 - 0.19354738638126)/0.39508434277919;
22367  +GC1_CLUS22 = GC1_CLUS22+0.25067773313649 * (CATALOGCNT - 3.77161470451372)/3.12899556544539;
22368  +GC1_CLUS1 = GC1_CLUS1+0.101895176444 * (DEPT01 - 0.50547541492166)/1.82274128473225;
22369  +GC1_CLUS1 = GC1_CLUS1+0.09448532113036 * (DEPT02 - 0.29257018768419)/1.15307534710204;
22370  +GC1_CLUS1 = GC1_CLUS1+0.11403575618412 * (DEPT03 - 1.08161935784085)/2.82203775857088;
22371  +GC1_CLUS1 = GC1_CLUS1+0.10092357421523 * (DEPT04 - 0.68006824879789)/2.28175674515779;
22372  +GC1_CLUS1 = GC1_CLUS1+0.0961666686675 * (DEPT05 - 0.54295020939972)/1.52515347226129;
22373  +GC1_CLUS22 = GC1_CLUS22+0.16008575269519 * (DEPT06 - 0.85925236544129)/1.98131768775175;
22374  +GC1_CLUS24 = GC1_CLUS24+1 * (DEPT079 - 0.00003102218085)/0.00556975590661;
22375  +GC1_CLUS25 = GC1_CLUS25+0.56831365754901 * (DEPT08 - 0.31512331316891)/1.29408639394269;
22376  +GC1_CLUS25 = GC1_CLUS25+0.53228926446034 * (DEPT09 - 0.2486427795874)/1.20923480324609;
22377  +GC1_CLUS23 = GC1_CLUS23+0.63033230529387 * (DEPT10 - 0.39066232356134)/1.7648701612552;
22378  +GC1_CLUS38 = GC1_CLUS38+0.6526082750221 * (DEPT1129 - 0.00003102218085)/0.00556975590661;
22379  +GC1_CLUS23 = GC1_CLUS23+0.63033230529387 * (DEPT1213 - 0.00009306654257)/0.009646800928;
22380  +GC1_CLUS22 = GC1_CLUS22+0.07949531968682 * (DEPT123 - 0.05013184426865)/0.21822034675722;
22381  +GC1_CLUS25 = GC1_CLUS25+0.45758385559152 * (DEPT125 - 0.00614239181014)/0.07813355373221;
22382  +GC1_CLUS22 = GC1_CLUS22+0.195672422795 * (DEPT13 - 1.30395532805956)/2.58742913517547;
22383  +GC1_CLUS1 = GC1_CLUS1+0.11711510116145 * (DEPT14 - 0.83527221963704)/2.18699342328426;
22384  +GC1_CLUS26 = GC1_CLUS26+0.64623891481535 * (DEPT15 - 0.28949899177912)/1.23869079532202;
22385  +GC1_CLUS26 = GC1_CLUS26+0.64623891481535 * (DEPT16 - 0.22491081123002)/1.0272304883634;
22386  +GC1_CLUS22 = GC1_CLUS22+0.21317622467802 * (DEPT22 - 2.12771831859779)/3.55134640550257;
22387  +GC1_CLUS22 = GC1_CLUS22+0.18630934593845 * (DEPT23 - 2.14223669923995)/3.81941288304535;
22388  +GC1_CLUS22 = GC1_CLUS22+0.15964088340357 * (DEPT24 - 0.64039087947882)/1.70711269742472;
22389  +GC1_CLUS22 = GC1_CLUS22+0.14884665049554 * (DEPT25 - 1.77676438653637)/4.75421718243184;
22390  +GC1_CLUS22 = GC1_CLUS22+0.14734632532468 * (DEPT27 - 0.58712579494338)/1.55259848403997;
22391  +GC1_CLUS1 = GC1_CLUS1+0.18972938056453 * (DOLINDET - 197.869031487513)/314.244548218948;
22392  +GC1_CLUS9 = GC1_CLUS9+0.56650532628804 * (DOLLARQ01 - 3.60255901969908)/18.9572343997303;
22393  +GC1_CLUS15 = GC1_CLUS15+0.56891547937291 * (DOLLARQ02 - 3.71090770901194)/20.7285900605152;
22394  +GC1_CLUS6 = GC1_CLUS6+0.5504626050735 * (DOLLARQ03 - 2.77052582596556)/15.8095808048519;
22395  +GC1_CLUS8 = GC1_CLUS8+0.55947068301874 * (DOLLARQ04 - 4.67856274236079)/22.181986153492;
22396  +GC1_CLUS19 = GC1_CLUS19+0.56558194710065 * (DOLLARQ05 - 4.32741461144718)/21.5182033567075;
22397  +GC1_CLUS17 = GC1_CLUS17+0.56416459866316 * (DOLLARQ06 - 3.88379649449356)/20.0626675130808;
22398  +GC1_CLUS12 = GC1_CLUS12+0.56944124195633 * (DOLLARQ07 - 4.19153187529083)/21.9984516452687;
22399  +GC1_CLUS20 = GC1_CLUS20+0.52449177579655 * (DOLLARQ08 - 6.15043803319373)/27.3333023843591;
22400  +GC1_CLUS14 = GC1_CLUS14+0.56389329494284 * (DOLLARQ09 - 4.29424383434155)/20.7683103640237;
22401  +GC1_CLUS10 = GC1_CLUS10+0.56089371324664 * (DOLLARQ10 - 3.64839584302776)/18.9957061824675;
22402  +GC1_CLUS4 = GC1_CLUS4+0.56413462585676 * (DOLLARQ11 - 4.15352411974561)/20.8177653006881;
22403  +GC1_CLUS5 = GC1_CLUS5+0.57491492012181 * (DOLLARQ12 - 6.39860555297037)/27.403980773023;
22404  +GC1_CLUS16 = GC1_CLUS16+0.57470990449496 * (DOLLARQ13 - 5.38680471537149)/25.9110809016436;
22405  +GC1_CLUS18 = GC1_CLUS18+0.57362967885419 * (DOLLARQ14 - 4.43791499922444)/23.752188577194;
22406  +GC1_CLUS3 = GC1_CLUS3+0.57055038098878 * (DOLLARQ15 - 4.90567023421746)/23.5349065932921;
22407  +GC1_CLUS13 = GC1_CLUS13+0.57289204188732 * (DOLLARQ17 - 5.57017403443462)/26.1415799982751;
22408  +GC1_CLUS7 = GC1_CLUS7+0.56193475254128 * (DOLLARQ18 - 4.78568140220257)/22.3927978593641;
22409  +GC1_CLUS11 = GC1_CLUS11+0.55963095544762 * (DOLLARQ19 - 4.33358802543818)/21.704742358276;
22410  +GC1_CLUS1 = GC1_CLUS1+0.18816215037063 * (DOLNETDT - 189.18095548317)/303.615750735174;
22411  +GC1_CLUS1 = GC1_CLUS1+0.17209519350965 * (FREQPRCH - 4.18160384675042)/5.31459540671444;
22412  +GC1_CLUS2 = GC1_CLUS2+0.5 * (METHPAYMXBOT - 0.19354738638126)/0.39508434277919;
22413  +GC1_CLUS9 = GC1_CLUS9+0.56650532628804 * (TOTORDQ011 - 0.05853885528152)/0.23476321571557;
22414  +GC1_CLUS33 = GC1_CLUS33+1 * (TOTORDQ012 - 0.00791065611912)/0.08859075070754;
22415  +GC1_CLUS15 = GC1_CLUS15+0.56891547937291 * (TOTORDQ021 - 0.05627423607879)/0.2304541038742;
22416  +GC1_CLUS37 = GC1_CLUS37+1 * (TOTORDQ022 - 0.00639056925701)/0.07968642839386;
22417  +GC1_CLUS6 = GC1_CLUS6+0.5504626050735 * (TOTORDQ031 - 0.04920117884287)/0.21629117901362;
22418  +GC1_CLUS8 = GC1_CLUS8+0.55947068301874 * (TOTORDQ041 - 0.0732743911897)/0.2605904093015;
22419  +GC1_CLUS38 = GC1_CLUS38+0.6526082750221 * (TOTORDQ043 - 0.00102373196835)/0.03197992601749;
22420  +GC1_CLUS19 = GC1_CLUS19+0.56558194710065 * (TOTORDQ051 - 0.06781448735846)/0.25143119100849;
22421  +GC1_CLUS17 = GC1_CLUS17+0.56416459866317 * (TOTORDQ061 - 0.06446409182565)/0.24558164355085;
22422  +GC1_CLUS12 = GC1_CLUS12+0.56944124195633 * (TOTORDQ071 - 0.06769039863502)/0.25121776686543;
22423  +GC1_CLUS35 = GC1_CLUS35+1 * (TOTORDQ072 - 0.0071661237785)/0.08435040705909;
22424  +GC1_CLUS20 = GC1_CLUS20+0.53499201866075 * (TOTORDQ081 - 0.09083294555607)/0.28737585758179;
22425  +GC1_CLUS14 = GC1_CLUS14+0.56389329494284 * (TOTORDQ091 - 0.07256088102993)/0.25941836346204;
22426  +GC1_CLUS10 = GC1_CLUS10+0.56089371324664 * (TOTORDQ101 - 0.05934543198386)/0.23627374697278;
22427  +GC1_CLUS36 = GC1_CLUS36+1 * (TOTORDQ102 - 0.00614239181014)/0.07813355373221;
22428  +GC1_CLUS21 = GC1_CLUS21+0.60779357584955 * (TOTORDQ104 - 0.00012408872343)/0.01113899342716;
22429  +GC1_CLUS4 = GC1_CLUS4+0.56413462585676 * (TOTORDQ111 - 0.06902435241197)/0.25349947679037;
22430  +GC1_CLUS34 = GC1_CLUS34+1 * (TOTORDQ112 - 0.00722816814022)/0.08471212631733;
22431  +GC1_CLUS21 = GC1_CLUS21+0.60779357584955 * (TOTORDQ115 - 0.00006204436171)/0.00787670215937;
22432  +GC1_CLUS5 = GC1_CLUS5+0.57491492012181 * (TOTORDQ121 - 0.09626182720645)/0.29495455023242;
22433  +GC1_CLUS28 = GC1_CLUS28+1 * (TOTORDQ122 - 0.01098185202419)/0.10421894213846;
22434  +GC1_CLUS16 = GC1_CLUS16+0.57470990449496 * (TOTORDQ131 - 0.08621064060803)/0.2806791941105;
22435  +GC1_CLUS30 = GC1_CLUS30+1 * (TOTORDQ132 - 0.0088413215449)/0.09361316381141;
22436  +GC1_CLUS18 = GC1_CLUS18+0.57362967885419 * (TOTORDQ141 - 0.0719714595936)/0.25844465690351;
22437  +GC1_CLUS3 = GC1_CLUS3+0.57055038098878 * (TOTORDQ151 - 0.07584923220102)/0.264760836941;
22438  +GC1_CLUS31 = GC1_CLUS31+1 * (TOTORDQ152 - 0.00905847681091)/0.09474544466925;
22439  +GC1_CLUS13 = GC1_CLUS13+0.57289204188732 * (TOTORDQ171 - 0.08329455560725)/0.27633121690163;
22440  +GC1_CLUS29 = GC1_CLUS29+1 * (TOTORDQ172 - 0.00961687606638)/0.09759450413666;
22441  +GC1_CLUS7 = GC1_CLUS7+0.56193475254128 * (TOTORDQ181 - 0.07476345587094)/0.26301335998085;
22442  +GC1_CLUS32 = GC1_CLUS32+1 * (TOTORDQ182 - 0.00744532340623)/0.08596580612805;
22443  +GC1_CLUS11 = GC1_CLUS11+0.55963095544762 * (TOTORDQ191 - 0.06775244299674)/0.25132450925054;
22444  +GC1_CLUS1 = GC1_CLUS1+0.18087293545233 * (UNITSIDD - 10.9602916085)/17.1055734908767;
22445  +
22446  +/*-------------------------------------------------*/
22447  +/* Varclus Score Code Begins: GCLUSTER 2*/
22448  +/*-------------------------------------------------*/
22449  +
22450  +GC2_CLUS1 = 0 ; /*---Global Cluster 2 : Cluster Component 1------ */
22451  +GC2_CLUS2 = 0 ; /*---Global Cluster 2 : Cluster Component 2------ */
22452  +GC2_CLUS3 = 0 ; /*---Global Cluster 2 : Cluster Component 3------ */
22453  +GC2_CLUS4 = 0 ; /*---Global Cluster 2 : Cluster Component 4------ */
22454  +GC2_CLUS5 = 0 ; /*---Global Cluster 2 : Cluster Component 5------ */
22455  +GC2_CLUS6 = 0 ; /*---Global Cluster 2 : Cluster Component 6------ */
22456  +GC2_CLUS7 = 0 ; /*---Global Cluster 2 : Cluster Component 7------ */
22457  +GC2_CLUS8 = 0 ; /*---Global Cluster 2 : Cluster Component 8------ */
22458  +GC2_CLUS9 = 0 ; /*---Global Cluster 2 : Cluster Component 9------ */
22459  +GC2_CLUS10 = 0 ; /*---Global Cluster 2 : Cluster Component 10------ */
22460  +GC2_CLUS11 = 0 ; /*---Global Cluster 2 : Cluster Component 11------ */
22461  +GC2_CLUS12 = 0 ; /*---Global Cluster 2 : Cluster Component 12------ */
22462  +GC2_CLUS13 = 0 ; /*---Global Cluster 2 : Cluster Component 13------ */
22463  +GC2_CLUS14 = 0 ; /*---Global Cluster 2 : Cluster Component 14------ */
22464  +GC2_CLUS15 = 0 ; /*---Global Cluster 2 : Cluster Component 15------ */
22465  +GC2_CLUS16 = 0 ; /*---Global Cluster 2 : Cluster Component 16------ */
22466  +GC2_CLUS17 = 0 ; /*---Global Cluster 2 : Cluster Component 17------ */
22467  +GC2_CLUS18 = 0 ; /*---Global Cluster 2 : Cluster Component 18------ */
22468  +GC2_CLUS19 = 0 ; /*---Global Cluster 2 : Cluster Component 19------ */
22469  +GC2_CLUS20 = 0 ; /*---Global Cluster 2 : Cluster Component 20------ */
22470  +GC2_CLUS21 = 0 ; /*---Global Cluster 2 : Cluster Component 21------ */
22471  +GC2_CLUS22 = 0 ; /*---Global Cluster 2 : Cluster Component 22------ */
22472  +GC2_CLUS23 = 0 ; /*---Global Cluster 2 : Cluster Component 23------ */
22473  +GC2_CLUS24 = 0 ; /*---Global Cluster 2 : Cluster Component 24------ */
22474  +GC2_CLUS25 = 0 ; /*---Global Cluster 2 : Cluster Component 25------ */
22475  +GC2_CLUS26 = 0 ; /*---Global Cluster 2 : Cluster Component 26------ */
22476  +GC2_CLUS27 = 0 ; /*---Global Cluster 2 : Cluster Component 27------ */
22477  +GC2_CLUS28 = 0 ; /*---Global Cluster 2 : Cluster Component 28------ */
22478  +GC2_CLUS29 = 0 ; /*---Global Cluster 2 : Cluster Component 29------ */
22479  +GC2_CLUS30 = 0 ; /*---Global Cluster 2 : Cluster Component 30------ */
22480  +GC2_CLUS31 = 0 ; /*---Global Cluster 2 : Cluster Component 31------ */
22481  +GC2_CLUS32 = 0 ; /*---Global Cluster 2 : Cluster Component 32------ */
22482  +GC2_CLUS33 = 0 ; /*---Global Cluster 2 : Cluster Component 33------ */
22483  +GC2_CLUS34 = 0 ; /*---Global Cluster 2 : Cluster Component 34------ */
22484  +GC2_CLUS35 = 0 ; /*---Global Cluster 2 : Cluster Component 35------ */
22485  +GC2_CLUS36 = 0 ; /*---Global Cluster 2 : Cluster Component 36------ */
22486  +GC2_CLUS37 = 0 ; /*---Global Cluster 2 : Cluster Component 37------ */
22487  +GC2_CLUS38 = 0 ; /*---Global Cluster 2 : Cluster Component 38------ */
22488  +GC2_CLUS39 = 0 ; /*---Global Cluster 2 : Cluster Component 39------ */
22489  +GC2_CLUS40 = 0 ; /*---Global Cluster 2 : Cluster Component 40------ */
22490  +GC2_CLUS41 = 0 ; /*---Global Cluster 2 : Cluster Component 41------ */
22491  +GC2_CLUS42 = 0 ; /*---Global Cluster 2 : Cluster Component 42------ */
22492  +GC2_CLUS43 = 0 ; /*---Global Cluster 2 : Cluster Component 43------ */
22493  +GC2_CLUS44 = 0 ; /*---Global Cluster 2 : Cluster Component 44------ */
22494  +GC2_CLUS45 = 0 ; /*---Global Cluster 2 : Cluster Component 45------ */
22495  +GC2_CLUS46 = 0 ; /*---Global Cluster 2 : Cluster Component 46------ */
22496  +GC2_CLUS47 = 0 ; /*---Global Cluster 2 : Cluster Component 47------ */
22497  +GC2_CLUS48 = 0 ; /*---Global Cluster 2 : Cluster Component 48------ */
22498  +GC2_CLUS49 = 0 ; /*---Global Cluster 2 : Cluster Component 49------ */
22499  +GC2_CLUS50 = 0 ; /*---Global Cluster 2 : Cluster Component 50------ */
22500  +GC2_CLUS51 = 0 ; /*---Global Cluster 2 : Cluster Component 51------ */
22501  +GC2_CLUS52 = 0 ; /*---Global Cluster 2 : Cluster Component 52------ */
22502  +GC2_CLUS53 = 0 ; /*---Global Cluster 2 : Cluster Component 53------ */
22503  +GC2_CLUS54 = 0 ; /*---Global Cluster 2 : Cluster Component 54------ */
22504  +GC2_CLUS55 = 0 ; /*---Global Cluster 2 : Cluster Component 55------ */
22505  +GC2_CLUS56 = 0 ; /*---Global Cluster 2 : Cluster Component 56------ */
22506  +GC2_CLUS57 = 0 ; /*---Global Cluster 2 : Cluster Component 57------ */
22507  +GC2_CLUS58 = 0 ; /*---Global Cluster 2 : Cluster Component 58------ */
22508  +GC2_CLUS59 = 0 ; /*---Global Cluster 2 : Cluster Component 59------ */
22509  +GC2_CLUS60 = 0 ; /*---Global Cluster 2 : Cluster Component 60------ */
22510  +GC2_CLUS61 = 0 ; /*---Global Cluster 2 : Cluster Component 61------ */
22511  +GC2_CLUS62 = 0 ; /*---Global Cluster 2 : Cluster Component 62------ */
22512  +GC2_CLUS63 = 0 ; /*---Global Cluster 2 : Cluster Component 63------ */
22513  +GC2_CLUS64 = 0 ; /*---Global Cluster 2 : Cluster Component 64------ */
22514  +GC2_CLUS65 = 0 ; /*---Global Cluster 2 : Cluster Component 65------ */
22515  +GC2_CLUS66 = 0 ; /*---Global Cluster 2 : Cluster Component 66------ */
22516  +GC2_CLUS67 = 0 ; /*---Global Cluster 2 : Cluster Component 67------ */
22517  +GC2_CLUS68 = 0 ; /*---Global Cluster 2 : Cluster Component 68------ */
22518  +GC2_CLUS69 = 0 ; /*---Global Cluster 2 : Cluster Component 69------ */
22519  +GC2_CLUS70 = 0 ; /*---Global Cluster 2 : Cluster Component 70------ */
22520  +GC2_CLUS71 = 0 ; /*---Global Cluster 2 : Cluster Component 71------ */
22521  +GC2_CLUS72 = 0 ; /*---Global Cluster 2 : Cluster Component 72------ */
22522  +GC2_CLUS73 = 0 ; /*---Global Cluster 2 : Cluster Component 73------ */
22523  +GC2_CLUS74 = 0 ; /*---Global Cluster 2 : Cluster Component 74------ */
22524  +GC2_CLUS75 = 0 ; /*---Global Cluster 2 : Cluster Component 75------ */
22525  +GC2_CLUS76 = 0 ; /*---Global Cluster 2 : Cluster Component 76------ */
22526  +GC2_CLUS77 = 0 ; /*---Global Cluster 2 : Cluster Component 77------ */
22527  +GC2_CLUS78 = 0 ; /*---Global Cluster 2 : Cluster Component 78------ */
22528  +GC2_CLUS79 = 0 ; /*---Global Cluster 2 : Cluster Component 79------ */
22529  +GC2_CLUS80 = 0 ; /*---Global Cluster 2 : Cluster Component 80------ */
22530  +GC2_CLUS81 = 0 ; /*---Global Cluster 2 : Cluster Component 81------ */
22531  +GC2_CLUS82 = 0 ; /*---Global Cluster 2 : Cluster Component 82------ */
22532  +GC2_CLUS83 = 0 ; /*---Global Cluster 2 : Cluster Component 83------ */
22533  +GC2_CLUS84 = 0 ; /*---Global Cluster 2 : Cluster Component 84------ */
22534  +GC2_CLUS85 = 0 ; /*---Global Cluster 2 : Cluster Component 85------ */
22535  +GC2_CLUS86 = 0 ; /*---Global Cluster 2 : Cluster Component 86------ */
22536  +GC2_CLUS87 = 0 ; /*---Global Cluster 2 : Cluster Component 87------ */
22537  +GC2_CLUS88 = 0 ; /*---Global Cluster 2 : Cluster Component 88------ */
22538  +GC2_CLUS89 = 0 ; /*---Global Cluster 2 : Cluster Component 89------ */
22539  +GC2_CLUS90 = 0 ; /*---Global Cluster 2 : Cluster Component 90------ */
22540  +GC2_CLUS91 = 0 ; /*---Global Cluster 2 : Cluster Component 91------ */
22541  +GC2_CLUS92 = 0 ; /*---Global Cluster 2 : Cluster Component 92------ */
22542  +GC2_CLUS93 = 0 ; /*---Global Cluster 2 : Cluster Component 93------ */
22543  +GC2_CLUS94 = 0 ; /*---Global Cluster 2 : Cluster Component 94------ */
22544  +GC2_CLUS95 = 0 ; /*---Global Cluster 2 : Cluster Component 95------ */
22545  +GC2_CLUS96 = 0 ; /*---Global Cluster 2 : Cluster Component 96------ */
22546  +GC2_CLUS97 = 0 ; /*---Global Cluster 2 : Cluster Component 97------ */
22547  +GC2_CLUS98 = 0 ; /*---Global Cluster 2 : Cluster Component 98------ */
22548  +GC2_CLUS99 = 0 ; /*---Global Cluster 2 : Cluster Component 99------ */
22549  +GC2_CLUS100 = 0 ; /*---Global Cluster 2 : Cluster Component 100------ */
22550  +GC2_CLUS101 = 0 ; /*---Global Cluster 2 : Cluster Component 101------ */
22551  +GC2_CLUS102 = 0 ; /*---Global Cluster 2 : Cluster Component 102------ */
22552  +GC2_CLUS103 = 0 ; /*---Global Cluster 2 : Cluster Component 103------ */
22553  +GC2_CLUS104 = 0 ; /*---Global Cluster 2 : Cluster Component 104------ */
22554  +GC2_CLUS105 = 0 ; /*---Global Cluster 2 : Cluster Component 105------ */
22555  +GC2_CLUS106 = 0 ; /*---Global Cluster 2 : Cluster Component 106------ */
22556  +GC2_CLUS107 = 0 ; /*---Global Cluster 2 : Cluster Component 107------ */
22557  +GC2_CLUS108 = 0 ; /*---Global Cluster 2 : Cluster Component 108------ */
22558  +GC2_CLUS109 = 0 ; /*---Global Cluster 2 : Cluster Component 109------ */
22559  +GC2_CLUS110 = 0 ; /*---Global Cluster 2 : Cluster Component 110------ */
22560  +GC2_CLUS111 = 0 ; /*---Global Cluster 2 : Cluster Component 111------ */
22561  +GC2_CLUS112 = 0 ; /*---Global Cluster 2 : Cluster Component 112------ */
22562  +GC2_CLUS113 = 0 ; /*---Global Cluster 2 : Cluster Component 113------ */
22563  +GC2_CLUS78 = GC2_CLUS78+0.70353556661398 * (ACTBUY1 - 0.37512021095082)/0.48416145062171;
22564  +GC2_CLUS104 = GC2_CLUS104+1 * (ACTBUY10 - 0.00006204436171)/0.00787670215937;
22565  +GC2_CLUS60 = GC2_CLUS60+0.68397308788197 * (ACTBUY2 - 0.13730417248332)/0.34417351938694;
22566  +GC2_CLUS59 = GC2_CLUS59+1 * (ACTBUY4 - 0.02196370404839)/0.14656727523669;
22567  +GC2_CLUS30 = GC2_CLUS30+0.57714998674326 * (ACTBUY6 - 0.00499457111834)/0.07049666340397;
22568  +GC2_CLUS39 = GC2_CLUS39+0.66549016136596 * (ACTBUY7 - 0.00186133085155)/0.04310364179361;
22569  +GC2_CLUS113 = GC2_CLUS113+0.65332668135995 * (ACTBUY8 - 0.00105475414921)/0.03246035012406;
22570  +GC2_CLUS49 = GC2_CLUS49+0.68252296374203 * (ACTBUY9 - 0.00024817744687)/0.01575193804466;
22571  +GC2_CLUS10 = GC2_CLUS10+0.39970826371579 * (BUYPROP - 0.18928931964407)/0.25656954904129;
22572  +GC2_CLUS1 = GC2_CLUS1+-0.33332429688878 * (CCPAYM0 - 0.58303086706995)/0.49306532733706;
22573  +GC2_CLUS1 = GC2_CLUS1+0.33332429688878 * (CCPAYM1 - 0.41696913293004)/0.49306532733706;
22574  +GC2_CLUS45 = GC2_CLUS45+0.62731005863842 * (DEPT073 - 0.00555297037381)/0.07431222112026;
22575  +GC2_CLUS27 = GC2_CLUS27+0.64067029032571 * (DEPT074 - 0.00065146579804)/0.02551590852213;
22576  +GC2_CLUS7 = GC2_CLUS7+0.17669683248332 * (DEPT075 - 0.00077555452148)/0.02783841012245;
22577  +GC2_CLUS73 = GC2_CLUS73+1 * (DEPT076 - 0.00006204436171)/0.00787670215937;
22578  +GC2_CLUS98 = GC2_CLUS98+0.70707575816053 * (DEPT077 - 0.00012408872343)/0.01113899342716;
22579  +GC2_CLUS58 = GC2_CLUS58+1 * (DEPT078 - 0.00003102218085)/0.00556975590661;
22580  +GC2_CLUS1 = GC2_CLUS1+0.00329291728751 * (DEPT1110 - 0.00003102218085)/0.00556975590661;
22581  +GC2_CLUS6 = GC2_CLUS6+0.34430827911286 * (DEPT1111 - 0.00009306654257)/0.009646800928;
22582  +GC2_CLUS17 = GC2_CLUS17+0.57735623987417 * (DEPT1113 - 0.00006204436171)/0.00787670215937;
22583  +GC2_CLUS107 = GC2_CLUS107+1 * (DEPT1116 - 0.00003102218085)/0.00556975590661;
22584  +GC2_CLUS80 = GC2_CLUS80+1 * (DEPT1118 - 0.00003102218085)/0.00556975590661;
22585  +GC2_CLUS84 = GC2_CLUS84+1 * (DEPT113 - 0.03601675197766)/0.18633470601066;
22586  +GC2_CLUS69 = GC2_CLUS69+0.68987520962959 * (DEPT114 - 0.00210950829843)/0.04588162571985;
22587  +GC2_CLUS45 = GC2_CLUS45+0.64775444987474 * (DEPT115 - 0.00390879478827)/0.06239901361948;
22588  +GC2_CLUS36 = GC2_CLUS36+0.47773193756148 * (DEPT116 - 0.00055839925546)/0.02362424092676;
22589  +GC2_CLUS66 = GC2_CLUS66+0.52357424607076 * (DEPT117 - 0.0006824879789)/0.02611595963267;
22590  +GC2_CLUS18 = GC2_CLUS18+0.59586828169466 * (DEPT118 - 0.00018613308515)/0.01364200179552;
22591  +GC2_CLUS88 = GC2_CLUS88+1 * (DEPT119 - 0.00018613308515)/0.01364200179552;
22592  +GC2_CLUS19 = GC2_CLUS19+0.63345348271587 * (DEPT1210 - 0.00006204436171)/0.00787670215937;
22593  +GC2_CLUS38 = GC2_CLUS38+0.66418116073498 * (DEPT1211 - 0.00012408872343)/0.01113899342716;
22594  +GC2_CLUS108 = GC2_CLUS108+1 * (DEPT1212 - 0.00003102218085)/0.00556975590661;
22595  +GC2_CLUS70 = GC2_CLUS70+1 * (DEPT1215 - 0.00006204436171)/0.00787670215937;
22596  +GC2_CLUS6 = GC2_CLUS6+0.40886734513699 * (DEPT1216 - 0.00003102218085)/0.00556975590661;
22597  +GC2_CLUS4 = GC2_CLUS4+0.02178413003067 * (DEPT124 - 0.00245075228788)/0.04944514076042;
22598  +GC2_CLUS95 = GC2_CLUS95+1 * (DEPT126 - 0.00071351015976)/0.02670249393877;
22599  +GC2_CLUS66 = GC2_CLUS66+0.6406563678686 * (DEPT127 - 0.00105475414921)/0.03246035012406;
22600  +GC2_CLUS96 = GC2_CLUS96+1 * (DEPT128 - 0.00034124398945)/0.01846992487371;
22601  +GC2_CLUS63 = GC2_CLUS63+1 * (DEPT129 - 0.00046533271288)/0.02156688683426;
22602  +GC2_CLUS83 = GC2_CLUS83+1 * (DEPT1710 - 0.00040328835117)/0.02007830211705;
22603  +GC2_CLUS2 = GC2_CLUS2+0.02514555127208 * (DEPT1711 - 0.00015511090429)/0.01245358005496;
22604  +GC2_CLUS64 = GC2_CLUS64+0.68226069224856 * (DEPT1712 - 0.00018613308515)/0.01364200179552;
22605  +GC2_CLUS102 = GC2_CLUS102+1 * (DEPT1713 - 0.00009306654257)/0.009646800928;
22606  +GC2_CLUS14 = GC2_CLUS14+0.57735474715094 * (DEPT1714 - 0.00012408872343)/0.01113899342716;
22607  +GC2_CLUS42 = GC2_CLUS42+0.67786792202818 * (DEPT1715 - 0.00006204436171)/0.00787670215937;
22608  +GC2_CLUS30 = GC2_CLUS30+0.51627402313528 * (DEPT1716 - 0.00003102218085)/0.00556975590661;
22609  +GC2_CLUS94 = GC2_CLUS94+1 * (DEPT1717 - 0.00012408872343)/0.01113899342716;
22610  +GC2_CLUS29 = GC2_CLUS29+0.64551725438192 * (DEPT1723 - 0.00003102218085)/0.00556975590661;
22611  +GC2_CLUS86 = GC2_CLUS86+0.69854849681034 * (DEPT173 - 0.03449666511555)/0.18250391362458;
22612  +GC2_CLUS24 = GC2_CLUS24+1 * (DEPT1734 - 0.00003102218085)/0.00556975590661;
22613  +GC2_CLUS52 = GC2_CLUS52+0.50277107424889 * (DEPT174 - 0.00499457111834)/0.07049666340397;
22614  +GC2_CLUS46 = GC2_CLUS46+0.68897448677127 * (DEPT175 - 0.00536683728866)/0.07306298617482;
22615  +GC2_CLUS54 = GC2_CLUS54+0.69824018440402 * (DEPT176 - 0.00161315340468)/0.04013229503948;
22616  +GC2_CLUS35 = GC2_CLUS35+0.44094101442433 * (DEPT177 - 0.0013649759578)/0.03692093019532;
22617  +GC2_CLUS23 = GC2_CLUS23+0.63774481204568 * (DEPT178 - 0.00058942143632)/0.02427122357082;
22618  +GC2_CLUS36 = GC2_CLUS36+0.60850012622475 * (DEPT179 - 0.00046533271288)/0.02156688683426;
22619  +GC2_CLUS53 = GC2_CLUS53+0.67169600462885 * (DEPT1810 - 0.00015511090429)/0.01245358005496;
22620  +GC2_CLUS62 = GC2_CLUS62+1 * (DEPT1811 - 0.00012408872343)/0.01113899342716;
22621  +GC2_CLUS20 = GC2_CLUS20+0.0042240149445 * (DEPT1812 - 0.00003102218085)/0.00556975590661;
22622  +GC2_CLUS39 = GC2_CLUS39+0.66549016136596 * (DEPT1813 - 0.00003102218085)/0.00556975590661;
22623  +GC2_CLUS85 = GC2_CLUS85+1 * (DEPT183 - 0.02953311617806)/0.16929796330267;
22624  +GC2_CLUS78 = GC2_CLUS78+-0.70353556661397 * (DEPT184 - 0.00341243989452)/0.05831724146293;
22625  +GC2_CLUS54 = GC2_CLUS54+0.69824018440403 * (DEPT185 - 0.00310221808593)/0.0556119615809;
22626  +GC2_CLUS93 = GC2_CLUS93+1 * (DEPT186 - 0.00062044361718)/0.02490136347819;
22627  +GC2_CLUS49 = GC2_CLUS49+0.68252296374204 * (DEPT187 - 0.00071351015976)/0.02670249393877;
22628  +GC2_CLUS35 = GC2_CLUS35+0.62426814790219 * (DEPT188 - 0.00009306654257)/0.009646800928;
22629  +GC2_CLUS32 = GC2_CLUS32+0.59587096142352 * (DEPT189 - 0.00009306654257)/0.009646800928;
22630  +GC2_CLUS91 = GC2_CLUS91+1 * (DEPT1910 - 0.00015511090429)/0.01245358005496;
22631  +GC2_CLUS41 = GC2_CLUS41+0.54204900992923 * (DEPT1911 - 0.00009306654257)/0.009646800928;
22632  +GC2_CLUS103 = GC2_CLUS103+1 * (DEPT1912 - 0.00006204436171)/0.00787670215937;
22633  +GC2_CLUS23 = GC2_CLUS23+0.63774481204568 * (DEPT1913 - 0.00003102218085)/0.00556975590661;
22634  +GC2_CLUS82 = GC2_CLUS82+1 * (DEPT1914 - 0.00003102218085)/0.00556975590661;
22635  +GC2_CLUS18 = GC2_CLUS18+0.59586828169466 * (DEPT1915 - 0.00003102218085)/0.00556975590661;
22636  +GC2_CLUS109 = GC2_CLUS109+1 * (DEPT1918 - 0.00003102218085)/0.00556975590661;
22637  +GC2_CLUS14 = GC2_CLUS14+0.57735474715094 * (DEPT1920 - 0.00003102218085)/0.00556975590661;
22638  +GC2_CLUS45 = GC2_CLUS45+0.37224529748561 * (DEPT193 - 0.01091980766247)/0.1039273810436;
22639  +GC2_CLUS52 = GC2_CLUS52+0.55631930384165 * (DEPT194 - 0.00331937335194)/0.05751919460555;
22640  +GC2_CLUS86 = GC2_CLUS86+0.69854849681035 * (DEPT195 - 0.00210950829843)/0.04588162571985;
22641  +GC2_CLUS35 = GC2_CLUS35+0.52925200332639 * (DEPT196 - 0.00080657670234)/0.02838927858765;
22642  +GC2_CLUS90 = GC2_CLUS90+1 * (DEPT197 - 0.00034124398945)/0.01846992487371;
22643  +GC2_CLUS100 = GC2_CLUS100+1 * (DEPT198 - 0.00027919962773)/0.01670719409516;
22644  +GC2_CLUS77 = GC2_CLUS77+1 * (DEPT203 - 0.00859314409803)/0.0923014965646;
22645  +GC2_CLUS52 = GC2_CLUS52+0.6058886256251 * (DEPT204 - 0.00012408872343)/0.01113899342716;
22646  +GC2_CLUS53 = GC2_CLUS53+0.67169600462885 * (DEPT205 - 0.0005273770746)/0.02295899170903;
22647  +GC2_CLUS113 = GC2_CLUS113+0.65332668135995 * (DEPT206 - 0.00003102218085)/0.00556975590661;
22648  +GC2_CLUS50 = GC2_CLUS50+1 * (DEPT207 - 0.00003102218085)/0.00556975590661;
22649  +GC2_CLUS87 = GC2_CLUS87+1 * (DEPT208 - 0.00003102218085)/0.00556975590661;
22650  +GC2_CLUS41 = GC2_CLUS41+0.47434059563156 * (DEPT213 - 0.00527377074608)/0.07243010999791;
22651  +GC2_CLUS89 = GC2_CLUS89+1 * (DEPT214 - 0.00012408872343)/0.01113899342716;
22652  +GC2_CLUS81 = GC2_CLUS81+1 * (DEPT215 - 0.00024817744687)/0.01575193804466;
22653  +GC2_CLUS57 = GC2_CLUS57+1 * (DEPT216 - 0.00006204436171)/0.00787670215937;
22654  +GC2_CLUS9 = GC2_CLUS9+0.49999999999999 * (DEPT219 - 0.00003102218085)/0.00556975590661;
22655  +GC2_CLUS79 = GC2_CLUS79+1 * (DEPT2610 - 0.00003102218085)/0.00556975590661;
22656  +GC2_CLUS31 = GC2_CLUS31+0.65969471433918 * (DEPT2611 - 0.00009306654257)/0.009646800928;
22657  +GC2_CLUS51 = GC2_CLUS51+1 * (DEPT2614 - 0.00003102218085)/0.00556975590661;
22658  +GC2_CLUS27 = GC2_CLUS27+0.64067029032571 * (DEPT2615 - 0.00003102218085)/0.00556975590661;
22659  +GC2_CLUS110 = GC2_CLUS110+1 * (DEPT2625 - 0.00003102218085)/0.00556975590661;
22660  +GC2_CLUS60 = GC2_CLUS60+0.68397308788197 * (DEPT263 - 0.03750581665891)/0.19000065864136;
22661  +GC2_CLUS67 = GC2_CLUS67+1 * (DEPT264 - 0.00719714595936)/0.0845314658605;
22662  +GC2_CLUS10 = GC2_CLUS10+0.06806844783012 * (DEPT265 - 0.00456026058631)/0.06737659414192;
22663  +GC2_CLUS7 = GC2_CLUS7+0.47478642904489 * (DEPT2655 - 0.00003102218085)/0.00556975590661;
22664  +GC2_CLUS37 = GC2_CLUS37+0.68491175726902 * (DEPT266 - 0.00158213122382)/0.03974515177532;
22665  +GC2_CLUS64 = GC2_CLUS64+0.68226069224856 * (DEPT267 - 0.00093066542577)/0.03049308336231;
22666  +GC2_CLUS6 = GC2_CLUS6+0.21561426346472 * (DEPT268 - 0.00034124398945)/0.01846992487371;
22667  +GC2_CLUS44 = GC2_CLUS44+0.66346428541317 * (DEPT269 - 0.00027919962773)/0.01670719409516;
22668  +GC2_CLUS4 = GC2_CLUS4+0.40749109174143 * (DOLINDEA - 47.8585866898046)/37.591191668842;
22669  +GC2_CLUS2 = GC2_CLUS2+0.36456818827751 * (DOLL24 - 45.4938073522568)/93.9875146751151;
22670  +GC2_CLUS15 = GC2_CLUS15+0.57886604578675 * (DOLLARQ16 - 7.79008624166279)/31.0104071776129;
22671  +GC2_CLUS10 = GC2_CLUS10+0.37752072046688 * (DOLLARQ20 - 8.71046657360012)/32.6472704396304;
22672  +GC2_CLUS16 = GC2_CLUS16+0.57237976067252 * (DOLLARQ21 - 4.74636513106871)/24.268088572003;
22673  +GC2_CLUS2 = GC2_CLUS2+0.47693471375806 * (DOLLARQ22 - 4.88413153404684)/24.8521912523649;
22674  +GC2_CLUS4 = GC2_CLUS4+0.40652407151951 * (DOLNETDA - 45.411597554134)/36.1502695431938;
22675  +GC2_CLUS1 = GC2_CLUS1+0.33332429688878 * (METHPAYMCC - 0.41696913293004)/0.49306532733706;
22676  +GC2_CLUS20 = GC2_CLUS20+0.33331284650558 * (METHPAYMCK - 0.3029315960912)/0.45953301856693;
22677  +GC2_CLUS20 = GC2_CLUS20+-0.33331284650558 * (PCPAYM0 - 0.69706840390879)/0.45953301856693;
22678  +GC2_CLUS20 = GC2_CLUS20+0.33331284650558 * (PCPAYM1 - 0.3029315960912)/0.45953301856693;
22679  +GC2_CLUS99 = GC2_CLUS99+1 * (TOTORDQ013 - 0.00077555452148)/0.02783841012245;
22680  +GC2_CLUS6 = GC2_CLUS6+0.24599420649499 * (TOTORDQ014 - 0.00024817744687)/0.01575193804466;
22681  +GC2_CLUS22 = GC2_CLUS22+0.63612934622951 * (TOTORDQ015 - 0.00009306654257)/0.009646800928;
22682  +GC2_CLUS41 = GC2_CLUS41+0.59862385735495 * (TOTORDQ023 - 0.00120986505351)/0.03476260589299;
22683  +GC2_CLUS56 = GC2_CLUS56+0.67262738415027 * (TOTORDQ024 - 0.00018613308515)/0.01364200179552;
22684  +GC2_CLUS12 = GC2_CLUS12+0.54119783878849 * (TOTORDQ025 - 0.00003102218085)/0.00556975590661;
22685  +GC2_CLUS25 = GC2_CLUS25+0.34009901812203 * (TOTORDQ032 - 0.00384675042655)/0.06190373023441;
22686  +GC2_CLUS56 = GC2_CLUS56+0.67262738415027 * (TOTORDQ033 - 0.00046533271288)/0.02156688683426;
22687  +GC2_CLUS26 = GC2_CLUS26+1 * (TOTORDQ034 - 0.00003102218085)/0.00556975590661;
22688  +GC2_CLUS66 = GC2_CLUS66+0.51162142287849 * (TOTORDQ042 - 0.00604932526756)/0.07754300397319;
22689  +GC2_CLUS21 = GC2_CLUS21+0.64068097272847 * (TOTORDQ044 - 0.00021715526601)/0.01473481743971;
22690  +GC2_CLUS11 = GC2_CLUS11+0.60779357584955 * (TOTORDQ045 - 0.00006204436171)/0.00787670215937;
22691  +GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ046 - 0.00003102218085)/0.00556975590661;
22692  +GC2_CLUS43 = GC2_CLUS43+0.54431506285932 * (TOTORDQ052 - 0.00772452303396)/0.08755051436602;
22693  +GC2_CLUS25 = GC2_CLUS25+0.50763358740718 * (TOTORDQ053 - 0.00133395377695)/0.03649952975734;
22694  +GC2_CLUS17 = GC2_CLUS17+0.57735623987417 * (TOTORDQ054 - 0.00006204436171)/0.00787670215937;
22695  +GC2_CLUS112 = GC2_CLUS112+0.6494013995197 * (TOTORDQ055 - 0.00003102218085)/0.00556975590661;
22696  +GC2_CLUS34 = GC2_CLUS34+0.53399486213598 * (TOTORDQ062 - 0.00626648053358)/0.07891390842548;
22697  +GC2_CLUS43 = GC2_CLUS43+0.35716547598315 * (TOTORDQ063 - 0.00086862106406)/0.02946003200026;
22698  +GC2_CLUS11 = GC2_CLUS11+0.60779357584955 * (TOTORDQ064 - 0.00012408872343)/0.01113899342716;
22699  +GC2_CLUS46 = GC2_CLUS46+0.68897448677127 * (TOTORDQ065 - 0.00006204436171)/0.00787670215937;
22700  +GC2_CLUS34 = GC2_CLUS34+0.62858790425642 * (TOTORDQ073 - 0.0008375988832)/0.02892962624192;
22701  +GC2_CLUS55 = GC2_CLUS55+1 * (TOTORDQ074 - 0.00012408872343)/0.01113899342716;
22702  +GC2_CLUS101 = GC2_CLUS101+1 * (TOTORDQ075 - 0.00006204436171)/0.00787670215937;
22703  +GC2_CLUS30 = GC2_CLUS30+0.52386769059736 * (TOTORDQ082 - 0.01002016441755)/0.09959954048469;
22704  +GC2_CLUS40 = GC2_CLUS40+0.67110241524981 * (TOTORDQ083 - 0.00117884287265)/0.03431457023532;
22705  +GC2_CLUS38 = GC2_CLUS38+0.66418116073498 * (TOTORDQ084 - 0.00043431053203)/0.02083591548788;
22706  +GC2_CLUS21 = GC2_CLUS21+0.64068097272847 * (TOTORDQ085 - 0.00009306654257)/0.009646800928;
22707  +GC2_CLUS111 = GC2_CLUS111+1 * (TOTORDQ086 - 0.00003102218085)/0.00556975590661;
22708  +GC2_CLUS43 = GC2_CLUS43+0.53531037024411 * (TOTORDQ092 - 0.00732123468279)/0.08525174291693;
22709  +GC2_CLUS19 = GC2_CLUS19+0.63345348271587 * (TOTORDQ093 - 0.00102373196835)/0.03197992601749;
22710  +GC2_CLUS97 = GC2_CLUS97+1 * (TOTORDQ094 - 0.00015511090429)/0.01245358005496;
22711  +GC2_CLUS20 = GC2_CLUS20+-0.00259612740039 * (TOTORDQ095 - 0.00006204436171)/0.00787670215937;
22712  +GC2_CLUS3 = GC2_CLUS3+0.06870363678907 * (TOTORDQ103 - 0.00089964324492)/0.02998102352496;
22713  +GC2_CLUS6 = GC2_CLUS6+0.1734756877022 * (TOTORDQ113 - 0.00055839925546)/0.02362424092676;
22714  +GC2_CLUS5 = GC2_CLUS5+0.30154120549812 * (TOTORDQ114 - 0.00015511090429)/0.01245358005496;
22715  +GC2_CLUS33 = GC2_CLUS33+0.65467906584889 * (TOTORDQ117 - 0.00003102218085)/0.00556975590661;
22716  +GC2_CLUS40 = GC2_CLUS40+0.67110241524981 * (TOTORDQ123 - 0.00164417558554)/0.04051571541781;
22717  +GC2_CLUS34 = GC2_CLUS34+0.45168699341674 * (TOTORDQ124 - 0.00021715526601)/0.01473481743971;
22718  +GC2_CLUS5 = GC2_CLUS5+0.32466521308135 * (TOTORDQ125 - 0.00012408872343)/0.01113899342716;
22719  +GC2_CLUS105 = GC2_CLUS105+1 * (TOTORDQ126 - 0.00003102218085)/0.00556975590661;
22720  +GC2_CLUS98 = GC2_CLUS98+-0.70707575815949 * (TOTORDQ127 - 0.00006204436171)/0.00787670215937;
22721  +GC2_CLUS8 = GC2_CLUS8+0.14736096434836 * (TOTORDQ133 - 0.00120986505351)/0.03476260589299;
22722  +GC2_CLUS5 = GC2_CLUS5+0.32466521308135 * (TOTORDQ134 - 0.00012408872343)/0.01113899342716;
22723  +GC2_CLUS32 = GC2_CLUS32+0.59587096142352 * (TOTORDQ135 - 0.00006204436171)/0.00787670215937;
22724  +GC2_CLUS43 = GC2_CLUS43+0.43483115815083 * (TOTORDQ142 - 0.00710407941678)/0.08398708411191;
22725  +GC2_CLUS69 = GC2_CLUS69+0.68987520962959 * (TOTORDQ143 - 0.0006824879789)/0.02611595963267;
22726  +GC2_CLUS47 = GC2_CLUS47+0.67314490125425 * (TOTORDQ144 - 0.00009306654257)/0.009646800928;
22727  +GC2_CLUS9 = GC2_CLUS9+0.5 * (TOTORDQ145 - 0.00003102218085)/0.00556975590661;
22728  +GC2_CLUS5 = GC2_CLUS5+0.41753813304935 * (TOTORDQ146 - 0.00003102218085)/0.00556975590661;
22729  +GC2_CLUS33 = GC2_CLUS33+0.65467906584889 * (TOTORDQ153 - 0.00111679851093)/0.03340038742182;
22730  +GC2_CLUS65 = GC2_CLUS65+1 * (TOTORDQ154 - 0.00012408872343)/0.01113899342716;
22731  +GC2_CLUS25 = GC2_CLUS25+0.60980192262847 * (TOTORDQ155 - 0.00003102218085)/0.00556975590661;
22732  +GC2_CLUS13 = GC2_CLUS13+0.57735474715094 * (TOTORDQ158 - 0.00003102218085)/0.00556975590661;
22733  +GC2_CLUS15 = GC2_CLUS15+0.57886604578675 * (TOTORDQ161 - 0.10696447960291)/0.30907287673359;
22734  +GC2_CLUS61 = GC2_CLUS61+1 * (TOTORDQ162 - 0.01495269117418)/0.12136541988586;
22735  +GC2_CLUS42 = GC2_CLUS42+0.67786792202819 * (TOTORDQ163 - 0.00198541957499)/0.04451448253965;
22736  +GC2_CLUS31 = GC2_CLUS31+0.65969471433917 * (TOTORDQ164 - 0.00046533271288)/0.02156688683426;
22737  +GC2_CLUS13 = GC2_CLUS13+0.57735474715094 * (TOTORDQ165 - 0.00012408872343)/0.01113899342716;
22738  +GC2_CLUS28 = GC2_CLUS28+0.64441966911372 * (TOTORDQ166 - 0.00006204436171)/0.00787670215937;
22739  +GC2_CLUS106 = GC2_CLUS106+1 * (TOTORDQ167 - 0.00003102218085)/0.00556975590661;
22740  +GC2_CLUS36 = GC2_CLUS36+0.54512403750316 * (TOTORDQ173 - 0.0013649759578)/0.03692093019532;
22741  +GC2_CLUS28 = GC2_CLUS28+0.64441966911372 * (TOTORDQ174 - 0.00037226617031)/0.01929090803403;
22742  +GC2_CLUS8 = GC2_CLUS8+0.48289057790701 * (TOTORDQ175 - 0.00003102218085)/0.00556975590661;
22743  +GC2_CLUS47 = GC2_CLUS47+0.67314490125425 * (TOTORDQ183 - 0.00096168760663)/0.03099665416568;
22744  +GC2_CLUS48 = GC2_CLUS48+1 * (TOTORDQ184 - 0.00012408872343)/0.01113899342716;
22745  +GC2_CLUS8 = GC2_CLUS8+0.48289057790701 * (TOTORDQ185 - 0.00003102218085)/0.00556975590661;
22746  +GC2_CLUS25 = GC2_CLUS25+0.2838334689879 * (TOTORDQ192 - 0.00573910345897)/0.07554034136585;
22747  +GC2_CLUS6 = GC2_CLUS6+0.1549639170417 * (TOTORDQ193 - 0.00071351015976)/0.02670249393877;
22748  +GC2_CLUS12 = GC2_CLUS12+0.54119783878849 * (TOTORDQ195 - 0.00006204436171)/0.00787670215937;
22749  +GC2_CLUS10 = GC2_CLUS10+0.42411828228172 * (TOTORDQ201 - 0.12349930200093)/0.32901456286213;
22750  +GC2_CLUS92 = GC2_CLUS92+1 * (TOTORDQ2010 - 0.00003102218085)/0.00556975590661;
22751  +GC2_CLUS37 = GC2_CLUS37+0.68491175726902 * (TOTORDQ202 - 0.01247091670544)/0.11097646148697;
22752  +GC2_CLUS7 = GC2_CLUS7+0.47478642904489 * (TOTORDQ2027 - 0.00003102218085)/0.00556975590661;
22753  +GC2_CLUS68 = GC2_CLUS68+1 * (TOTORDQ203 - 0.00189235303241)/0.04346067910265;
22754  +GC2_CLUS6 = GC2_CLUS6+0.15819736892783 * (TOTORDQ204 - 0.0006824879789)/0.02611595963267;
22755  +GC2_CLUS44 = GC2_CLUS44+0.66346428541317 * (TOTORDQ205 - 0.00018613308515)/0.01364200179552;
22756  +GC2_CLUS3 = GC2_CLUS3+0.22278771013915 * (TOTORDQ207 - 0.00006204436171)/0.00787670215937;
22757  +GC2_CLUS16 = GC2_CLUS16+0.57237976067252 * (TOTORDQ211 - 0.07280905847681)/0.25982685347701;
22758  +GC2_CLUS76 = GC2_CLUS76+1 * (TOTORDQ212 - 0.00763145649139)/0.08702558421647;
22759  +GC2_CLUS112 = GC2_CLUS112+0.6494013995197 * (TOTORDQ213 - 0.00089964324492)/0.02998102352496;
22760  +GC2_CLUS72 = GC2_CLUS72+1 * (TOTORDQ214 - 0.00015511090429)/0.01245358005496;
22761  +GC2_CLUS71 = GC2_CLUS71+1 * (TOTORDQ215 - 0.00003102218085)/0.00556975590661;
22762  +GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ219 - 0.00003102218085)/0.00556975590661;
22763  +GC2_CLUS2 = GC2_CLUS2+0.42748122980757 * (TOTORDQ221 - 0.07097874980611)/0.25679332657203;
22764  +GC2_CLUS75 = GC2_CLUS75+1 * (TOTORDQ222 - 0.00586319218241)/0.0763478617121;
22765  +GC2_CLUS29 = GC2_CLUS29+0.64551725438192 * (TOTORDQ223 - 0.00077555452148)/0.02783841012245;
22766  +GC2_CLUS22 = GC2_CLUS22+0.63612934622951 * (TOTORDQ224 - 0.00018613308515)/0.01364200179552;
22767  +GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ225 - 0.00003102218085)/0.00556975590661;
22768  +GC2_CLUS74 = GC2_CLUS74+1 * (TOTORDQ226 - 0.00003102218085)/0.00556975590661;
22769  +GC2_CLUS4 = GC2_CLUS4+0.3088289367104 * (UNTLANPO - 2.67912081406979)/2.42439611488132;
22770  +
22771  +/*-------------------------------------------------*/
22772  +/* Varclus Score Code Begins: GCLUSTER 3*/
22773  +/*-------------------------------------------------*/
22774  +
22775  +GC3_CLUS1 = 0 ; /*---Global Cluster 3 : Cluster Component 1------ */
22776  +GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (DEPT0711 - 0.00006204436171)/0.00787670215937;
22777  +GC3_CLUS1 = GC3_CLUS1+0.04796917964258 * (DEPT199 - 0.00015511090429)/0.01245358005496;
22778  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (DEPT2622 - 0.00003102218085)/0.00556975590661;
22779  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ016 - 0.00003102218085)/0.00556975590661;
22780  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ028 - 0.00003102218085)/0.00556975590661;
22781  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ049 - 0.00003102218085)/0.00556975590661;
22782  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ069 - 0.00003102218085)/0.00556975590661;
22783  +GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (TOTORDQ078 - 0.00006204436171)/0.00787670215937;
22784  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ0810 - 0.00003102218085)/0.00556975590661;
22785  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ106 - 0.00003102218085)/0.00556975590661;
22786  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ129 - 0.00003102218085)/0.00556975590661;
22787  +GC3_CLUS1 = GC3_CLUS1+0.05334450065098 * (TOTORDQ194 - 0.00012408872343)/0.01113899342716;
22788  +GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (TOTORDQ208 - 0.00006204436171)/0.00787670215937;
22789  +
22790  +/*-------------------------------------------------*/
22791  +/* Varclus Score Code Begins: GCLUSTER 4*/
22792  +/*-------------------------------------------------*/
22793  +
22794  +GC4_CLUS1 = 0 ; /*---Global Cluster 4 : Cluster Component 1------ */
22795  +GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ0416 - 0.00003102218085)/0.00556975590661;
22796  +GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ0823 - 0.00003102218085)/0.00556975590661;
22797  +GC4_CLUS1 = GC4_CLUS1+0.24999999999999 * (TOTORDQ1221 - 0.00003102218085)/0.00556975590661;
22798  +GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ1610 - 0.00003102218085)/0.00556975590661;
22799  +
22800  +/*-------------------------------------------------*/
22801  +/* Varclus Score Code Begins: GCLUSTER 5*/
22802  +/*-------------------------------------------------*/
22803  +
22804  +GC5_CLUS1 = 0 ; /*---Global Cluster 5 : Cluster Component 1------ */
22805  +GC5_CLUS2 = 0 ; /*---Global Cluster 5 : Cluster Component 2------ */
22806  +GC5_CLUS3 = 0 ; /*---Global Cluster 5 : Cluster Component 3------ */
22807  +GC5_CLUS4 = 0 ; /*---Global Cluster 5 : Cluster Component 4------ */
22808  +GC5_CLUS5 = 0 ; /*---Global Cluster 5 : Cluster Component 5------ */
22809  +GC5_CLUS6 = 0 ; /*---Global Cluster 5 : Cluster Component 6------ */
22810  +GC5_CLUS7 = 0 ; /*---Global Cluster 5 : Cluster Component 7------ */
22811  +GC5_CLUS3 = GC5_CLUS3+0.46584247564733 * (ACTBUY0 - 0.39695982627578)/0.48927512608284;
22812  +GC5_CLUS2 = GC5_CLUS2+0.30919640480675 * (BOTHPAYM0 - 0.80645261361873)/0.39508434277919;
22813  +GC5_CLUS1 = GC5_CLUS1+0.30120355255709 * (DAYLAST - 1182.17608189855)/1226.0780195912;
22814  +GC5_CLUS6 = GC5_CLUS6+0.34736590127286 * (DEPT070 - 0.99270978749806)/0.08507226234284;
22815  +GC5_CLUS2 = GC5_CLUS2+0.18415939769064 * (DEPT110 - 0.95607259190321)/0.20493680444998;
22816  +GC5_CLUS2 = GC5_CLUS2+0.22269123339442 * (DEPT120 - 0.93829688227082)/0.24061928248315;
22817  +GC5_CLUS6 = GC5_CLUS6+0.47994471288021 * (DEPT170 - 0.94986815573134)/0.21822034675722;
22818  +GC5_CLUS6 = GC5_CLUS6+0.5124243913791 * (DEPT180 - 0.96209089498991)/0.1909794131409;
22819  +GC5_CLUS6 = GC5_CLUS6+0.50692052068599 * (DEPT190 - 0.98160384675042)/0.13438115568369;
22820  +GC5_CLUS7 = GC5_CLUS7+0.69209117872376 * (DEPT200 - 0.99066232356134)/0.09618092958834;
22821  +GC5_CLUS7 = GC5_CLUS7+0.69209117872377 * (DEPT210 - 0.99426089654102)/0.07554034136585;
22822  +GC5_CLUS3 = GC5_CLUS3+0.2143347187659 * (DEPT260 - 0.94732433690088)/0.22338864272858;
22823  +GC5_CLUS1 = GC5_CLUS1+0.26325511297008 * (METHPAYMDK - 0.08655188459748)/0.28118162916549;
22824  +GC5_CLUS1 = GC5_CLUS1+0.301209444711 * (MONLAST - 38.7579959671164)/40.2783526824403;
22825  +GC5_CLUS1 = GC5_CLUS1+0.17996233854645 * (TENURE - 83.4682798200713)/60.0499642836247;
22826  +GC5_CLUS2 = GC5_CLUS2+0.27025622569311 * (TOTORDQ010 - 0.93240266790755)/0.25105753944269;
22827  +GC5_CLUS2 = GC5_CLUS2+0.26794135607021 * (TOTORDQ020 - 0.93587715216379)/0.24497544765707;
22828  +GC5_CLUS2 = GC5_CLUS2+0.2076019813346 * (TOTORDQ030 - 0.94645571583682)/0.22511967032131;
22829  +GC5_CLUS3 = GC5_CLUS3+0.23186226466653 * (TOTORDQ040 - 0.91928028540406)/0.27240841454353;
22830  +GC5_CLUS2 = GC5_CLUS2+0.26895627760627 * (TOTORDQ050 - 0.92303396928804)/0.26654167550805;
22831  +GC5_CLUS2 = GC5_CLUS2+0.24380069908289 * (TOTORDQ060 - 0.92818365131068)/0.25818758435395;
22832  +GC5_CLUS2 = GC5_CLUS2+0.23486245182423 * (TOTORDQ070 - 0.92405770125639)/0.26490987723425;
22833  +GC5_CLUS3 = GC5_CLUS3+0.28470626429186 * (TOTORDQ080 - 0.89734760353652)/0.30350904378116;
22834  +GC5_CLUS5 = GC5_CLUS5+0.34171694062004 * (TOTORDQ090 - 0.91887699705289)/0.2730281558173;
22835  +GC5_CLUS5 = GC5_CLUS5+0.33889336426033 * (TOTORDQ100 - 0.93345742205677)/0.24923200086665;
22836  +GC5_CLUS5 = GC5_CLUS5+0.3462003434009 * (TOTORDQ110 - 0.92294090274546)/0.26668933083571;
22837  +GC5_CLUS3 = GC5_CLUS3+0.29888805736787 * (TOTORDQ120 - 0.89061579029005)/0.31212549820402;
22838  +GC5_CLUS5 = GC5_CLUS5+0.3380603013795 * (TOTORDQ130 - 0.90355203970839)/0.2952091712368;
22839  +GC5_CLUS5 = GC5_CLUS5+0.32450494073935 * (TOTORDQ140 - 0.9200868621064)/0.271162883384;
22840  +GC5_CLUS5 = GC5_CLUS5+0.33972226583648 * (TOTORDQ150 - 0.91378935939196)/0.2806791941105;
22841  +GC5_CLUS3 = GC5_CLUS3+0.29735414976665 * (TOTORDQ160 - 0.87538389948813)/0.33028822598524;
22842  +GC5_CLUS4 = GC5_CLUS4+0.39606761077979 * (TOTORDQ170 - 0.90532030401737)/0.29277655355917;
22843  +GC5_CLUS4 = GC5_CLUS4+0.43308794897106 * (TOTORDQ180 - 0.91667442221188)/0.27637799387312;
22844  +GC5_CLUS4 = GC5_CLUS4+0.37452554975409 * (TOTORDQ190 - 0.92560881029936)/0.26241051190929;
22845  +GC5_CLUS1 = GC5_CLUS1+0.11351555813635 * (TOTORDQ200 - 0.86108267411199)/0.34586560023062;
22846  +GC5_CLUS4 = GC5_CLUS4+0.37844592542621 * (TOTORDQ210 - 0.91844268652086)/0.27369333551993;
22847  +GC5_CLUS4 = GC5_CLUS4+0.36817602150559 * (TOTORDQ220 - 0.92213432604312)/0.26796424821009;
22848  +GC5_CLUS1 = GC5_CLUS1+0.14189323995962 * (UNITSLAP - 22.0808611006276)/19.5877886329162;
NOTE: %INCLUDE (level 1) ending.
22849   run;

NOTE: DATA STEP view saved on file EMWS2.VARCLUS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           14.37 seconds
      cpu time            0.14 seconds
      

22850   quit;
22851   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

22852   filename emflow "\\Client\C$\Users\sonik\Documents\6201 - MBAD - Monica\Project\Predictive Analytics1\Workspaces\EMWS2\VarClus\EMFLOWSCORE.sas";
22853   *------------------------------------------------------------*;
22854   * VarClus: Scoring VALIDATE data;
22855   *------------------------------------------------------------*;
22856   data EMWS2.VarClus_VALIDATE
22857   / view=EMWS2.VarClus_VALIDATE
22858   ;
22859   set EMWS2.Part_VALIDATE
22860   ;
22861   %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\Client\C$\Users\sonik\Documents\6201 - MBAD - Monica\Project\Predictive Analytics1\Workspaces\EMWS2\VarClus\EMFLOWSCORE.sas.
22862  +*** Begin Class Look-up, Standardization, Replacement ;
22863  +
22864  +*** Generate dummy variables for BOTHPAYM ;
22865  +label BOTHPAYM0 = 'BOTHPAYM=0' ;
22866  +label BOTHPAYM1 = 'BOTHPAYM=1' ;
22867  +if missing( BOTHPAYM ) then do;
22868  +   BOTHPAYM0 = .;
22869  +   BOTHPAYM1 = .;
22870  +end;
22871  +else do;
22872  +   length _dm4 $ 4; drop _dm4 ;
22873  +   _dm4 = put( BOTHPAYM , $4. );
22874  +   %DMNORMIP( _dm4 )
22875  +   if _dm4 = '0'  then do;
22876  +      BOTHPAYM0 = 1;
22877  +      BOTHPAYM1 = 0;
22878  +   end;
22879  +   else if _dm4 = '1'  then do;
22880  +      BOTHPAYM0 = 0;
22881  +      BOTHPAYM1 = 1;
22882  +   end;
22883  +   else do;
22884  +      delete;
22885  +   end;
22886  +end;
22887  +
22888  +*** Generate dummy variables for CCPAYM ;
22889  +label CCPAYM0 = 'CCPAYM=0' ;
22890  +label CCPAYM1 = 'CCPAYM=1' ;
22891  +if missing( CCPAYM ) then do;
22892  +   CCPAYM0 = .;
22893  +   CCPAYM1 = .;
22894  +end;
22895  +else do;
22896  +   length _dm4 $ 4; drop _dm4 ;
22897  +   _dm4 = put( CCPAYM , $4. );
22898  +   %DMNORMIP( _dm4 )
22899  +   if _dm4 = '0'  then do;
22900  +      CCPAYM0 = 1;
22901  +      CCPAYM1 = 0;
22902  +   end;
22903  +   else if _dm4 = '1'  then do;
22904  +      CCPAYM0 = 0;
22905  +      CCPAYM1 = 1;
22906  +   end;
22907  +   else do;
22908  +      delete;
22909  +   end;
22910  +end;
22911  +
22912  +*** Generate dummy variables for PCPAYM ;
22913  +label PCPAYM0 = 'PCPAYM=0' ;
22914  +label PCPAYM1 = 'PCPAYM=1' ;
22915  +if missing( PCPAYM ) then do;
22916  +   PCPAYM0 = .;
22917  +   PCPAYM1 = .;
22918  +end;
22919  +else do;
22920  +   length _dm4 $ 4; drop _dm4 ;
22921  +   _dm4 = put( PCPAYM , $4. );
22922  +   %DMNORMIP( _dm4 )
22923  +   if _dm4 = '0'  then do;
22924  +      PCPAYM0 = 1;
22925  +      PCPAYM1 = 0;
22926  +   end;
22927  +   else if _dm4 = '1'  then do;
22928  +      PCPAYM0 = 0;
22929  +      PCPAYM1 = 1;
22930  +   end;
22931  +   else do;
22932  +      delete;
22933  +   end;
22934  +end;
22935  +
22936  +*** Generate dummy variables for ACTBUY ;
22937  +label ACTBUY0 = 'ACTBUY=0' ;
22938  +label ACTBUY1 = 'ACTBUY=1' ;
22939  +label ACTBUY2 = 'ACTBUY=2' ;
22940  +label ACTBUY3 = 'ACTBUY=3' ;
22941  +label ACTBUY4 = 'ACTBUY=4' ;
22942  +label ACTBUY5 = 'ACTBUY=5' ;
22943  +label ACTBUY6 = 'ACTBUY=6' ;
22944  +label ACTBUY7 = 'ACTBUY=7' ;
22945  +label ACTBUY8 = 'ACTBUY=8' ;
22946  +label ACTBUY9 = 'ACTBUY=9' ;
22947  +label ACTBUY10 = 'ACTBUY=10' ;
22948  +*** encoding is sparse, initialize to zero;
22949  +ACTBUY0 = 0;
22950  +ACTBUY1 = 0;
22951  +ACTBUY2 = 0;
22952  +ACTBUY3 = 0;
22953  +ACTBUY4 = 0;
22954  +ACTBUY5 = 0;
22955  +ACTBUY6 = 0;
22956  +ACTBUY7 = 0;
22957  +ACTBUY8 = 0;
22958  +ACTBUY9 = 0;
22959  +ACTBUY10 = 0;
22960  +if missing( ACTBUY ) then do;
22961  +   ACTBUY0 = .;
22962  +   ACTBUY1 = .;
22963  +   ACTBUY2 = .;
22964  +   ACTBUY3 = .;
22965  +   ACTBUY4 = .;
22966  +   ACTBUY5 = .;
22967  +   ACTBUY6 = .;
22968  +   ACTBUY7 = .;
22969  +   ACTBUY8 = .;
22970  +   ACTBUY9 = .;
22971  +   ACTBUY10 = .;
22972  +end;
22973  +else do;
22974  +   length _dm12 $ 12; drop _dm12 ;
22975  +   _dm12 = put( ACTBUY , BEST12. );
22976  +   %DMNORMIP( _dm12 )
22977  +   _dm_find = 0; drop _dm_find;
22978  +   if _dm12 <= '4'  then do;
22979  +      if _dm12 <= '10'  then do;
22980  +         if _dm12 <= '1'  then do;
22981  +            if _dm12 = '0'  then do;
22982  +               ACTBUY0 = 1;
22983  +               _dm_find = 1;
22984  +            end;
22985  +            else do;
22986  +               if _dm12 = '1'  then do;
22987  +                  ACTBUY1 = 1;
22988  +                  _dm_find = 1;
22989  +               end;
22990  +            end;
22991  +         end;
22992  +         else do;
22993  +            if _dm12 = '10'  then do;
22994  +               ACTBUY10 = 1;
22995  +               _dm_find = 1;
22996  +            end;
22997  +         end;
22998  +      end;
22999  +      else do;
23000  +         if _dm12 <= '3'  then do;
23001  +            if _dm12 = '2'  then do;
23002  +               ACTBUY2 = 1;
23003  +               _dm_find = 1;
23004  +            end;
23005  +            else do;
23006  +               if _dm12 = '3'  then do;
23007  +                  ACTBUY3 = 1;
23008  +                  _dm_find = 1;
23009  +               end;
23010  +            end;
23011  +         end;
23012  +         else do;
23013  +            if _dm12 = '4'  then do;
23014  +               ACTBUY4 = 1;
23015  +               _dm_find = 1;
23016  +            end;
23017  +         end;
23018  +      end;
23019  +   end;
23020  +   else do;
23021  +      if _dm12 <= '7'  then do;
23022  +         if _dm12 <= '6'  then do;
23023  +            if _dm12 = '5'  then do;
23024  +               ACTBUY5 = 1;
23025  +               _dm_find = 1;
23026  +            end;
23027  +            else do;
23028  +               if _dm12 = '6'  then do;
23029  +                  ACTBUY6 = 1;
23030  +                  _dm_find = 1;
23031  +               end;
23032  +            end;
23033  +         end;
23034  +         else do;
23035  +            if _dm12 = '7'  then do;
23036  +               ACTBUY7 = 1;
23037  +               _dm_find = 1;
23038  +            end;
23039  +         end;
23040  +      end;
23041  +      else do;
23042  +         if _dm12 = '8'  then do;
23043  +            ACTBUY8 = 1;
23044  +            _dm_find = 1;
23045  +         end;
23046  +         else do;
23047  +            if _dm12 = '9'  then do;
23048  +               ACTBUY9 = 1;
23049  +               _dm_find = 1;
23050  +            end;
23051  +         end;
23052  +      end;
23053  +   end;
23054  +   if not _dm_find then do;
23055  +      delete;
23056  +   end;
23057  +end;
23058  +
23059  +*** Generate dummy variables for DEPT07 ;
23060  +label DEPT070 = 'DEPT07=0' ;
23061  +label DEPT073 = 'DEPT07=3' ;
23062  +label DEPT074 = 'DEPT07=4' ;
23063  +label DEPT075 = 'DEPT07=5' ;
23064  +label DEPT076 = 'DEPT07=6' ;
23065  +label DEPT077 = 'DEPT07=7' ;
23066  +label DEPT078 = 'DEPT07=8' ;
23067  +label DEPT079 = 'DEPT07=9' ;
23068  +label DEPT0711 = 'DEPT07=11' ;
23069  +*** encoding is sparse, initialize to zero;
23070  +DEPT070 = 0;
23071  +DEPT073 = 0;
23072  +DEPT074 = 0;
23073  +DEPT075 = 0;
23074  +DEPT076 = 0;
23075  +DEPT077 = 0;
23076  +DEPT078 = 0;
23077  +DEPT079 = 0;
23078  +DEPT0711 = 0;
23079  +if missing( DEPT07 ) then do;
23080  +   DEPT070 = .;
23081  +   DEPT073 = .;
23082  +   DEPT074 = .;
23083  +   DEPT075 = .;
23084  +   DEPT076 = .;
23085  +   DEPT077 = .;
23086  +   DEPT078 = .;
23087  +   DEPT079 = .;
23088  +   DEPT0711 = .;
23089  +end;
23090  +else do;
23091  +   length _dm12 $ 12; drop _dm12 ;
23092  +   _dm12 = put( DEPT07 , BEST12. );
23093  +   %DMNORMIP( _dm12 )
23094  +   if _dm12 = '0'  then do;
23095  +      DEPT070 = 1;
23096  +   end;
23097  +   else if _dm12 = '3'  then do;
23098  +      DEPT073 = 1;
23099  +   end;
23100  +   else if _dm12 = '5'  then do;
23101  +      DEPT075 = 1;
23102  +   end;
23103  +   else if _dm12 = '4'  then do;
23104  +      DEPT074 = 1;
23105  +   end;
23106  +   else if _dm12 = '7'  then do;
23107  +      DEPT077 = 1;
23108  +   end;
23109  +   else if _dm12 = '6'  then do;
23110  +      DEPT076 = 1;
23111  +   end;
23112  +   else if _dm12 = '11'  then do;
23113  +      DEPT0711 = 1;
23114  +   end;
23115  +   else if _dm12 = '8'  then do;
23116  +      DEPT078 = 1;
23117  +   end;
23118  +   else if _dm12 = '9'  then do;
23119  +      DEPT079 = 1;
23120  +   end;
23121  +   else do;
23122  +      delete;
23123  +   end;
23124  +end;
23125  +
23126  +*** Generate dummy variables for DEPT11 ;
23127  +label DEPT110 = 'DEPT11=0' ;
23128  +label DEPT113 = 'DEPT11=3' ;
23129  +label DEPT114 = 'DEPT11=4' ;
23130  +label DEPT115 = 'DEPT11=5' ;
23131  +label DEPT116 = 'DEPT11=6' ;
23132  +label DEPT117 = 'DEPT11=7' ;
23133  +label DEPT118 = 'DEPT11=8' ;
23134  +label DEPT119 = 'DEPT11=9' ;
23135  +label DEPT1110 = 'DEPT11=10' ;
23136  +label DEPT1111 = 'DEPT11=11' ;
23137  +label DEPT1113 = 'DEPT11=13' ;
23138  +label DEPT1116 = 'DEPT11=16' ;
23139  +label DEPT1118 = 'DEPT11=18' ;
23140  +label DEPT1129 = 'DEPT11=29' ;
23141  +*** encoding is sparse, initialize to zero;
23142  +DEPT110 = 0;
23143  +DEPT113 = 0;
23144  +DEPT114 = 0;
23145  +DEPT115 = 0;
23146  +DEPT116 = 0;
23147  +DEPT117 = 0;
23148  +DEPT118 = 0;
23149  +DEPT119 = 0;
23150  +DEPT1110 = 0;
23151  +DEPT1111 = 0;
23152  +DEPT1113 = 0;
23153  +DEPT1116 = 0;
23154  +DEPT1118 = 0;
23155  +DEPT1129 = 0;
23156  +if missing( DEPT11 ) then do;
23157  +   DEPT110 = .;
23158  +   DEPT113 = .;
23159  +   DEPT114 = .;
23160  +   DEPT115 = .;
23161  +   DEPT116 = .;
23162  +   DEPT117 = .;
23163  +   DEPT118 = .;
23164  +   DEPT119 = .;
23165  +   DEPT1110 = .;
23166  +   DEPT1111 = .;
23167  +   DEPT1113 = .;
23168  +   DEPT1116 = .;
23169  +   DEPT1118 = .;
23170  +   DEPT1129 = .;
23171  +end;
23172  +else do;
23173  +   length _dm12 $ 12; drop _dm12 ;
23174  +   _dm12 = put( DEPT11 , BEST12. );
23175  +   %DMNORMIP( _dm12 )
23176  +   if _dm12 = '0'  then do;
23177  +      DEPT110 = 1;
23178  +   end;
23179  +   else if _dm12 = '3'  then do;
23180  +      DEPT113 = 1;
23181  +   end;
23182  +   else if _dm12 = '5'  then do;
23183  +      DEPT115 = 1;
23184  +   end;
23185  +   else if _dm12 = '4'  then do;
23186  +      DEPT114 = 1;
23187  +   end;
23188  +   else if _dm12 = '7'  then do;
23189  +      DEPT117 = 1;
23190  +   end;
23191  +   else if _dm12 = '6'  then do;
23192  +      DEPT116 = 1;
23193  +   end;
23194  +   else if _dm12 = '8'  then do;
23195  +      DEPT118 = 1;
23196  +   end;
23197  +   else if _dm12 = '9'  then do;
23198  +      DEPT119 = 1;
23199  +   end;
23200  +   else if _dm12 = '11'  then do;
23201  +      DEPT1111 = 1;
23202  +   end;
23203  +   else if _dm12 = '13'  then do;
23204  +      DEPT1113 = 1;
23205  +   end;
23206  +   else if _dm12 = '10'  then do;
23207  +      DEPT1110 = 1;
23208  +   end;
23209  +   else if _dm12 = '16'  then do;
23210  +      DEPT1116 = 1;
23211  +   end;
23212  +   else if _dm12 = '18'  then do;
23213  +      DEPT1118 = 1;
23214  +   end;
23215  +   else if _dm12 = '29'  then do;
23216  +      DEPT1129 = 1;
23217  +   end;
23218  +   else do;
23219  +      delete;
23220  +   end;
23221  +end;
23222  +
23223  +*** Generate dummy variables for DEPT12 ;
23224  +label DEPT120 = 'DEPT12=0' ;
23225  +label DEPT123 = 'DEPT12=3' ;
23226  +label DEPT124 = 'DEPT12=4' ;
23227  +label DEPT125 = 'DEPT12=5' ;
23228  +label DEPT126 = 'DEPT12=6' ;
23229  +label DEPT127 = 'DEPT12=7' ;
23230  +label DEPT128 = 'DEPT12=8' ;
23231  +label DEPT129 = 'DEPT12=9' ;
23232  +label DEPT1210 = 'DEPT12=10' ;
23233  +label DEPT1211 = 'DEPT12=11' ;
23234  +label DEPT1212 = 'DEPT12=12' ;
23235  +label DEPT1213 = 'DEPT12=13' ;
23236  +label DEPT1215 = 'DEPT12=15' ;
23237  +label DEPT1216 = 'DEPT12=16' ;
23238  +*** encoding is sparse, initialize to zero;
23239  +DEPT120 = 0;
23240  +DEPT123 = 0;
23241  +DEPT124 = 0;
23242  +DEPT125 = 0;
23243  +DEPT126 = 0;
23244  +DEPT127 = 0;
23245  +DEPT128 = 0;
23246  +DEPT129 = 0;
23247  +DEPT1210 = 0;
23248  +DEPT1211 = 0;
23249  +DEPT1212 = 0;
23250  +DEPT1213 = 0;
23251  +DEPT1215 = 0;
23252  +DEPT1216 = 0;
23253  +if missing( DEPT12 ) then do;
23254  +   DEPT120 = .;
23255  +   DEPT123 = .;
23256  +   DEPT124 = .;
23257  +   DEPT125 = .;
23258  +   DEPT126 = .;
23259  +   DEPT127 = .;
23260  +   DEPT128 = .;
23261  +   DEPT129 = .;
23262  +   DEPT1210 = .;
23263  +   DEPT1211 = .;
23264  +   DEPT1212 = .;
23265  +   DEPT1213 = .;
23266  +   DEPT1215 = .;
23267  +   DEPT1216 = .;
23268  +end;
23269  +else do;
23270  +   length _dm12 $ 12; drop _dm12 ;
23271  +   _dm12 = put( DEPT12 , BEST12. );
23272  +   %DMNORMIP( _dm12 )
23273  +   if _dm12 = '0'  then do;
23274  +      DEPT120 = 1;
23275  +   end;
23276  +   else if _dm12 = '3'  then do;
23277  +      DEPT123 = 1;
23278  +   end;
23279  +   else if _dm12 = '5'  then do;
23280  +      DEPT125 = 1;
23281  +   end;
23282  +   else if _dm12 = '4'  then do;
23283  +      DEPT124 = 1;
23284  +   end;
23285  +   else if _dm12 = '7'  then do;
23286  +      DEPT127 = 1;
23287  +   end;
23288  +   else if _dm12 = '6'  then do;
23289  +      DEPT126 = 1;
23290  +   end;
23291  +   else if _dm12 = '9'  then do;
23292  +      DEPT129 = 1;
23293  +   end;
23294  +   else if _dm12 = '8'  then do;
23295  +      DEPT128 = 1;
23296  +   end;
23297  +   else if _dm12 = '11'  then do;
23298  +      DEPT1211 = 1;
23299  +   end;
23300  +   else if _dm12 = '13'  then do;
23301  +      DEPT1213 = 1;
23302  +   end;
23303  +   else if _dm12 = '10'  then do;
23304  +      DEPT1210 = 1;
23305  +   end;
23306  +   else if _dm12 = '15'  then do;
23307  +      DEPT1215 = 1;
23308  +   end;
23309  +   else if _dm12 = '12'  then do;
23310  +      DEPT1212 = 1;
23311  +   end;
23312  +   else if _dm12 = '16'  then do;
23313  +      DEPT1216 = 1;
23314  +   end;
23315  +   else do;
23316  +      delete;
23317  +   end;
23318  +end;
23319  +
23320  +*** Generate dummy variables for DEPT17 ;
23321  +label DEPT170 = 'DEPT17=0' ;
23322  +label DEPT173 = 'DEPT17=3' ;
23323  +label DEPT174 = 'DEPT17=4' ;
23324  +label DEPT175 = 'DEPT17=5' ;
23325  +label DEPT176 = 'DEPT17=6' ;
23326  +label DEPT177 = 'DEPT17=7' ;
23327  +label DEPT178 = 'DEPT17=8' ;
23328  +label DEPT179 = 'DEPT17=9' ;
23329  +label DEPT1710 = 'DEPT17=10' ;
23330  +label DEPT1711 = 'DEPT17=11' ;
23331  +label DEPT1712 = 'DEPT17=12' ;
23332  +label DEPT1713 = 'DEPT17=13' ;
23333  +label DEPT1714 = 'DEPT17=14' ;
23334  +label DEPT1715 = 'DEPT17=15' ;
23335  +label DEPT1716 = 'DEPT17=16' ;
23336  +label DEPT1717 = 'DEPT17=17' ;
23337  +label DEPT1723 = 'DEPT17=23' ;
23338  +label DEPT1734 = 'DEPT17=34' ;
23339  +*** encoding is sparse, initialize to zero;
23340  +DEPT170 = 0;
23341  +DEPT173 = 0;
23342  +DEPT174 = 0;
23343  +DEPT175 = 0;
23344  +DEPT176 = 0;
23345  +DEPT177 = 0;
23346  +DEPT178 = 0;
23347  +DEPT179 = 0;
23348  +DEPT1710 = 0;
23349  +DEPT1711 = 0;
23350  +DEPT1712 = 0;
23351  +DEPT1713 = 0;
23352  +DEPT1714 = 0;
23353  +DEPT1715 = 0;
23354  +DEPT1716 = 0;
23355  +DEPT1717 = 0;
23356  +DEPT1723 = 0;
23357  +DEPT1734 = 0;
23358  +if missing( DEPT17 ) then do;
23359  +   DEPT170 = .;
23360  +   DEPT173 = .;
23361  +   DEPT174 = .;
23362  +   DEPT175 = .;
23363  +   DEPT176 = .;
23364  +   DEPT177 = .;
23365  +   DEPT178 = .;
23366  +   DEPT179 = .;
23367  +   DEPT1710 = .;
23368  +   DEPT1711 = .;
23369  +   DEPT1712 = .;
23370  +   DEPT1713 = .;
23371  +   DEPT1714 = .;
23372  +   DEPT1715 = .;
23373  +   DEPT1716 = .;
23374  +   DEPT1717 = .;
23375  +   DEPT1723 = .;
23376  +   DEPT1734 = .;
23377  +end;
23378  +else do;
23379  +   length _dm12 $ 12; drop _dm12 ;
23380  +   _dm12 = put( DEPT17 , BEST12. );
23381  +   %DMNORMIP( _dm12 )
23382  +   if _dm12 = '0'  then do;
23383  +      DEPT170 = 1;
23384  +   end;
23385  +   else if _dm12 = '3'  then do;
23386  +      DEPT173 = 1;
23387  +   end;
23388  +   else if _dm12 = '5'  then do;
23389  +      DEPT175 = 1;
23390  +   end;
23391  +   else if _dm12 = '4'  then do;
23392  +      DEPT174 = 1;
23393  +   end;
23394  +   else if _dm12 = '6'  then do;
23395  +      DEPT176 = 1;
23396  +   end;
23397  +   else if _dm12 = '7'  then do;
23398  +      DEPT177 = 1;
23399  +   end;
23400  +   else if _dm12 = '8'  then do;
23401  +      DEPT178 = 1;
23402  +   end;
23403  +   else if _dm12 = '9'  then do;
23404  +      DEPT179 = 1;
23405  +   end;
23406  +   else if _dm12 = '10'  then do;
23407  +      DEPT1710 = 1;
23408  +   end;
23409  +   else if _dm12 = '12'  then do;
23410  +      DEPT1712 = 1;
23411  +   end;
23412  +   else if _dm12 = '11'  then do;
23413  +      DEPT1711 = 1;
23414  +   end;
23415  +   else if _dm12 = '14'  then do;
23416  +      DEPT1714 = 1;
23417  +   end;
23418  +   else if _dm12 = '17'  then do;
23419  +      DEPT1717 = 1;
23420  +   end;
23421  +   else if _dm12 = '13'  then do;
23422  +      DEPT1713 = 1;
23423  +   end;
23424  +   else if _dm12 = '15'  then do;
23425  +      DEPT1715 = 1;
23426  +   end;
23427  +   else if _dm12 = '16'  then do;
23428  +      DEPT1716 = 1;
23429  +   end;
23430  +   else if _dm12 = '23'  then do;
23431  +      DEPT1723 = 1;
23432  +   end;
23433  +   else if _dm12 = '34'  then do;
23434  +      DEPT1734 = 1;
23435  +   end;
23436  +   else do;
23437  +      delete;
23438  +   end;
23439  +end;
23440  +
23441  +*** Generate dummy variables for DEPT18 ;
23442  +label DEPT180 = 'DEPT18=0' ;
23443  +label DEPT183 = 'DEPT18=3' ;
23444  +label DEPT184 = 'DEPT18=4' ;
23445  +label DEPT185 = 'DEPT18=5' ;
23446  +label DEPT186 = 'DEPT18=6' ;
23447  +label DEPT187 = 'DEPT18=7' ;
23448  +label DEPT188 = 'DEPT18=8' ;
23449  +label DEPT189 = 'DEPT18=9' ;
23450  +label DEPT1810 = 'DEPT18=10' ;
23451  +label DEPT1811 = 'DEPT18=11' ;
23452  +label DEPT1812 = 'DEPT18=12' ;
23453  +label DEPT1813 = 'DEPT18=13' ;
23454  +*** encoding is sparse, initialize to zero;
23455  +DEPT180 = 0;
23456  +DEPT183 = 0;
23457  +DEPT184 = 0;
23458  +DEPT185 = 0;
23459  +DEPT186 = 0;
23460  +DEPT187 = 0;
23461  +DEPT188 = 0;
23462  +DEPT189 = 0;
23463  +DEPT1810 = 0;
23464  +DEPT1811 = 0;
23465  +DEPT1812 = 0;
23466  +DEPT1813 = 0;
23467  +if missing( DEPT18 ) then do;
23468  +   DEPT180 = .;
23469  +   DEPT183 = .;
23470  +   DEPT184 = .;
23471  +   DEPT185 = .;
23472  +   DEPT186 = .;
23473  +   DEPT187 = .;
23474  +   DEPT188 = .;
23475  +   DEPT189 = .;
23476  +   DEPT1810 = .;
23477  +   DEPT1811 = .;
23478  +   DEPT1812 = .;
23479  +   DEPT1813 = .;
23480  +end;
23481  +else do;
23482  +   length _dm12 $ 12; drop _dm12 ;
23483  +   _dm12 = put( DEPT18 , BEST12. );
23484  +   %DMNORMIP( _dm12 )
23485  +   if _dm12 = '0'  then do;
23486  +      DEPT180 = 1;
23487  +   end;
23488  +   else if _dm12 = '3'  then do;
23489  +      DEPT183 = 1;
23490  +   end;
23491  +   else if _dm12 = '4'  then do;
23492  +      DEPT184 = 1;
23493  +   end;
23494  +   else if _dm12 = '5'  then do;
23495  +      DEPT185 = 1;
23496  +   end;
23497  +   else if _dm12 = '7'  then do;
23498  +      DEPT187 = 1;
23499  +   end;
23500  +   else if _dm12 = '6'  then do;
23501  +      DEPT186 = 1;
23502  +   end;
23503  +   else if _dm12 = '10'  then do;
23504  +      DEPT1810 = 1;
23505  +   end;
23506  +   else if _dm12 = '11'  then do;
23507  +      DEPT1811 = 1;
23508  +   end;
23509  +   else if _dm12 = '8'  then do;
23510  +      DEPT188 = 1;
23511  +   end;
23512  +   else if _dm12 = '9'  then do;
23513  +      DEPT189 = 1;
23514  +   end;
23515  +   else if _dm12 = '12'  then do;
23516  +      DEPT1812 = 1;
23517  +   end;
23518  +   else if _dm12 = '13'  then do;
23519  +      DEPT1813 = 1;
23520  +   end;
23521  +   else do;
23522  +      delete;
23523  +   end;
23524  +end;
23525  +
23526  +*** Generate dummy variables for DEPT19 ;
23527  +label DEPT190 = 'DEPT19=0' ;
23528  +label DEPT193 = 'DEPT19=3' ;
23529  +label DEPT194 = 'DEPT19=4' ;
23530  +label DEPT195 = 'DEPT19=5' ;
23531  +label DEPT196 = 'DEPT19=6' ;
23532  +label DEPT197 = 'DEPT19=7' ;
23533  +label DEPT198 = 'DEPT19=8' ;
23534  +label DEPT199 = 'DEPT19=9' ;
23535  +label DEPT1910 = 'DEPT19=10' ;
23536  +label DEPT1911 = 'DEPT19=11' ;
23537  +label DEPT1912 = 'DEPT19=12' ;
23538  +label DEPT1913 = 'DEPT19=13' ;
23539  +label DEPT1914 = 'DEPT19=14' ;
23540  +label DEPT1915 = 'DEPT19=15' ;
23541  +label DEPT1918 = 'DEPT19=18' ;
23542  +label DEPT1920 = 'DEPT19=20' ;
23543  +*** encoding is sparse, initialize to zero;
23544  +DEPT190 = 0;
23545  +DEPT193 = 0;
23546  +DEPT194 = 0;
23547  +DEPT195 = 0;
23548  +DEPT196 = 0;
23549  +DEPT197 = 0;
23550  +DEPT198 = 0;
23551  +DEPT199 = 0;
23552  +DEPT1910 = 0;
23553  +DEPT1911 = 0;
23554  +DEPT1912 = 0;
23555  +DEPT1913 = 0;
23556  +DEPT1914 = 0;
23557  +DEPT1915 = 0;
23558  +DEPT1918 = 0;
23559  +DEPT1920 = 0;
23560  +if missing( DEPT19 ) then do;
23561  +   DEPT190 = .;
23562  +   DEPT193 = .;
23563  +   DEPT194 = .;
23564  +   DEPT195 = .;
23565  +   DEPT196 = .;
23566  +   DEPT197 = .;
23567  +   DEPT198 = .;
23568  +   DEPT199 = .;
23569  +   DEPT1910 = .;
23570  +   DEPT1911 = .;
23571  +   DEPT1912 = .;
23572  +   DEPT1913 = .;
23573  +   DEPT1914 = .;
23574  +   DEPT1915 = .;
23575  +   DEPT1918 = .;
23576  +   DEPT1920 = .;
23577  +end;
23578  +else do;
23579  +   length _dm12 $ 12; drop _dm12 ;
23580  +   _dm12 = put( DEPT19 , BEST12. );
23581  +   %DMNORMIP( _dm12 )
23582  +   if _dm12 = '0'  then do;
23583  +      DEPT190 = 1;
23584  +   end;
23585  +   else if _dm12 = '3'  then do;
23586  +      DEPT193 = 1;
23587  +   end;
23588  +   else if _dm12 = '4'  then do;
23589  +      DEPT194 = 1;
23590  +   end;
23591  +   else if _dm12 = '5'  then do;
23592  +      DEPT195 = 1;
23593  +   end;
23594  +   else if _dm12 = '6'  then do;
23595  +      DEPT196 = 1;
23596  +   end;
23597  +   else if _dm12 = '7'  then do;
23598  +      DEPT197 = 1;
23599  +   end;
23600  +   else if _dm12 = '8'  then do;
23601  +      DEPT198 = 1;
23602  +   end;
23603  +   else if _dm12 = '9'  then do;
23604  +      DEPT199 = 1;
23605  +   end;
23606  +   else if _dm12 = '10'  then do;
23607  +      DEPT1910 = 1;
23608  +   end;
23609  +   else if _dm12 = '11'  then do;
23610  +      DEPT1911 = 1;
23611  +   end;
23612  +   else if _dm12 = '12'  then do;
23613  +      DEPT1912 = 1;
23614  +   end;
23615  +   else if _dm12 = '13'  then do;
23616  +      DEPT1913 = 1;
23617  +   end;
23618  +   else if _dm12 = '14'  then do;
23619  +      DEPT1914 = 1;
23620  +   end;
23621  +   else if _dm12 = '15'  then do;
23622  +      DEPT1915 = 1;
23623  +   end;
23624  +   else if _dm12 = '18'  then do;
23625  +      DEPT1918 = 1;
23626  +   end;
23627  +   else if _dm12 = '20'  then do;
23628  +      DEPT1920 = 1;
23629  +   end;
23630  +   else do;
23631  +      delete;
23632  +   end;
23633  +end;
23634  +
23635  +*** Generate dummy variables for DEPT20 ;
23636  +label DEPT200 = 'DEPT20=0' ;
23637  +label DEPT203 = 'DEPT20=3' ;
23638  +label DEPT204 = 'DEPT20=4' ;
23639  +label DEPT205 = 'DEPT20=5' ;
23640  +label DEPT206 = 'DEPT20=6' ;
23641  +label DEPT207 = 'DEPT20=7' ;
23642  +label DEPT208 = 'DEPT20=8' ;
23643  +*** encoding is sparse, initialize to zero;
23644  +DEPT200 = 0;
23645  +DEPT203 = 0;
23646  +DEPT204 = 0;
23647  +DEPT205 = 0;
23648  +DEPT206 = 0;
23649  +DEPT207 = 0;
23650  +DEPT208 = 0;
23651  +if missing( DEPT20 ) then do;
23652  +   DEPT200 = .;
23653  +   DEPT203 = .;
23654  +   DEPT204 = .;
23655  +   DEPT205 = .;
23656  +   DEPT206 = .;
23657  +   DEPT207 = .;
23658  +   DEPT208 = .;
23659  +end;
23660  +else do;
23661  +   length _dm12 $ 12; drop _dm12 ;
23662  +   _dm12 = put( DEPT20 , BEST12. );
23663  +   %DMNORMIP( _dm12 )
23664  +   if _dm12 = '0'  then do;
23665  +      DEPT200 = 1;
23666  +   end;
23667  +   else if _dm12 = '3'  then do;
23668  +      DEPT203 = 1;
23669  +   end;
23670  +   else if _dm12 = '5'  then do;
23671  +      DEPT205 = 1;
23672  +   end;
23673  +   else if _dm12 = '4'  then do;
23674  +      DEPT204 = 1;
23675  +   end;
23676  +   else if _dm12 = '6'  then do;
23677  +      DEPT206 = 1;
23678  +   end;
23679  +   else if _dm12 = '7'  then do;
23680  +      DEPT207 = 1;
23681  +   end;
23682  +   else if _dm12 = '8'  then do;
23683  +      DEPT208 = 1;
23684  +   end;
23685  +   else do;
23686  +      delete;
23687  +   end;
23688  +end;
23689  +
23690  +*** Generate dummy variables for DEPT21 ;
23691  +label DEPT210 = 'DEPT21=0' ;
23692  +label DEPT213 = 'DEPT21=3' ;
23693  +label DEPT214 = 'DEPT21=4' ;
23694  +label DEPT215 = 'DEPT21=5' ;
23695  +label DEPT216 = 'DEPT21=6' ;
23696  +label DEPT219 = 'DEPT21=9' ;
23697  +*** encoding is sparse, initialize to zero;
23698  +DEPT210 = 0;
23699  +DEPT213 = 0;
23700  +DEPT214 = 0;
23701  +DEPT215 = 0;
23702  +DEPT216 = 0;
23703  +DEPT219 = 0;
23704  +if missing( DEPT21 ) then do;
23705  +   DEPT210 = .;
23706  +   DEPT213 = .;
23707  +   DEPT214 = .;
23708  +   DEPT215 = .;
23709  +   DEPT216 = .;
23710  +   DEPT219 = .;
23711  +end;
23712  +else do;
23713  +   length _dm12 $ 12; drop _dm12 ;
23714  +   _dm12 = put( DEPT21 , BEST12. );
23715  +   %DMNORMIP( _dm12 )
23716  +   if _dm12 = '0'  then do;
23717  +      DEPT210 = 1;
23718  +   end;
23719  +   else if _dm12 = '3'  then do;
23720  +      DEPT213 = 1;
23721  +   end;
23722  +   else if _dm12 = '5'  then do;
23723  +      DEPT215 = 1;
23724  +   end;
23725  +   else if _dm12 = '4'  then do;
23726  +      DEPT214 = 1;
23727  +   end;
23728  +   else if _dm12 = '6'  then do;
23729  +      DEPT216 = 1;
23730  +   end;
23731  +   else if _dm12 = '9'  then do;
23732  +      DEPT219 = 1;
23733  +   end;
23734  +   else do;
23735  +      delete;
23736  +   end;
23737  +end;
23738  +
23739  +*** Generate dummy variables for DEPT26 ;
23740  +label DEPT260 = 'DEPT26=0' ;
23741  +label DEPT263 = 'DEPT26=3' ;
23742  +label DEPT264 = 'DEPT26=4' ;
23743  +label DEPT265 = 'DEPT26=5' ;
23744  +label DEPT266 = 'DEPT26=6' ;
23745  +label DEPT267 = 'DEPT26=7' ;
23746  +label DEPT268 = 'DEPT26=8' ;
23747  +label DEPT269 = 'DEPT26=9' ;
23748  +label DEPT2610 = 'DEPT26=10' ;
23749  +label DEPT2611 = 'DEPT26=11' ;
23750  +label DEPT2614 = 'DEPT26=14' ;
23751  +label DEPT2615 = 'DEPT26=15' ;
23752  +label DEPT2622 = 'DEPT26=22' ;
23753  +label DEPT2625 = 'DEPT26=25' ;
23754  +label DEPT2655 = 'DEPT26=55' ;
23755  +*** encoding is sparse, initialize to zero;
23756  +DEPT260 = 0;
23757  +DEPT263 = 0;
23758  +DEPT264 = 0;
23759  +DEPT265 = 0;
23760  +DEPT266 = 0;
23761  +DEPT267 = 0;
23762  +DEPT268 = 0;
23763  +DEPT269 = 0;
23764  +DEPT2610 = 0;
23765  +DEPT2611 = 0;
23766  +DEPT2614 = 0;
23767  +DEPT2615 = 0;
23768  +DEPT2622 = 0;
23769  +DEPT2625 = 0;
23770  +DEPT2655 = 0;
23771  +if missing( DEPT26 ) then do;
23772  +   DEPT260 = .;
23773  +   DEPT263 = .;
23774  +   DEPT264 = .;
23775  +   DEPT265 = .;
23776  +   DEPT266 = .;
23777  +   DEPT267 = .;
23778  +   DEPT268 = .;
23779  +   DEPT269 = .;
23780  +   DEPT2610 = .;
23781  +   DEPT2611 = .;
23782  +   DEPT2614 = .;
23783  +   DEPT2615 = .;
23784  +   DEPT2622 = .;
23785  +   DEPT2625 = .;
23786  +   DEPT2655 = .;
23787  +end;
23788  +else do;
23789  +   length _dm12 $ 12; drop _dm12 ;
23790  +   _dm12 = put( DEPT26 , BEST12. );
23791  +   %DMNORMIP( _dm12 )
23792  +   if _dm12 = '0'  then do;
23793  +      DEPT260 = 1;
23794  +   end;
23795  +   else if _dm12 = '3'  then do;
23796  +      DEPT263 = 1;
23797  +   end;
23798  +   else if _dm12 = '4'  then do;
23799  +      DEPT264 = 1;
23800  +   end;
23801  +   else if _dm12 = '5'  then do;
23802  +      DEPT265 = 1;
23803  +   end;
23804  +   else if _dm12 = '6'  then do;
23805  +      DEPT266 = 1;
23806  +   end;
23807  +   else if _dm12 = '7'  then do;
23808  +      DEPT267 = 1;
23809  +   end;
23810  +   else if _dm12 = '8'  then do;
23811  +      DEPT268 = 1;
23812  +   end;
23813  +   else if _dm12 = '9'  then do;
23814  +      DEPT269 = 1;
23815  +   end;
23816  +   else if _dm12 = '11'  then do;
23817  +      DEPT2611 = 1;
23818  +   end;
23819  +   else if _dm12 = '10'  then do;
23820  +      DEPT2610 = 1;
23821  +   end;
23822  +   else if _dm12 = '14'  then do;
23823  +      DEPT2614 = 1;
23824  +   end;
23825  +   else if _dm12 = '15'  then do;
23826  +      DEPT2615 = 1;
23827  +   end;
23828  +   else if _dm12 = '22'  then do;
23829  +      DEPT2622 = 1;
23830  +   end;
23831  +   else if _dm12 = '25'  then do;
23832  +      DEPT2625 = 1;
23833  +   end;
23834  +   else if _dm12 = '55'  then do;
23835  +      DEPT2655 = 1;
23836  +   end;
23837  +   else do;
23838  +      delete;
23839  +   end;
23840  +end;
23841  +
23842  +*** Generate dummy variables for METHPAYM ;
23843  +label METHPAYMCC = 'METHPAYM=CC' ;
23844  +label METHPAYMCK = 'METHPAYM=CK' ;
23845  +label METHPAYMDK = 'METHPAYM=DK' ;
23846  +label METHPAYMXBOT = 'METHPAYM=XBOT' ;
23847  +*** encoding is sparse, initialize to zero;
23848  +METHPAYMCC = 0;
23849  +METHPAYMCK = 0;
23850  +METHPAYMDK = 0;
23851  +METHPAYMXBOT = 0;
23852  +if missing( METHPAYM ) then do;
23853  +   METHPAYMCC = .;
23854  +   METHPAYMCK = .;
23855  +   METHPAYMDK = .;
23856  +   METHPAYMXBOT = .;
23857  +end;
23858  +else do;
23859  +   length _dm4 $ 4; drop _dm4 ;
23860  +   _dm4 = put( METHPAYM , $4. );
23861  +   %DMNORMIP( _dm4 )
23862  +   if _dm4 = 'CC'  then do;
23863  +      METHPAYMCC = 1;
23864  +   end;
23865  +   else if _dm4 = 'CK'  then do;
23866  +      METHPAYMCK = 1;
23867  +   end;
23868  +   else if _dm4 = 'XBOT'  then do;
23869  +      METHPAYMXBOT = 1;
23870  +   end;
23871  +   else if _dm4 = 'DK'  then do;
23872  +      METHPAYMDK = 1;
23873  +   end;
23874  +   else do;
23875  +      delete;
23876  +   end;
23877  +end;
23878  +
23879  +*** Generate dummy variables for TOTORDQ01 ;
23880  +label TOTORDQ010 = 'TOTORDQ01=0' ;
23881  +label TOTORDQ011 = 'TOTORDQ01=1' ;
23882  +label TOTORDQ012 = 'TOTORDQ01=2' ;
23883  +label TOTORDQ013 = 'TOTORDQ01=3' ;
23884  +label TOTORDQ014 = 'TOTORDQ01=4' ;
23885  +label TOTORDQ015 = 'TOTORDQ01=5' ;
23886  +label TOTORDQ016 = 'TOTORDQ01=6' ;
23887  +*** encoding is sparse, initialize to zero;
23888  +TOTORDQ010 = 0;
23889  +TOTORDQ011 = 0;
23890  +TOTORDQ012 = 0;
23891  +TOTORDQ013 = 0;
23892  +TOTORDQ014 = 0;
23893  +TOTORDQ015 = 0;
23894  +TOTORDQ016 = 0;
23895  +if missing( TOTORDQ01 ) then do;
23896  +   TOTORDQ010 = .;
23897  +   TOTORDQ011 = .;
23898  +   TOTORDQ012 = .;
23899  +   TOTORDQ013 = .;
23900  +   TOTORDQ014 = .;
23901  +   TOTORDQ015 = .;
23902  +   TOTORDQ016 = .;
23903  +end;
23904  +else do;
23905  +   length _dm12 $ 12; drop _dm12 ;
23906  +   _dm12 = put( TOTORDQ01 , BEST12. );
23907  +   %DMNORMIP( _dm12 )
23908  +   if _dm12 = '0'  then do;
23909  +      TOTORDQ010 = 1;
23910  +   end;
23911  +   else if _dm12 = '1'  then do;
23912  +      TOTORDQ011 = 1;
23913  +   end;
23914  +   else if _dm12 = '2'  then do;
23915  +      TOTORDQ012 = 1;
23916  +   end;
23917  +   else if _dm12 = '3'  then do;
23918  +      TOTORDQ013 = 1;
23919  +   end;
23920  +   else if _dm12 = '4'  then do;
23921  +      TOTORDQ014 = 1;
23922  +   end;
23923  +   else if _dm12 = '5'  then do;
23924  +      TOTORDQ015 = 1;
23925  +   end;
23926  +   else if _dm12 = '6'  then do;
23927  +      TOTORDQ016 = 1;
23928  +   end;
23929  +   else do;
23930  +      delete;
23931  +   end;
23932  +end;
23933  +
23934  +*** Generate dummy variables for TOTORDQ02 ;
23935  +label TOTORDQ020 = 'TOTORDQ02=0' ;
23936  +label TOTORDQ021 = 'TOTORDQ02=1' ;
23937  +label TOTORDQ022 = 'TOTORDQ02=2' ;
23938  +label TOTORDQ023 = 'TOTORDQ02=3' ;
23939  +label TOTORDQ024 = 'TOTORDQ02=4' ;
23940  +label TOTORDQ025 = 'TOTORDQ02=5' ;
23941  +label TOTORDQ028 = 'TOTORDQ02=8' ;
23942  +*** encoding is sparse, initialize to zero;
23943  +TOTORDQ020 = 0;
23944  +TOTORDQ021 = 0;
23945  +TOTORDQ022 = 0;
23946  +TOTORDQ023 = 0;
23947  +TOTORDQ024 = 0;
23948  +TOTORDQ025 = 0;
23949  +TOTORDQ028 = 0;
23950  +if missing( TOTORDQ02 ) then do;
23951  +   TOTORDQ020 = .;
23952  +   TOTORDQ021 = .;
23953  +   TOTORDQ022 = .;
23954  +   TOTORDQ023 = .;
23955  +   TOTORDQ024 = .;
23956  +   TOTORDQ025 = .;
23957  +   TOTORDQ028 = .;
23958  +end;
23959  +else do;
23960  +   length _dm12 $ 12; drop _dm12 ;
23961  +   _dm12 = put( TOTORDQ02 , BEST12. );
23962  +   %DMNORMIP( _dm12 )
23963  +   if _dm12 = '0'  then do;
23964  +      TOTORDQ020 = 1;
23965  +   end;
23966  +   else if _dm12 = '1'  then do;
23967  +      TOTORDQ021 = 1;
23968  +   end;
23969  +   else if _dm12 = '2'  then do;
23970  +      TOTORDQ022 = 1;
23971  +   end;
23972  +   else if _dm12 = '3'  then do;
23973  +      TOTORDQ023 = 1;
23974  +   end;
23975  +   else if _dm12 = '4'  then do;
23976  +      TOTORDQ024 = 1;
23977  +   end;
23978  +   else if _dm12 = '5'  then do;
23979  +      TOTORDQ025 = 1;
23980  +   end;
23981  +   else if _dm12 = '8'  then do;
23982  +      TOTORDQ028 = 1;
23983  +   end;
23984  +   else do;
23985  +      delete;
23986  +   end;
23987  +end;
23988  +
23989  +*** Generate dummy variables for TOTORDQ03 ;
23990  +label TOTORDQ030 = 'TOTORDQ03=0' ;
23991  +label TOTORDQ031 = 'TOTORDQ03=1' ;
23992  +label TOTORDQ032 = 'TOTORDQ03=2' ;
23993  +label TOTORDQ033 = 'TOTORDQ03=3' ;
23994  +label TOTORDQ034 = 'TOTORDQ03=4' ;
23995  +*** encoding is sparse, initialize to zero;
23996  +TOTORDQ030 = 0;
23997  +TOTORDQ031 = 0;
23998  +TOTORDQ032 = 0;
23999  +TOTORDQ033 = 0;
24000  +TOTORDQ034 = 0;
24001  +if missing( TOTORDQ03 ) then do;
24002  +   TOTORDQ030 = .;
24003  +   TOTORDQ031 = .;
24004  +   TOTORDQ032 = .;
24005  +   TOTORDQ033 = .;
24006  +   TOTORDQ034 = .;
24007  +end;
24008  +else do;
24009  +   length _dm12 $ 12; drop _dm12 ;
24010  +   _dm12 = put( TOTORDQ03 , BEST12. );
24011  +   %DMNORMIP( _dm12 )
24012  +   if _dm12 = '0'  then do;
24013  +      TOTORDQ030 = 1;
24014  +   end;
24015  +   else if _dm12 = '1'  then do;
24016  +      TOTORDQ031 = 1;
24017  +   end;
24018  +   else if _dm12 = '2'  then do;
24019  +      TOTORDQ032 = 1;
24020  +   end;
24021  +   else if _dm12 = '3'  then do;
24022  +      TOTORDQ033 = 1;
24023  +   end;
24024  +   else if _dm12 = '4'  then do;
24025  +      TOTORDQ034 = 1;
24026  +   end;
24027  +   else do;
24028  +      delete;
24029  +   end;
24030  +end;
24031  +
24032  +*** Generate dummy variables for TOTORDQ04 ;
24033  +label TOTORDQ040 = 'TOTORDQ04=0' ;
24034  +label TOTORDQ041 = 'TOTORDQ04=1' ;
24035  +label TOTORDQ042 = 'TOTORDQ04=2' ;
24036  +label TOTORDQ043 = 'TOTORDQ04=3' ;
24037  +label TOTORDQ044 = 'TOTORDQ04=4' ;
24038  +label TOTORDQ045 = 'TOTORDQ04=5' ;
24039  +label TOTORDQ046 = 'TOTORDQ04=6' ;
24040  +label TOTORDQ049 = 'TOTORDQ04=9' ;
24041  +label TOTORDQ0416 = 'TOTORDQ04=16' ;
24042  +*** encoding is sparse, initialize to zero;
24043  +TOTORDQ040 = 0;
24044  +TOTORDQ041 = 0;
24045  +TOTORDQ042 = 0;
24046  +TOTORDQ043 = 0;
24047  +TOTORDQ044 = 0;
24048  +TOTORDQ045 = 0;
24049  +TOTORDQ046 = 0;
24050  +TOTORDQ049 = 0;
24051  +TOTORDQ0416 = 0;
24052  +if missing( TOTORDQ04 ) then do;
24053  +   TOTORDQ040 = .;
24054  +   TOTORDQ041 = .;
24055  +   TOTORDQ042 = .;
24056  +   TOTORDQ043 = .;
24057  +   TOTORDQ044 = .;
24058  +   TOTORDQ045 = .;
24059  +   TOTORDQ046 = .;
24060  +   TOTORDQ049 = .;
24061  +   TOTORDQ0416 = .;
24062  +end;
24063  +else do;
24064  +   length _dm12 $ 12; drop _dm12 ;
24065  +   _dm12 = put( TOTORDQ04 , BEST12. );
24066  +   %DMNORMIP( _dm12 )
24067  +   if _dm12 = '0'  then do;
24068  +      TOTORDQ040 = 1;
24069  +   end;
24070  +   else if _dm12 = '1'  then do;
24071  +      TOTORDQ041 = 1;
24072  +   end;
24073  +   else if _dm12 = '2'  then do;
24074  +      TOTORDQ042 = 1;
24075  +   end;
24076  +   else if _dm12 = '3'  then do;
24077  +      TOTORDQ043 = 1;
24078  +   end;
24079  +   else if _dm12 = '4'  then do;
24080  +      TOTORDQ044 = 1;
24081  +   end;
24082  +   else if _dm12 = '5'  then do;
24083  +      TOTORDQ045 = 1;
24084  +   end;
24085  +   else if _dm12 = '6'  then do;
24086  +      TOTORDQ046 = 1;
24087  +   end;
24088  +   else if _dm12 = '9'  then do;
24089  +      TOTORDQ049 = 1;
24090  +   end;
24091  +   else if _dm12 = '16'  then do;
24092  +      TOTORDQ0416 = 1;
24093  +   end;
24094  +   else do;
24095  +      delete;
24096  +   end;
24097  +end;
24098  +
24099  +*** Generate dummy variables for TOTORDQ05 ;
24100  +label TOTORDQ050 = 'TOTORDQ05=0' ;
24101  +label TOTORDQ051 = 'TOTORDQ05=1' ;
24102  +label TOTORDQ052 = 'TOTORDQ05=2' ;
24103  +label TOTORDQ053 = 'TOTORDQ05=3' ;
24104  +label TOTORDQ054 = 'TOTORDQ05=4' ;
24105  +label TOTORDQ055 = 'TOTORDQ05=5' ;
24106  +*** encoding is sparse, initialize to zero;
24107  +TOTORDQ050 = 0;
24108  +TOTORDQ051 = 0;
24109  +TOTORDQ052 = 0;
24110  +TOTORDQ053 = 0;
24111  +TOTORDQ054 = 0;
24112  +TOTORDQ055 = 0;
24113  +if missing( TOTORDQ05 ) then do;
24114  +   TOTORDQ050 = .;
24115  +   TOTORDQ051 = .;
24116  +   TOTORDQ052 = .;
24117  +   TOTORDQ053 = .;
24118  +   TOTORDQ054 = .;
24119  +   TOTORDQ055 = .;
24120  +end;
24121  +else do;
24122  +   length _dm12 $ 12; drop _dm12 ;
24123  +   _dm12 = put( TOTORDQ05 , BEST12. );
24124  +   %DMNORMIP( _dm12 )
24125  +   if _dm12 = '0'  then do;
24126  +      TOTORDQ050 = 1;
24127  +   end;
24128  +   else if _dm12 = '1'  then do;
24129  +      TOTORDQ051 = 1;
24130  +   end;
24131  +   else if _dm12 = '2'  then do;
24132  +      TOTORDQ052 = 1;
24133  +   end;
24134  +   else if _dm12 = '3'  then do;
24135  +      TOTORDQ053 = 1;
24136  +   end;
24137  +   else if _dm12 = '4'  then do;
24138  +      TOTORDQ054 = 1;
24139  +   end;
24140  +   else if _dm12 = '5'  then do;
24141  +      TOTORDQ055 = 1;
24142  +   end;
24143  +   else do;
24144  +      delete;
24145  +   end;
24146  +end;
24147  +
24148  +*** Generate dummy variables for TOTORDQ06 ;
24149  +label TOTORDQ060 = 'TOTORDQ06=0' ;
24150  +label TOTORDQ061 = 'TOTORDQ06=1' ;
24151  +label TOTORDQ062 = 'TOTORDQ06=2' ;
24152  +label TOTORDQ063 = 'TOTORDQ06=3' ;
24153  +label TOTORDQ064 = 'TOTORDQ06=4' ;
24154  +label TOTORDQ065 = 'TOTORDQ06=5' ;
24155  +label TOTORDQ069 = 'TOTORDQ06=9' ;
24156  +*** encoding is sparse, initialize to zero;
24157  +TOTORDQ060 = 0;
24158  +TOTORDQ061 = 0;
24159  +TOTORDQ062 = 0;
24160  +TOTORDQ063 = 0;
24161  +TOTORDQ064 = 0;
24162  +TOTORDQ065 = 0;
24163  +TOTORDQ069 = 0;
24164  +if missing( TOTORDQ06 ) then do;
24165  +   TOTORDQ060 = .;
24166  +   TOTORDQ061 = .;
24167  +   TOTORDQ062 = .;
24168  +   TOTORDQ063 = .;
24169  +   TOTORDQ064 = .;
24170  +   TOTORDQ065 = .;
24171  +   TOTORDQ069 = .;
24172  +end;
24173  +else do;
24174  +   length _dm12 $ 12; drop _dm12 ;
24175  +   _dm12 = put( TOTORDQ06 , BEST12. );
24176  +   %DMNORMIP( _dm12 )
24177  +   if _dm12 = '0'  then do;
24178  +      TOTORDQ060 = 1;
24179  +   end;
24180  +   else if _dm12 = '1'  then do;
24181  +      TOTORDQ061 = 1;
24182  +   end;
24183  +   else if _dm12 = '2'  then do;
24184  +      TOTORDQ062 = 1;
24185  +   end;
24186  +   else if _dm12 = '3'  then do;
24187  +      TOTORDQ063 = 1;
24188  +   end;
24189  +   else if _dm12 = '4'  then do;
24190  +      TOTORDQ064 = 1;
24191  +   end;
24192  +   else if _dm12 = '5'  then do;
24193  +      TOTORDQ065 = 1;
24194  +   end;
24195  +   else if _dm12 = '9'  then do;
24196  +      TOTORDQ069 = 1;
24197  +   end;
24198  +   else do;
24199  +      delete;
24200  +   end;
24201  +end;
24202  +
24203  +*** Generate dummy variables for TOTORDQ07 ;
24204  +label TOTORDQ070 = 'TOTORDQ07=0' ;
24205  +label TOTORDQ071 = 'TOTORDQ07=1' ;
24206  +label TOTORDQ072 = 'TOTORDQ07=2' ;
24207  +label TOTORDQ073 = 'TOTORDQ07=3' ;
24208  +label TOTORDQ074 = 'TOTORDQ07=4' ;
24209  +label TOTORDQ075 = 'TOTORDQ07=5' ;
24210  +label TOTORDQ078 = 'TOTORDQ07=8' ;
24211  +*** encoding is sparse, initialize to zero;
24212  +TOTORDQ070 = 0;
24213  +TOTORDQ071 = 0;
24214  +TOTORDQ072 = 0;
24215  +TOTORDQ073 = 0;
24216  +TOTORDQ074 = 0;
24217  +TOTORDQ075 = 0;
24218  +TOTORDQ078 = 0;
24219  +if missing( TOTORDQ07 ) then do;
24220  +   TOTORDQ070 = .;
24221  +   TOTORDQ071 = .;
24222  +   TOTORDQ072 = .;
24223  +   TOTORDQ073 = .;
24224  +   TOTORDQ074 = .;
24225  +   TOTORDQ075 = .;
24226  +   TOTORDQ078 = .;
24227  +end;
24228  +else do;
24229  +   length _dm12 $ 12; drop _dm12 ;
24230  +   _dm12 = put( TOTORDQ07 , BEST12. );
24231  +   %DMNORMIP( _dm12 )
24232  +   if _dm12 = '0'  then do;
24233  +      TOTORDQ070 = 1;
24234  +   end;
24235  +   else if _dm12 = '1'  then do;
24236  +      TOTORDQ071 = 1;
24237  +   end;
24238  +   else if _dm12 = '2'  then do;
24239  +      TOTORDQ072 = 1;
24240  +   end;
24241  +   else if _dm12 = '3'  then do;
24242  +      TOTORDQ073 = 1;
24243  +   end;
24244  +   else if _dm12 = '4'  then do;
24245  +      TOTORDQ074 = 1;
24246  +   end;
24247  +   else if _dm12 = '5'  then do;
24248  +      TOTORDQ075 = 1;
24249  +   end;
24250  +   else if _dm12 = '8'  then do;
24251  +      TOTORDQ078 = 1;
24252  +   end;
24253  +   else do;
24254  +      delete;
24255  +   end;
24256  +end;
24257  +
24258  +*** Generate dummy variables for TOTORDQ08 ;
24259  +label TOTORDQ080 = 'TOTORDQ08=0' ;
24260  +label TOTORDQ081 = 'TOTORDQ08=1' ;
24261  +label TOTORDQ082 = 'TOTORDQ08=2' ;
24262  +label TOTORDQ083 = 'TOTORDQ08=3' ;
24263  +label TOTORDQ084 = 'TOTORDQ08=4' ;
24264  +label TOTORDQ085 = 'TOTORDQ08=5' ;
24265  +label TOTORDQ086 = 'TOTORDQ08=6' ;
24266  +label TOTORDQ0810 = 'TOTORDQ08=10' ;
24267  +label TOTORDQ0823 = 'TOTORDQ08=23' ;
24268  +*** encoding is sparse, initialize to zero;
24269  +TOTORDQ080 = 0;
24270  +TOTORDQ081 = 0;
24271  +TOTORDQ082 = 0;
24272  +TOTORDQ083 = 0;
24273  +TOTORDQ084 = 0;
24274  +TOTORDQ085 = 0;
24275  +TOTORDQ086 = 0;
24276  +TOTORDQ0810 = 0;
24277  +TOTORDQ0823 = 0;
24278  +if missing( TOTORDQ08 ) then do;
24279  +   TOTORDQ080 = .;
24280  +   TOTORDQ081 = .;
24281  +   TOTORDQ082 = .;
24282  +   TOTORDQ083 = .;
24283  +   TOTORDQ084 = .;
24284  +   TOTORDQ085 = .;
24285  +   TOTORDQ086 = .;
24286  +   TOTORDQ0810 = .;
24287  +   TOTORDQ0823 = .;
24288  +end;
24289  +else do;
24290  +   length _dm12 $ 12; drop _dm12 ;
24291  +   _dm12 = put( TOTORDQ08 , BEST12. );
24292  +   %DMNORMIP( _dm12 )
24293  +   if _dm12 = '0'  then do;
24294  +      TOTORDQ080 = 1;
24295  +   end;
24296  +   else if _dm12 = '1'  then do;
24297  +      TOTORDQ081 = 1;
24298  +   end;
24299  +   else if _dm12 = '2'  then do;
24300  +      TOTORDQ082 = 1;
24301  +   end;
24302  +   else if _dm12 = '3'  then do;
24303  +      TOTORDQ083 = 1;
24304  +   end;
24305  +   else if _dm12 = '4'  then do;
24306  +      TOTORDQ084 = 1;
24307  +   end;
24308  +   else if _dm12 = '5'  then do;
24309  +      TOTORDQ085 = 1;
24310  +   end;
24311  +   else if _dm12 = '6'  then do;
24312  +      TOTORDQ086 = 1;
24313  +   end;
24314  +   else if _dm12 = '10'  then do;
24315  +      TOTORDQ0810 = 1;
24316  +   end;
24317  +   else if _dm12 = '23'  then do;
24318  +      TOTORDQ0823 = 1;
24319  +   end;
24320  +   else do;
24321  +      delete;
24322  +   end;
24323  +end;
24324  +
24325  +*** Generate dummy variables for TOTORDQ09 ;
24326  +label TOTORDQ090 = 'TOTORDQ09=0' ;
24327  +label TOTORDQ091 = 'TOTORDQ09=1' ;
24328  +label TOTORDQ092 = 'TOTORDQ09=2' ;
24329  +label TOTORDQ093 = 'TOTORDQ09=3' ;
24330  +label TOTORDQ094 = 'TOTORDQ09=4' ;
24331  +label TOTORDQ095 = 'TOTORDQ09=5' ;
24332  +*** encoding is sparse, initialize to zero;
24333  +TOTORDQ090 = 0;
24334  +TOTORDQ091 = 0;
24335  +TOTORDQ092 = 0;
24336  +TOTORDQ093 = 0;
24337  +TOTORDQ094 = 0;
24338  +TOTORDQ095 = 0;
24339  +if missing( TOTORDQ09 ) then do;
24340  +   TOTORDQ090 = .;
24341  +   TOTORDQ091 = .;
24342  +   TOTORDQ092 = .;
24343  +   TOTORDQ093 = .;
24344  +   TOTORDQ094 = .;
24345  +   TOTORDQ095 = .;
24346  +end;
24347  +else do;
24348  +   length _dm12 $ 12; drop _dm12 ;
24349  +   _dm12 = put( TOTORDQ09 , BEST12. );
24350  +   %DMNORMIP( _dm12 )
24351  +   if _dm12 = '0'  then do;
24352  +      TOTORDQ090 = 1;
24353  +   end;
24354  +   else if _dm12 = '1'  then do;
24355  +      TOTORDQ091 = 1;
24356  +   end;
24357  +   else if _dm12 = '2'  then do;
24358  +      TOTORDQ092 = 1;
24359  +   end;
24360  +   else if _dm12 = '3'  then do;
24361  +      TOTORDQ093 = 1;
24362  +   end;
24363  +   else if _dm12 = '4'  then do;
24364  +      TOTORDQ094 = 1;
24365  +   end;
24366  +   else if _dm12 = '5'  then do;
24367  +      TOTORDQ095 = 1;
24368  +   end;
24369  +   else do;
24370  +      delete;
24371  +   end;
24372  +end;
24373  +
24374  +*** Generate dummy variables for TOTORDQ10 ;
24375  +label TOTORDQ100 = 'TOTORDQ10=0' ;
24376  +label TOTORDQ101 = 'TOTORDQ10=1' ;
24377  +label TOTORDQ102 = 'TOTORDQ10=2' ;
24378  +label TOTORDQ103 = 'TOTORDQ10=3' ;
24379  +label TOTORDQ104 = 'TOTORDQ10=4' ;
24380  +label TOTORDQ106 = 'TOTORDQ10=6' ;
24381  +*** encoding is sparse, initialize to zero;
24382  +TOTORDQ100 = 0;
24383  +TOTORDQ101 = 0;
24384  +TOTORDQ102 = 0;
24385  +TOTORDQ103 = 0;
24386  +TOTORDQ104 = 0;
24387  +TOTORDQ106 = 0;
24388  +if missing( TOTORDQ10 ) then do;
24389  +   TOTORDQ100 = .;
24390  +   TOTORDQ101 = .;
24391  +   TOTORDQ102 = .;
24392  +   TOTORDQ103 = .;
24393  +   TOTORDQ104 = .;
24394  +   TOTORDQ106 = .;
24395  +end;
24396  +else do;
24397  +   length _dm12 $ 12; drop _dm12 ;
24398  +   _dm12 = put( TOTORDQ10 , BEST12. );
24399  +   %DMNORMIP( _dm12 )
24400  +   if _dm12 = '0'  then do;
24401  +      TOTORDQ100 = 1;
24402  +   end;
24403  +   else if _dm12 = '1'  then do;
24404  +      TOTORDQ101 = 1;
24405  +   end;
24406  +   else if _dm12 = '2'  then do;
24407  +      TOTORDQ102 = 1;
24408  +   end;
24409  +   else if _dm12 = '3'  then do;
24410  +      TOTORDQ103 = 1;
24411  +   end;
24412  +   else if _dm12 = '4'  then do;
24413  +      TOTORDQ104 = 1;
24414  +   end;
24415  +   else if _dm12 = '6'  then do;
24416  +      TOTORDQ106 = 1;
24417  +   end;
24418  +   else do;
24419  +      delete;
24420  +   end;
24421  +end;
24422  +
24423  +*** Generate dummy variables for TOTORDQ11 ;
24424  +label TOTORDQ110 = 'TOTORDQ11=0' ;
24425  +label TOTORDQ111 = 'TOTORDQ11=1' ;
24426  +label TOTORDQ112 = 'TOTORDQ11=2' ;
24427  +label TOTORDQ113 = 'TOTORDQ11=3' ;
24428  +label TOTORDQ114 = 'TOTORDQ11=4' ;
24429  +label TOTORDQ115 = 'TOTORDQ11=5' ;
24430  +label TOTORDQ117 = 'TOTORDQ11=7' ;
24431  +*** encoding is sparse, initialize to zero;
24432  +TOTORDQ110 = 0;
24433  +TOTORDQ111 = 0;
24434  +TOTORDQ112 = 0;
24435  +TOTORDQ113 = 0;
24436  +TOTORDQ114 = 0;
24437  +TOTORDQ115 = 0;
24438  +TOTORDQ117 = 0;
24439  +if missing( TOTORDQ11 ) then do;
24440  +   TOTORDQ110 = .;
24441  +   TOTORDQ111 = .;
24442  +   TOTORDQ112 = .;
24443  +   TOTORDQ113 = .;
24444  +   TOTORDQ114 = .;
24445  +   TOTORDQ115 = .;
24446  +   TOTORDQ117 = .;
24447  +end;
24448  +else do;
24449  +   length _dm12 $ 12; drop _dm12 ;
24450  +   _dm12 = put( TOTORDQ11 , BEST12. );
24451  +   %DMNORMIP( _dm12 )
24452  +   if _dm12 = '0'  then do;
24453  +      TOTORDQ110 = 1;
24454  +   end;
24455  +   else if _dm12 = '1'  then do;
24456  +      TOTORDQ111 = 1;
24457  +   end;
24458  +   else if _dm12 = '2'  then do;
24459  +      TOTORDQ112 = 1;
24460  +   end;
24461  +   else if _dm12 = '3'  then do;
24462  +      TOTORDQ113 = 1;
24463  +   end;
24464  +   else if _dm12 = '4'  then do;
24465  +      TOTORDQ114 = 1;
24466  +   end;
24467  +   else if _dm12 = '5'  then do;
24468  +      TOTORDQ115 = 1;
24469  +   end;
24470  +   else if _dm12 = '7'  then do;
24471  +      TOTORDQ117 = 1;
24472  +   end;
24473  +   else do;
24474  +      delete;
24475  +   end;
24476  +end;
24477  +
24478  +*** Generate dummy variables for TOTORDQ12 ;
24479  +label TOTORDQ120 = 'TOTORDQ12=0' ;
24480  +label TOTORDQ121 = 'TOTORDQ12=1' ;
24481  +label TOTORDQ122 = 'TOTORDQ12=2' ;
24482  +label TOTORDQ123 = 'TOTORDQ12=3' ;
24483  +label TOTORDQ124 = 'TOTORDQ12=4' ;
24484  +label TOTORDQ125 = 'TOTORDQ12=5' ;
24485  +label TOTORDQ126 = 'TOTORDQ12=6' ;
24486  +label TOTORDQ127 = 'TOTORDQ12=7' ;
24487  +label TOTORDQ129 = 'TOTORDQ12=9' ;
24488  +label TOTORDQ1221 = 'TOTORDQ12=21' ;
24489  +*** encoding is sparse, initialize to zero;
24490  +TOTORDQ120 = 0;
24491  +TOTORDQ121 = 0;
24492  +TOTORDQ122 = 0;
24493  +TOTORDQ123 = 0;
24494  +TOTORDQ124 = 0;
24495  +TOTORDQ125 = 0;
24496  +TOTORDQ126 = 0;
24497  +TOTORDQ127 = 0;
24498  +TOTORDQ129 = 0;
24499  +TOTORDQ1221 = 0;
24500  +if missing( TOTORDQ12 ) then do;
24501  +   TOTORDQ120 = .;
24502  +   TOTORDQ121 = .;
24503  +   TOTORDQ122 = .;
24504  +   TOTORDQ123 = .;
24505  +   TOTORDQ124 = .;
24506  +   TOTORDQ125 = .;
24507  +   TOTORDQ126 = .;
24508  +   TOTORDQ127 = .;
24509  +   TOTORDQ129 = .;
24510  +   TOTORDQ1221 = .;
24511  +end;
24512  +else do;
24513  +   length _dm12 $ 12; drop _dm12 ;
24514  +   _dm12 = put( TOTORDQ12 , BEST12. );
24515  +   %DMNORMIP( _dm12 )
24516  +   if _dm12 = '0'  then do;
24517  +      TOTORDQ120 = 1;
24518  +   end;
24519  +   else if _dm12 = '1'  then do;
24520  +      TOTORDQ121 = 1;
24521  +   end;
24522  +   else if _dm12 = '2'  then do;
24523  +      TOTORDQ122 = 1;
24524  +   end;
24525  +   else if _dm12 = '3'  then do;
24526  +      TOTORDQ123 = 1;
24527  +   end;
24528  +   else if _dm12 = '4'  then do;
24529  +      TOTORDQ124 = 1;
24530  +   end;
24531  +   else if _dm12 = '5'  then do;
24532  +      TOTORDQ125 = 1;
24533  +   end;
24534  +   else if _dm12 = '7'  then do;
24535  +      TOTORDQ127 = 1;
24536  +   end;
24537  +   else if _dm12 = '6'  then do;
24538  +      TOTORDQ126 = 1;
24539  +   end;
24540  +   else if _dm12 = '9'  then do;
24541  +      TOTORDQ129 = 1;
24542  +   end;
24543  +   else if _dm12 = '21'  then do;
24544  +      TOTORDQ1221 = 1;
24545  +   end;
24546  +   else do;
24547  +      delete;
24548  +   end;
24549  +end;
24550  +
24551  +*** Generate dummy variables for TOTORDQ13 ;
24552  +label TOTORDQ130 = 'TOTORDQ13=0' ;
24553  +label TOTORDQ131 = 'TOTORDQ13=1' ;
24554  +label TOTORDQ132 = 'TOTORDQ13=2' ;
24555  +label TOTORDQ133 = 'TOTORDQ13=3' ;
24556  +label TOTORDQ134 = 'TOTORDQ13=4' ;
24557  +label TOTORDQ135 = 'TOTORDQ13=5' ;
24558  +*** encoding is sparse, initialize to zero;
24559  +TOTORDQ130 = 0;
24560  +TOTORDQ131 = 0;
24561  +TOTORDQ132 = 0;
24562  +TOTORDQ133 = 0;
24563  +TOTORDQ134 = 0;
24564  +TOTORDQ135 = 0;
24565  +if missing( TOTORDQ13 ) then do;
24566  +   TOTORDQ130 = .;
24567  +   TOTORDQ131 = .;
24568  +   TOTORDQ132 = .;
24569  +   TOTORDQ133 = .;
24570  +   TOTORDQ134 = .;
24571  +   TOTORDQ135 = .;
24572  +end;
24573  +else do;
24574  +   length _dm12 $ 12; drop _dm12 ;
24575  +   _dm12 = put( TOTORDQ13 , BEST12. );
24576  +   %DMNORMIP( _dm12 )
24577  +   if _dm12 = '0'  then do;
24578  +      TOTORDQ130 = 1;
24579  +   end;
24580  +   else if _dm12 = '1'  then do;
24581  +      TOTORDQ131 = 1;
24582  +   end;
24583  +   else if _dm12 = '2'  then do;
24584  +      TOTORDQ132 = 1;
24585  +   end;
24586  +   else if _dm12 = '3'  then do;
24587  +      TOTORDQ133 = 1;
24588  +   end;
24589  +   else if _dm12 = '4'  then do;
24590  +      TOTORDQ134 = 1;
24591  +   end;
24592  +   else if _dm12 = '5'  then do;
24593  +      TOTORDQ135 = 1;
24594  +   end;
24595  +   else do;
24596  +      delete;
24597  +   end;
24598  +end;
24599  +
24600  +*** Generate dummy variables for TOTORDQ14 ;
24601  +label TOTORDQ140 = 'TOTORDQ14=0' ;
24602  +label TOTORDQ141 = 'TOTORDQ14=1' ;
24603  +label TOTORDQ142 = 'TOTORDQ14=2' ;
24604  +label TOTORDQ143 = 'TOTORDQ14=3' ;
24605  +label TOTORDQ144 = 'TOTORDQ14=4' ;
24606  +label TOTORDQ145 = 'TOTORDQ14=5' ;
24607  +label TOTORDQ146 = 'TOTORDQ14=6' ;
24608  +*** encoding is sparse, initialize to zero;
24609  +TOTORDQ140 = 0;
24610  +TOTORDQ141 = 0;
24611  +TOTORDQ142 = 0;
24612  +TOTORDQ143 = 0;
24613  +TOTORDQ144 = 0;
24614  +TOTORDQ145 = 0;
24615  +TOTORDQ146 = 0;
24616  +if missing( TOTORDQ14 ) then do;
24617  +   TOTORDQ140 = .;
24618  +   TOTORDQ141 = .;
24619  +   TOTORDQ142 = .;
24620  +   TOTORDQ143 = .;
24621  +   TOTORDQ144 = .;
24622  +   TOTORDQ145 = .;
24623  +   TOTORDQ146 = .;
24624  +end;
24625  +else do;
24626  +   length _dm12 $ 12; drop _dm12 ;
24627  +   _dm12 = put( TOTORDQ14 , BEST12. );
24628  +   %DMNORMIP( _dm12 )
24629  +   if _dm12 = '0'  then do;
24630  +      TOTORDQ140 = 1;
24631  +   end;
24632  +   else if _dm12 = '1'  then do;
24633  +      TOTORDQ141 = 1;
24634  +   end;
24635  +   else if _dm12 = '2'  then do;
24636  +      TOTORDQ142 = 1;
24637  +   end;
24638  +   else if _dm12 = '3'  then do;
24639  +      TOTORDQ143 = 1;
24640  +   end;
24641  +   else if _dm12 = '4'  then do;
24642  +      TOTORDQ144 = 1;
24643  +   end;
24644  +   else if _dm12 = '5'  then do;
24645  +      TOTORDQ145 = 1;
24646  +   end;
24647  +   else if _dm12 = '6'  then do;
24648  +      TOTORDQ146 = 1;
24649  +   end;
24650  +   else do;
24651  +      delete;
24652  +   end;
24653  +end;
24654  +
24655  +*** Generate dummy variables for TOTORDQ15 ;
24656  +label TOTORDQ150 = 'TOTORDQ15=0' ;
24657  +label TOTORDQ151 = 'TOTORDQ15=1' ;
24658  +label TOTORDQ152 = 'TOTORDQ15=2' ;
24659  +label TOTORDQ153 = 'TOTORDQ15=3' ;
24660  +label TOTORDQ154 = 'TOTORDQ15=4' ;
24661  +label TOTORDQ155 = 'TOTORDQ15=5' ;
24662  +label TOTORDQ158 = 'TOTORDQ15=8' ;
24663  +*** encoding is sparse, initialize to zero;
24664  +TOTORDQ150 = 0;
24665  +TOTORDQ151 = 0;
24666  +TOTORDQ152 = 0;
24667  +TOTORDQ153 = 0;
24668  +TOTORDQ154 = 0;
24669  +TOTORDQ155 = 0;
24670  +TOTORDQ158 = 0;
24671  +if missing( TOTORDQ15 ) then do;
24672  +   TOTORDQ150 = .;
24673  +   TOTORDQ151 = .;
24674  +   TOTORDQ152 = .;
24675  +   TOTORDQ153 = .;
24676  +   TOTORDQ154 = .;
24677  +   TOTORDQ155 = .;
24678  +   TOTORDQ158 = .;
24679  +end;
24680  +else do;
24681  +   length _dm12 $ 12; drop _dm12 ;
24682  +   _dm12 = put( TOTORDQ15 , BEST12. );
24683  +   %DMNORMIP( _dm12 )
24684  +   if _dm12 = '0'  then do;
24685  +      TOTORDQ150 = 1;
24686  +   end;
24687  +   else if _dm12 = '1'  then do;
24688  +      TOTORDQ151 = 1;
24689  +   end;
24690  +   else if _dm12 = '2'  then do;
24691  +      TOTORDQ152 = 1;
24692  +   end;
24693  +   else if _dm12 = '3'  then do;
24694  +      TOTORDQ153 = 1;
24695  +   end;
24696  +   else if _dm12 = '4'  then do;
24697  +      TOTORDQ154 = 1;
24698  +   end;
24699  +   else if _dm12 = '5'  then do;
24700  +      TOTORDQ155 = 1;
24701  +   end;
24702  +   else if _dm12 = '8'  then do;
24703  +      TOTORDQ158 = 1;
24704  +   end;
24705  +   else do;
24706  +      delete;
24707  +   end;
24708  +end;
24709  +
24710  +*** Generate dummy variables for TOTORDQ16 ;
24711  +label TOTORDQ160 = 'TOTORDQ16=0' ;
24712  +label TOTORDQ161 = 'TOTORDQ16=1' ;
24713  +label TOTORDQ162 = 'TOTORDQ16=2' ;
24714  +label TOTORDQ163 = 'TOTORDQ16=3' ;
24715  +label TOTORDQ164 = 'TOTORDQ16=4' ;
24716  +label TOTORDQ165 = 'TOTORDQ16=5' ;
24717  +label TOTORDQ166 = 'TOTORDQ16=6' ;
24718  +label TOTORDQ167 = 'TOTORDQ16=7' ;
24719  +label TOTORDQ1610 = 'TOTORDQ16=10' ;
24720  +*** encoding is sparse, initialize to zero;
24721  +TOTORDQ160 = 0;
24722  +TOTORDQ161 = 0;
24723  +TOTORDQ162 = 0;
24724  +TOTORDQ163 = 0;
24725  +TOTORDQ164 = 0;
24726  +TOTORDQ165 = 0;
24727  +TOTORDQ166 = 0;
24728  +TOTORDQ167 = 0;
24729  +TOTORDQ1610 = 0;
24730  +if missing( TOTORDQ16 ) then do;
24731  +   TOTORDQ160 = .;
24732  +   TOTORDQ161 = .;
24733  +   TOTORDQ162 = .;
24734  +   TOTORDQ163 = .;
24735  +   TOTORDQ164 = .;
24736  +   TOTORDQ165 = .;
24737  +   TOTORDQ166 = .;
24738  +   TOTORDQ167 = .;
24739  +   TOTORDQ1610 = .;
24740  +end;
24741  +else do;
24742  +   length _dm12 $ 12; drop _dm12 ;
24743  +   _dm12 = put( TOTORDQ16 , BEST12. );
24744  +   %DMNORMIP( _dm12 )
24745  +   if _dm12 = '0'  then do;
24746  +      TOTORDQ160 = 1;
24747  +   end;
24748  +   else if _dm12 = '1'  then do;
24749  +      TOTORDQ161 = 1;
24750  +   end;
24751  +   else if _dm12 = '2'  then do;
24752  +      TOTORDQ162 = 1;
24753  +   end;
24754  +   else if _dm12 = '3'  then do;
24755  +      TOTORDQ163 = 1;
24756  +   end;
24757  +   else if _dm12 = '4'  then do;
24758  +      TOTORDQ164 = 1;
24759  +   end;
24760  +   else if _dm12 = '5'  then do;
24761  +      TOTORDQ165 = 1;
24762  +   end;
24763  +   else if _dm12 = '6'  then do;
24764  +      TOTORDQ166 = 1;
24765  +   end;
24766  +   else if _dm12 = '7'  then do;
24767  +      TOTORDQ167 = 1;
24768  +   end;
24769  +   else if _dm12 = '10'  then do;
24770  +      TOTORDQ1610 = 1;
24771  +   end;
24772  +   else do;
24773  +      delete;
24774  +   end;
24775  +end;
24776  +
24777  +*** Generate dummy variables for TOTORDQ17 ;
24778  +label TOTORDQ170 = 'TOTORDQ17=0' ;
24779  +label TOTORDQ171 = 'TOTORDQ17=1' ;
24780  +label TOTORDQ172 = 'TOTORDQ17=2' ;
24781  +label TOTORDQ173 = 'TOTORDQ17=3' ;
24782  +label TOTORDQ174 = 'TOTORDQ17=4' ;
24783  +label TOTORDQ175 = 'TOTORDQ17=5' ;
24784  +*** encoding is sparse, initialize to zero;
24785  +TOTORDQ170 = 0;
24786  +TOTORDQ171 = 0;
24787  +TOTORDQ172 = 0;
24788  +TOTORDQ173 = 0;
24789  +TOTORDQ174 = 0;
24790  +TOTORDQ175 = 0;
24791  +if missing( TOTORDQ17 ) then do;
24792  +   TOTORDQ170 = .;
24793  +   TOTORDQ171 = .;
24794  +   TOTORDQ172 = .;
24795  +   TOTORDQ173 = .;
24796  +   TOTORDQ174 = .;
24797  +   TOTORDQ175 = .;
24798  +end;
24799  +else do;
24800  +   length _dm12 $ 12; drop _dm12 ;
24801  +   _dm12 = put( TOTORDQ17 , BEST12. );
24802  +   %DMNORMIP( _dm12 )
24803  +   if _dm12 = '0'  then do;
24804  +      TOTORDQ170 = 1;
24805  +   end;
24806  +   else if _dm12 = '1'  then do;
24807  +      TOTORDQ171 = 1;
24808  +   end;
24809  +   else if _dm12 = '2'  then do;
24810  +      TOTORDQ172 = 1;
24811  +   end;
24812  +   else if _dm12 = '3'  then do;
24813  +      TOTORDQ173 = 1;
24814  +   end;
24815  +   else if _dm12 = '4'  then do;
24816  +      TOTORDQ174 = 1;
24817  +   end;
24818  +   else if _dm12 = '5'  then do;
24819  +      TOTORDQ175 = 1;
24820  +   end;
24821  +   else do;
24822  +      delete;
24823  +   end;
24824  +end;
24825  +
24826  +*** Generate dummy variables for TOTORDQ18 ;
24827  +label TOTORDQ180 = 'TOTORDQ18=0' ;
24828  +label TOTORDQ181 = 'TOTORDQ18=1' ;
24829  +label TOTORDQ182 = 'TOTORDQ18=2' ;
24830  +label TOTORDQ183 = 'TOTORDQ18=3' ;
24831  +label TOTORDQ184 = 'TOTORDQ18=4' ;
24832  +label TOTORDQ185 = 'TOTORDQ18=5' ;
24833  +*** encoding is sparse, initialize to zero;
24834  +TOTORDQ180 = 0;
24835  +TOTORDQ181 = 0;
24836  +TOTORDQ182 = 0;
24837  +TOTORDQ183 = 0;
24838  +TOTORDQ184 = 0;
24839  +TOTORDQ185 = 0;
24840  +if missing( TOTORDQ18 ) then do;
24841  +   TOTORDQ180 = .;
24842  +   TOTORDQ181 = .;
24843  +   TOTORDQ182 = .;
24844  +   TOTORDQ183 = .;
24845  +   TOTORDQ184 = .;
24846  +   TOTORDQ185 = .;
24847  +end;
24848  +else do;
24849  +   length _dm12 $ 12; drop _dm12 ;
24850  +   _dm12 = put( TOTORDQ18 , BEST12. );
24851  +   %DMNORMIP( _dm12 )
24852  +   if _dm12 = '0'  then do;
24853  +      TOTORDQ180 = 1;
24854  +   end;
24855  +   else if _dm12 = '1'  then do;
24856  +      TOTORDQ181 = 1;
24857  +   end;
24858  +   else if _dm12 = '2'  then do;
24859  +      TOTORDQ182 = 1;
24860  +   end;
24861  +   else if _dm12 = '3'  then do;
24862  +      TOTORDQ183 = 1;
24863  +   end;
24864  +   else if _dm12 = '4'  then do;
24865  +      TOTORDQ184 = 1;
24866  +   end;
24867  +   else if _dm12 = '5'  then do;
24868  +      TOTORDQ185 = 1;
24869  +   end;
24870  +   else do;
24871  +      delete;
24872  +   end;
24873  +end;
24874  +
24875  +*** Generate dummy variables for TOTORDQ19 ;
24876  +label TOTORDQ190 = 'TOTORDQ19=0' ;
24877  +label TOTORDQ191 = 'TOTORDQ19=1' ;
24878  +label TOTORDQ192 = 'TOTORDQ19=2' ;
24879  +label TOTORDQ193 = 'TOTORDQ19=3' ;
24880  +label TOTORDQ194 = 'TOTORDQ19=4' ;
24881  +label TOTORDQ195 = 'TOTORDQ19=5' ;
24882  +*** encoding is sparse, initialize to zero;
24883  +TOTORDQ190 = 0;
24884  +TOTORDQ191 = 0;
24885  +TOTORDQ192 = 0;
24886  +TOTORDQ193 = 0;
24887  +TOTORDQ194 = 0;
24888  +TOTORDQ195 = 0;
24889  +if missing( TOTORDQ19 ) then do;
24890  +   TOTORDQ190 = .;
24891  +   TOTORDQ191 = .;
24892  +   TOTORDQ192 = .;
24893  +   TOTORDQ193 = .;
24894  +   TOTORDQ194 = .;
24895  +   TOTORDQ195 = .;
24896  +end;
24897  +else do;
24898  +   length _dm12 $ 12; drop _dm12 ;
24899  +   _dm12 = put( TOTORDQ19 , BEST12. );
24900  +   %DMNORMIP( _dm12 )
24901  +   if _dm12 = '0'  then do;
24902  +      TOTORDQ190 = 1;
24903  +   end;
24904  +   else if _dm12 = '1'  then do;
24905  +      TOTORDQ191 = 1;
24906  +   end;
24907  +   else if _dm12 = '2'  then do;
24908  +      TOTORDQ192 = 1;
24909  +   end;
24910  +   else if _dm12 = '3'  then do;
24911  +      TOTORDQ193 = 1;
24912  +   end;
24913  +   else if _dm12 = '4'  then do;
24914  +      TOTORDQ194 = 1;
24915  +   end;
24916  +   else if _dm12 = '5'  then do;
24917  +      TOTORDQ195 = 1;
24918  +   end;
24919  +   else do;
24920  +      delete;
24921  +   end;
24922  +end;
24923  +
24924  +*** Generate dummy variables for TOTORDQ20 ;
24925  +label TOTORDQ200 = 'TOTORDQ20=0' ;
24926  +label TOTORDQ201 = 'TOTORDQ20=1' ;
24927  +label TOTORDQ202 = 'TOTORDQ20=2' ;
24928  +label TOTORDQ203 = 'TOTORDQ20=3' ;
24929  +label TOTORDQ204 = 'TOTORDQ20=4' ;
24930  +label TOTORDQ205 = 'TOTORDQ20=5' ;
24931  +label TOTORDQ207 = 'TOTORDQ20=7' ;
24932  +label TOTORDQ208 = 'TOTORDQ20=8' ;
24933  +label TOTORDQ2010 = 'TOTORDQ20=10' ;
24934  +label TOTORDQ2027 = 'TOTORDQ20=27' ;
24935  +*** encoding is sparse, initialize to zero;
24936  +TOTORDQ200 = 0;
24937  +TOTORDQ201 = 0;
24938  +TOTORDQ202 = 0;
24939  +TOTORDQ203 = 0;
24940  +TOTORDQ204 = 0;
24941  +TOTORDQ205 = 0;
24942  +TOTORDQ207 = 0;
24943  +TOTORDQ208 = 0;
24944  +TOTORDQ2010 = 0;
24945  +TOTORDQ2027 = 0;
24946  +if missing( TOTORDQ20 ) then do;
24947  +   TOTORDQ200 = .;
24948  +   TOTORDQ201 = .;
24949  +   TOTORDQ202 = .;
24950  +   TOTORDQ203 = .;
24951  +   TOTORDQ204 = .;
24952  +   TOTORDQ205 = .;
24953  +   TOTORDQ207 = .;
24954  +   TOTORDQ208 = .;
24955  +   TOTORDQ2010 = .;
24956  +   TOTORDQ2027 = .;
24957  +end;
24958  +else do;
24959  +   length _dm12 $ 12; drop _dm12 ;
24960  +   _dm12 = put( TOTORDQ20 , BEST12. );
24961  +   %DMNORMIP( _dm12 )
24962  +   if _dm12 = '0'  then do;
24963  +      TOTORDQ200 = 1;
24964  +   end;
24965  +   else if _dm12 = '1'  then do;
24966  +      TOTORDQ201 = 1;
24967  +   end;
24968  +   else if _dm12 = '2'  then do;
24969  +      TOTORDQ202 = 1;
24970  +   end;
24971  +   else if _dm12 = '3'  then do;
24972  +      TOTORDQ203 = 1;
24973  +   end;
24974  +   else if _dm12 = '4'  then do;
24975  +      TOTORDQ204 = 1;
24976  +   end;
24977  +   else if _dm12 = '5'  then do;
24978  +      TOTORDQ205 = 1;
24979  +   end;
24980  +   else if _dm12 = '7'  then do;
24981  +      TOTORDQ207 = 1;
24982  +   end;
24983  +   else if _dm12 = '8'  then do;
24984  +      TOTORDQ208 = 1;
24985  +   end;
24986  +   else if _dm12 = '10'  then do;
24987  +      TOTORDQ2010 = 1;
24988  +   end;
24989  +   else if _dm12 = '27'  then do;
24990  +      TOTORDQ2027 = 1;
24991  +   end;
24992  +   else do;
24993  +      delete;
24994  +   end;
24995  +end;
24996  +
24997  +*** Generate dummy variables for TOTORDQ21 ;
24998  +label TOTORDQ210 = 'TOTORDQ21=0' ;
24999  +label TOTORDQ211 = 'TOTORDQ21=1' ;
25000  +label TOTORDQ212 = 'TOTORDQ21=2' ;
25001  +label TOTORDQ213 = 'TOTORDQ21=3' ;
25002  +label TOTORDQ214 = 'TOTORDQ21=4' ;
25003  +label TOTORDQ215 = 'TOTORDQ21=5' ;
25004  +label TOTORDQ219 = 'TOTORDQ21=9' ;
25005  +*** encoding is sparse, initialize to zero;
25006  +TOTORDQ210 = 0;
25007  +TOTORDQ211 = 0;
25008  +TOTORDQ212 = 0;
25009  +TOTORDQ213 = 0;
25010  +TOTORDQ214 = 0;
25011  +TOTORDQ215 = 0;
25012  +TOTORDQ219 = 0;
25013  +if missing( TOTORDQ21 ) then do;
25014  +   TOTORDQ210 = .;
25015  +   TOTORDQ211 = .;
25016  +   TOTORDQ212 = .;
25017  +   TOTORDQ213 = .;
25018  +   TOTORDQ214 = .;
25019  +   TOTORDQ215 = .;
25020  +   TOTORDQ219 = .;
25021  +end;
25022  +else do;
25023  +   length _dm12 $ 12; drop _dm12 ;
25024  +   _dm12 = put( TOTORDQ21 , BEST12. );
25025  +   %DMNORMIP( _dm12 )
25026  +   if _dm12 = '0'  then do;
25027  +      TOTORDQ210 = 1;
25028  +   end;
25029  +   else if _dm12 = '1'  then do;
25030  +      TOTORDQ211 = 1;
25031  +   end;
25032  +   else if _dm12 = '2'  then do;
25033  +      TOTORDQ212 = 1;
25034  +   end;
25035  +   else if _dm12 = '3'  then do;
25036  +      TOTORDQ213 = 1;
25037  +   end;
25038  +   else if _dm12 = '4'  then do;
25039  +      TOTORDQ214 = 1;
25040  +   end;
25041  +   else if _dm12 = '5'  then do;
25042  +      TOTORDQ215 = 1;
25043  +   end;
25044  +   else if _dm12 = '9'  then do;
25045  +      TOTORDQ219 = 1;
25046  +   end;
25047  +   else do;
25048  +      delete;
25049  +   end;
25050  +end;
25051  +
25052  +*** Generate dummy variables for TOTORDQ22 ;
25053  +label TOTORDQ220 = 'TOTORDQ22=0' ;
25054  +label TOTORDQ221 = 'TOTORDQ22=1' ;
25055  +label TOTORDQ222 = 'TOTORDQ22=2' ;
25056  +label TOTORDQ223 = 'TOTORDQ22=3' ;
25057  +label TOTORDQ224 = 'TOTORDQ22=4' ;
25058  +label TOTORDQ225 = 'TOTORDQ22=5' ;
25059  +label TOTORDQ226 = 'TOTORDQ22=6' ;
25060  +*** encoding is sparse, initialize to zero;
25061  +TOTORDQ220 = 0;
25062  +TOTORDQ221 = 0;
25063  +TOTORDQ222 = 0;
25064  +TOTORDQ223 = 0;
25065  +TOTORDQ224 = 0;
25066  +TOTORDQ225 = 0;
25067  +TOTORDQ226 = 0;
25068  +if missing( TOTORDQ22 ) then do;
25069  +   TOTORDQ220 = .;
25070  +   TOTORDQ221 = .;
25071  +   TOTORDQ222 = .;
25072  +   TOTORDQ223 = .;
25073  +   TOTORDQ224 = .;
25074  +   TOTORDQ225 = .;
25075  +   TOTORDQ226 = .;
25076  +end;
25077  +else do;
25078  +   length _dm12 $ 12; drop _dm12 ;
25079  +   _dm12 = put( TOTORDQ22 , BEST12. );
25080  +   %DMNORMIP( _dm12 )
25081  +   if _dm12 = '0'  then do;
25082  +      TOTORDQ220 = 1;
25083  +   end;
25084  +   else if _dm12 = '1'  then do;
25085  +      TOTORDQ221 = 1;
25086  +   end;
25087  +   else if _dm12 = '2'  then do;
25088  +      TOTORDQ222 = 1;
25089  +   end;
25090  +   else if _dm12 = '3'  then do;
25091  +      TOTORDQ223 = 1;
25092  +   end;
25093  +   else if _dm12 = '4'  then do;
25094  +      TOTORDQ224 = 1;
25095  +   end;
25096  +   else if _dm12 = '5'  then do;
25097  +      TOTORDQ225 = 1;
25098  +   end;
25099  +   else if _dm12 = '6'  then do;
25100  +      TOTORDQ226 = 1;
25101  +   end;
25102  +   else do;
25103  +      delete;
25104  +   end;
25105  +end;
25106  +
25107  +*** End Class Look-up, Standardization, Replacement ;
25108  +
25109  +
25110  +/*-------------------------------------------------*/
25111  +/* Varclus Score Code Begins: GCLUSTER 1*/
25112  +/*-------------------------------------------------*/
25113  +
25114  +GC1_CLUS1 = 0 ; /*---Global Cluster 1 : Cluster Component 1------ */
25115  +GC1_CLUS2 = 0 ; /*---Global Cluster 1 : Cluster Component 2------ */
25116  +GC1_CLUS3 = 0 ; /*---Global Cluster 1 : Cluster Component 3------ */
25117  +GC1_CLUS4 = 0 ; /*---Global Cluster 1 : Cluster Component 4------ */
25118  +GC1_CLUS5 = 0 ; /*---Global Cluster 1 : Cluster Component 5------ */
25119  +GC1_CLUS6 = 0 ; /*---Global Cluster 1 : Cluster Component 6------ */
25120  +GC1_CLUS7 = 0 ; /*---Global Cluster 1 : Cluster Component 7------ */
25121  +GC1_CLUS8 = 0 ; /*---Global Cluster 1 : Cluster Component 8------ */
25122  +GC1_CLUS9 = 0 ; /*---Global Cluster 1 : Cluster Component 9------ */
25123  +GC1_CLUS10 = 0 ; /*---Global Cluster 1 : Cluster Component 10------ */
25124  +GC1_CLUS11 = 0 ; /*---Global Cluster 1 : Cluster Component 11------ */
25125  +GC1_CLUS12 = 0 ; /*---Global Cluster 1 : Cluster Component 12------ */
25126  +GC1_CLUS13 = 0 ; /*---Global Cluster 1 : Cluster Component 13------ */
25127  +GC1_CLUS14 = 0 ; /*---Global Cluster 1 : Cluster Component 14------ */
25128  +GC1_CLUS15 = 0 ; /*---Global Cluster 1 : Cluster Component 15------ */
25129  +GC1_CLUS16 = 0 ; /*---Global Cluster 1 : Cluster Component 16------ */
25130  +GC1_CLUS17 = 0 ; /*---Global Cluster 1 : Cluster Component 17------ */
25131  +GC1_CLUS18 = 0 ; /*---Global Cluster 1 : Cluster Component 18------ */
25132  +GC1_CLUS19 = 0 ; /*---Global Cluster 1 : Cluster Component 19------ */
25133  +GC1_CLUS20 = 0 ; /*---Global Cluster 1 : Cluster Component 20------ */
25134  +GC1_CLUS21 = 0 ; /*---Global Cluster 1 : Cluster Component 21------ */
25135  +GC1_CLUS22 = 0 ; /*---Global Cluster 1 : Cluster Component 22------ */
25136  +GC1_CLUS23 = 0 ; /*---Global Cluster 1 : Cluster Component 23------ */
25137  +GC1_CLUS24 = 0 ; /*---Global Cluster 1 : Cluster Component 24------ */
25138  +GC1_CLUS25 = 0 ; /*---Global Cluster 1 : Cluster Component 25------ */
25139  +GC1_CLUS26 = 0 ; /*---Global Cluster 1 : Cluster Component 26------ */
25140  +GC1_CLUS27 = 0 ; /*---Global Cluster 1 : Cluster Component 27------ */
25141  +GC1_CLUS28 = 0 ; /*---Global Cluster 1 : Cluster Component 28------ */
25142  +GC1_CLUS29 = 0 ; /*---Global Cluster 1 : Cluster Component 29------ */
25143  +GC1_CLUS30 = 0 ; /*---Global Cluster 1 : Cluster Component 30------ */
25144  +GC1_CLUS31 = 0 ; /*---Global Cluster 1 : Cluster Component 31------ */
25145  +GC1_CLUS32 = 0 ; /*---Global Cluster 1 : Cluster Component 32------ */
25146  +GC1_CLUS33 = 0 ; /*---Global Cluster 1 : Cluster Component 33------ */
25147  +GC1_CLUS34 = 0 ; /*---Global Cluster 1 : Cluster Component 34------ */
25148  +GC1_CLUS35 = 0 ; /*---Global Cluster 1 : Cluster Component 35------ */
25149  +GC1_CLUS36 = 0 ; /*---Global Cluster 1 : Cluster Component 36------ */
25150  +GC1_CLUS37 = 0 ; /*---Global Cluster 1 : Cluster Component 37------ */
25151  +GC1_CLUS38 = 0 ; /*---Global Cluster 1 : Cluster Component 38------ */
25152  +GC1_CLUS20 = GC1_CLUS20+0.25268259289693 * (ACTBUY3 - 0.0514657980456)/0.22094927955546;
25153  +GC1_CLUS27 = GC1_CLUS27+1 * (ACTBUY5 - 0.00896541026834)/0.09426190815315;
25154  +GC1_CLUS2 = GC1_CLUS2+0.5 * (BOTHPAYM1 - 0.19354738638126)/0.39508434277919;
25155  +GC1_CLUS22 = GC1_CLUS22+0.25067773313649 * (CATALOGCNT - 3.77161470451372)/3.12899556544539;
25156  +GC1_CLUS1 = GC1_CLUS1+0.101895176444 * (DEPT01 - 0.50547541492166)/1.82274128473225;
25157  +GC1_CLUS1 = GC1_CLUS1+0.09448532113036 * (DEPT02 - 0.29257018768419)/1.15307534710204;
25158  +GC1_CLUS1 = GC1_CLUS1+0.11403575618412 * (DEPT03 - 1.08161935784085)/2.82203775857088;
25159  +GC1_CLUS1 = GC1_CLUS1+0.10092357421523 * (DEPT04 - 0.68006824879789)/2.28175674515779;
25160  +GC1_CLUS1 = GC1_CLUS1+0.0961666686675 * (DEPT05 - 0.54295020939972)/1.52515347226129;
25161  +GC1_CLUS22 = GC1_CLUS22+0.16008575269519 * (DEPT06 - 0.85925236544129)/1.98131768775175;
25162  +GC1_CLUS24 = GC1_CLUS24+1 * (DEPT079 - 0.00003102218085)/0.00556975590661;
25163  +GC1_CLUS25 = GC1_CLUS25+0.56831365754901 * (DEPT08 - 0.31512331316891)/1.29408639394269;
25164  +GC1_CLUS25 = GC1_CLUS25+0.53228926446034 * (DEPT09 - 0.2486427795874)/1.20923480324609;
25165  +GC1_CLUS23 = GC1_CLUS23+0.63033230529387 * (DEPT10 - 0.39066232356134)/1.7648701612552;
25166  +GC1_CLUS38 = GC1_CLUS38+0.6526082750221 * (DEPT1129 - 0.00003102218085)/0.00556975590661;
25167  +GC1_CLUS23 = GC1_CLUS23+0.63033230529387 * (DEPT1213 - 0.00009306654257)/0.009646800928;
25168  +GC1_CLUS22 = GC1_CLUS22+0.07949531968682 * (DEPT123 - 0.05013184426865)/0.21822034675722;
25169  +GC1_CLUS25 = GC1_CLUS25+0.45758385559152 * (DEPT125 - 0.00614239181014)/0.07813355373221;
25170  +GC1_CLUS22 = GC1_CLUS22+0.195672422795 * (DEPT13 - 1.30395532805956)/2.58742913517547;
25171  +GC1_CLUS1 = GC1_CLUS1+0.11711510116145 * (DEPT14 - 0.83527221963704)/2.18699342328426;
25172  +GC1_CLUS26 = GC1_CLUS26+0.64623891481535 * (DEPT15 - 0.28949899177912)/1.23869079532202;
25173  +GC1_CLUS26 = GC1_CLUS26+0.64623891481535 * (DEPT16 - 0.22491081123002)/1.0272304883634;
25174  +GC1_CLUS22 = GC1_CLUS22+0.21317622467802 * (DEPT22 - 2.12771831859779)/3.55134640550257;
25175  +GC1_CLUS22 = GC1_CLUS22+0.18630934593845 * (DEPT23 - 2.14223669923995)/3.81941288304535;
25176  +GC1_CLUS22 = GC1_CLUS22+0.15964088340357 * (DEPT24 - 0.64039087947882)/1.70711269742472;
25177  +GC1_CLUS22 = GC1_CLUS22+0.14884665049554 * (DEPT25 - 1.77676438653637)/4.75421718243184;
25178  +GC1_CLUS22 = GC1_CLUS22+0.14734632532468 * (DEPT27 - 0.58712579494338)/1.55259848403997;
25179  +GC1_CLUS1 = GC1_CLUS1+0.18972938056453 * (DOLINDET - 197.869031487513)/314.244548218948;
25180  +GC1_CLUS9 = GC1_CLUS9+0.56650532628804 * (DOLLARQ01 - 3.60255901969908)/18.9572343997303;
25181  +GC1_CLUS15 = GC1_CLUS15+0.56891547937291 * (DOLLARQ02 - 3.71090770901194)/20.7285900605152;
25182  +GC1_CLUS6 = GC1_CLUS6+0.5504626050735 * (DOLLARQ03 - 2.77052582596556)/15.8095808048519;
25183  +GC1_CLUS8 = GC1_CLUS8+0.55947068301874 * (DOLLARQ04 - 4.67856274236079)/22.181986153492;
25184  +GC1_CLUS19 = GC1_CLUS19+0.56558194710065 * (DOLLARQ05 - 4.32741461144718)/21.5182033567075;
25185  +GC1_CLUS17 = GC1_CLUS17+0.56416459866316 * (DOLLARQ06 - 3.88379649449356)/20.0626675130808;
25186  +GC1_CLUS12 = GC1_CLUS12+0.56944124195633 * (DOLLARQ07 - 4.19153187529083)/21.9984516452687;
25187  +GC1_CLUS20 = GC1_CLUS20+0.52449177579655 * (DOLLARQ08 - 6.15043803319373)/27.3333023843591;
25188  +GC1_CLUS14 = GC1_CLUS14+0.56389329494284 * (DOLLARQ09 - 4.29424383434155)/20.7683103640237;
25189  +GC1_CLUS10 = GC1_CLUS10+0.56089371324664 * (DOLLARQ10 - 3.64839584302776)/18.9957061824675;
25190  +GC1_CLUS4 = GC1_CLUS4+0.56413462585676 * (DOLLARQ11 - 4.15352411974561)/20.8177653006881;
25191  +GC1_CLUS5 = GC1_CLUS5+0.57491492012181 * (DOLLARQ12 - 6.39860555297037)/27.403980773023;
25192  +GC1_CLUS16 = GC1_CLUS16+0.57470990449496 * (DOLLARQ13 - 5.38680471537149)/25.9110809016436;
25193  +GC1_CLUS18 = GC1_CLUS18+0.57362967885419 * (DOLLARQ14 - 4.43791499922444)/23.752188577194;
25194  +GC1_CLUS3 = GC1_CLUS3+0.57055038098878 * (DOLLARQ15 - 4.90567023421746)/23.5349065932921;
25195  +GC1_CLUS13 = GC1_CLUS13+0.57289204188732 * (DOLLARQ17 - 5.57017403443462)/26.1415799982751;
25196  +GC1_CLUS7 = GC1_CLUS7+0.56193475254128 * (DOLLARQ18 - 4.78568140220257)/22.3927978593641;
25197  +GC1_CLUS11 = GC1_CLUS11+0.55963095544762 * (DOLLARQ19 - 4.33358802543818)/21.704742358276;
25198  +GC1_CLUS1 = GC1_CLUS1+0.18816215037063 * (DOLNETDT - 189.18095548317)/303.615750735174;
25199  +GC1_CLUS1 = GC1_CLUS1+0.17209519350965 * (FREQPRCH - 4.18160384675042)/5.31459540671444;
25200  +GC1_CLUS2 = GC1_CLUS2+0.5 * (METHPAYMXBOT - 0.19354738638126)/0.39508434277919;
25201  +GC1_CLUS9 = GC1_CLUS9+0.56650532628804 * (TOTORDQ011 - 0.05853885528152)/0.23476321571557;
25202  +GC1_CLUS33 = GC1_CLUS33+1 * (TOTORDQ012 - 0.00791065611912)/0.08859075070754;
25203  +GC1_CLUS15 = GC1_CLUS15+0.56891547937291 * (TOTORDQ021 - 0.05627423607879)/0.2304541038742;
25204  +GC1_CLUS37 = GC1_CLUS37+1 * (TOTORDQ022 - 0.00639056925701)/0.07968642839386;
25205  +GC1_CLUS6 = GC1_CLUS6+0.5504626050735 * (TOTORDQ031 - 0.04920117884287)/0.21629117901362;
25206  +GC1_CLUS8 = GC1_CLUS8+0.55947068301874 * (TOTORDQ041 - 0.0732743911897)/0.2605904093015;
25207  +GC1_CLUS38 = GC1_CLUS38+0.6526082750221 * (TOTORDQ043 - 0.00102373196835)/0.03197992601749;
25208  +GC1_CLUS19 = GC1_CLUS19+0.56558194710065 * (TOTORDQ051 - 0.06781448735846)/0.25143119100849;
25209  +GC1_CLUS17 = GC1_CLUS17+0.56416459866317 * (TOTORDQ061 - 0.06446409182565)/0.24558164355085;
25210  +GC1_CLUS12 = GC1_CLUS12+0.56944124195633 * (TOTORDQ071 - 0.06769039863502)/0.25121776686543;
25211  +GC1_CLUS35 = GC1_CLUS35+1 * (TOTORDQ072 - 0.0071661237785)/0.08435040705909;
25212  +GC1_CLUS20 = GC1_CLUS20+0.53499201866075 * (TOTORDQ081 - 0.09083294555607)/0.28737585758179;
25213  +GC1_CLUS14 = GC1_CLUS14+0.56389329494284 * (TOTORDQ091 - 0.07256088102993)/0.25941836346204;
25214  +GC1_CLUS10 = GC1_CLUS10+0.56089371324664 * (TOTORDQ101 - 0.05934543198386)/0.23627374697278;
25215  +GC1_CLUS36 = GC1_CLUS36+1 * (TOTORDQ102 - 0.00614239181014)/0.07813355373221;
25216  +GC1_CLUS21 = GC1_CLUS21+0.60779357584955 * (TOTORDQ104 - 0.00012408872343)/0.01113899342716;
25217  +GC1_CLUS4 = GC1_CLUS4+0.56413462585676 * (TOTORDQ111 - 0.06902435241197)/0.25349947679037;
25218  +GC1_CLUS34 = GC1_CLUS34+1 * (TOTORDQ112 - 0.00722816814022)/0.08471212631733;
25219  +GC1_CLUS21 = GC1_CLUS21+0.60779357584955 * (TOTORDQ115 - 0.00006204436171)/0.00787670215937;
25220  +GC1_CLUS5 = GC1_CLUS5+0.57491492012181 * (TOTORDQ121 - 0.09626182720645)/0.29495455023242;
25221  +GC1_CLUS28 = GC1_CLUS28+1 * (TOTORDQ122 - 0.01098185202419)/0.10421894213846;
25222  +GC1_CLUS16 = GC1_CLUS16+0.57470990449496 * (TOTORDQ131 - 0.08621064060803)/0.2806791941105;
25223  +GC1_CLUS30 = GC1_CLUS30+1 * (TOTORDQ132 - 0.0088413215449)/0.09361316381141;
25224  +GC1_CLUS18 = GC1_CLUS18+0.57362967885419 * (TOTORDQ141 - 0.0719714595936)/0.25844465690351;
25225  +GC1_CLUS3 = GC1_CLUS3+0.57055038098878 * (TOTORDQ151 - 0.07584923220102)/0.264760836941;
25226  +GC1_CLUS31 = GC1_CLUS31+1 * (TOTORDQ152 - 0.00905847681091)/0.09474544466925;
25227  +GC1_CLUS13 = GC1_CLUS13+0.57289204188732 * (TOTORDQ171 - 0.08329455560725)/0.27633121690163;
25228  +GC1_CLUS29 = GC1_CLUS29+1 * (TOTORDQ172 - 0.00961687606638)/0.09759450413666;
25229  +GC1_CLUS7 = GC1_CLUS7+0.56193475254128 * (TOTORDQ181 - 0.07476345587094)/0.26301335998085;
25230  +GC1_CLUS32 = GC1_CLUS32+1 * (TOTORDQ182 - 0.00744532340623)/0.08596580612805;
25231  +GC1_CLUS11 = GC1_CLUS11+0.55963095544762 * (TOTORDQ191 - 0.06775244299674)/0.25132450925054;
25232  +GC1_CLUS1 = GC1_CLUS1+0.18087293545233 * (UNITSIDD - 10.9602916085)/17.1055734908767;
25233  +
25234  +/*-------------------------------------------------*/
25235  +/* Varclus Score Code Begins: GCLUSTER 2*/
25236  +/*-------------------------------------------------*/
25237  +
25238  +GC2_CLUS1 = 0 ; /*---Global Cluster 2 : Cluster Component 1------ */
25239  +GC2_CLUS2 = 0 ; /*---Global Cluster 2 : Cluster Component 2------ */
25240  +GC2_CLUS3 = 0 ; /*---Global Cluster 2 : Cluster Component 3------ */
25241  +GC2_CLUS4 = 0 ; /*---Global Cluster 2 : Cluster Component 4------ */
25242  +GC2_CLUS5 = 0 ; /*---Global Cluster 2 : Cluster Component 5------ */
25243  +GC2_CLUS6 = 0 ; /*---Global Cluster 2 : Cluster Component 6------ */
25244  +GC2_CLUS7 = 0 ; /*---Global Cluster 2 : Cluster Component 7------ */
25245  +GC2_CLUS8 = 0 ; /*---Global Cluster 2 : Cluster Component 8------ */
25246  +GC2_CLUS9 = 0 ; /*---Global Cluster 2 : Cluster Component 9------ */
25247  +GC2_CLUS10 = 0 ; /*---Global Cluster 2 : Cluster Component 10------ */
25248  +GC2_CLUS11 = 0 ; /*---Global Cluster 2 : Cluster Component 11------ */
25249  +GC2_CLUS12 = 0 ; /*---Global Cluster 2 : Cluster Component 12------ */
25250  +GC2_CLUS13 = 0 ; /*---Global Cluster 2 : Cluster Component 13------ */
25251  +GC2_CLUS14 = 0 ; /*---Global Cluster 2 : Cluster Component 14------ */
25252  +GC2_CLUS15 = 0 ; /*---Global Cluster 2 : Cluster Component 15------ */
25253  +GC2_CLUS16 = 0 ; /*---Global Cluster 2 : Cluster Component 16------ */
25254  +GC2_CLUS17 = 0 ; /*---Global Cluster 2 : Cluster Component 17------ */
25255  +GC2_CLUS18 = 0 ; /*---Global Cluster 2 : Cluster Component 18------ */
25256  +GC2_CLUS19 = 0 ; /*---Global Cluster 2 : Cluster Component 19------ */
25257  +GC2_CLUS20 = 0 ; /*---Global Cluster 2 : Cluster Component 20------ */
25258  +GC2_CLUS21 = 0 ; /*---Global Cluster 2 : Cluster Component 21------ */
25259  +GC2_CLUS22 = 0 ; /*---Global Cluster 2 : Cluster Component 22------ */
25260  +GC2_CLUS23 = 0 ; /*---Global Cluster 2 : Cluster Component 23------ */
25261  +GC2_CLUS24 = 0 ; /*---Global Cluster 2 : Cluster Component 24------ */
25262  +GC2_CLUS25 = 0 ; /*---Global Cluster 2 : Cluster Component 25------ */
25263  +GC2_CLUS26 = 0 ; /*---Global Cluster 2 : Cluster Component 26------ */
25264  +GC2_CLUS27 = 0 ; /*---Global Cluster 2 : Cluster Component 27------ */
25265  +GC2_CLUS28 = 0 ; /*---Global Cluster 2 : Cluster Component 28------ */
25266  +GC2_CLUS29 = 0 ; /*---Global Cluster 2 : Cluster Component 29------ */
25267  +GC2_CLUS30 = 0 ; /*---Global Cluster 2 : Cluster Component 30------ */
25268  +GC2_CLUS31 = 0 ; /*---Global Cluster 2 : Cluster Component 31------ */
25269  +GC2_CLUS32 = 0 ; /*---Global Cluster 2 : Cluster Component 32------ */
25270  +GC2_CLUS33 = 0 ; /*---Global Cluster 2 : Cluster Component 33------ */
25271  +GC2_CLUS34 = 0 ; /*---Global Cluster 2 : Cluster Component 34------ */
25272  +GC2_CLUS35 = 0 ; /*---Global Cluster 2 : Cluster Component 35------ */
25273  +GC2_CLUS36 = 0 ; /*---Global Cluster 2 : Cluster Component 36------ */
25274  +GC2_CLUS37 = 0 ; /*---Global Cluster 2 : Cluster Component 37------ */
25275  +GC2_CLUS38 = 0 ; /*---Global Cluster 2 : Cluster Component 38------ */
25276  +GC2_CLUS39 = 0 ; /*---Global Cluster 2 : Cluster Component 39------ */
25277  +GC2_CLUS40 = 0 ; /*---Global Cluster 2 : Cluster Component 40------ */
25278  +GC2_CLUS41 = 0 ; /*---Global Cluster 2 : Cluster Component 41------ */
25279  +GC2_CLUS42 = 0 ; /*---Global Cluster 2 : Cluster Component 42------ */
25280  +GC2_CLUS43 = 0 ; /*---Global Cluster 2 : Cluster Component 43------ */
25281  +GC2_CLUS44 = 0 ; /*---Global Cluster 2 : Cluster Component 44------ */
25282  +GC2_CLUS45 = 0 ; /*---Global Cluster 2 : Cluster Component 45------ */
25283  +GC2_CLUS46 = 0 ; /*---Global Cluster 2 : Cluster Component 46------ */
25284  +GC2_CLUS47 = 0 ; /*---Global Cluster 2 : Cluster Component 47------ */
25285  +GC2_CLUS48 = 0 ; /*---Global Cluster 2 : Cluster Component 48------ */
25286  +GC2_CLUS49 = 0 ; /*---Global Cluster 2 : Cluster Component 49------ */
25287  +GC2_CLUS50 = 0 ; /*---Global Cluster 2 : Cluster Component 50------ */
25288  +GC2_CLUS51 = 0 ; /*---Global Cluster 2 : Cluster Component 51------ */
25289  +GC2_CLUS52 = 0 ; /*---Global Cluster 2 : Cluster Component 52------ */
25290  +GC2_CLUS53 = 0 ; /*---Global Cluster 2 : Cluster Component 53------ */
25291  +GC2_CLUS54 = 0 ; /*---Global Cluster 2 : Cluster Component 54------ */
25292  +GC2_CLUS55 = 0 ; /*---Global Cluster 2 : Cluster Component 55------ */
25293  +GC2_CLUS56 = 0 ; /*---Global Cluster 2 : Cluster Component 56------ */
25294  +GC2_CLUS57 = 0 ; /*---Global Cluster 2 : Cluster Component 57------ */
25295  +GC2_CLUS58 = 0 ; /*---Global Cluster 2 : Cluster Component 58------ */
25296  +GC2_CLUS59 = 0 ; /*---Global Cluster 2 : Cluster Component 59------ */
25297  +GC2_CLUS60 = 0 ; /*---Global Cluster 2 : Cluster Component 60------ */
25298  +GC2_CLUS61 = 0 ; /*---Global Cluster 2 : Cluster Component 61------ */
25299  +GC2_CLUS62 = 0 ; /*---Global Cluster 2 : Cluster Component 62------ */
25300  +GC2_CLUS63 = 0 ; /*---Global Cluster 2 : Cluster Component 63------ */
25301  +GC2_CLUS64 = 0 ; /*---Global Cluster 2 : Cluster Component 64------ */
25302  +GC2_CLUS65 = 0 ; /*---Global Cluster 2 : Cluster Component 65------ */
25303  +GC2_CLUS66 = 0 ; /*---Global Cluster 2 : Cluster Component 66------ */
25304  +GC2_CLUS67 = 0 ; /*---Global Cluster 2 : Cluster Component 67------ */
25305  +GC2_CLUS68 = 0 ; /*---Global Cluster 2 : Cluster Component 68------ */
25306  +GC2_CLUS69 = 0 ; /*---Global Cluster 2 : Cluster Component 69------ */
25307  +GC2_CLUS70 = 0 ; /*---Global Cluster 2 : Cluster Component 70------ */
25308  +GC2_CLUS71 = 0 ; /*---Global Cluster 2 : Cluster Component 71------ */
25309  +GC2_CLUS72 = 0 ; /*---Global Cluster 2 : Cluster Component 72------ */
25310  +GC2_CLUS73 = 0 ; /*---Global Cluster 2 : Cluster Component 73------ */
25311  +GC2_CLUS74 = 0 ; /*---Global Cluster 2 : Cluster Component 74------ */
25312  +GC2_CLUS75 = 0 ; /*---Global Cluster 2 : Cluster Component 75------ */
25313  +GC2_CLUS76 = 0 ; /*---Global Cluster 2 : Cluster Component 76------ */
25314  +GC2_CLUS77 = 0 ; /*---Global Cluster 2 : Cluster Component 77------ */
25315  +GC2_CLUS78 = 0 ; /*---Global Cluster 2 : Cluster Component 78------ */
25316  +GC2_CLUS79 = 0 ; /*---Global Cluster 2 : Cluster Component 79------ */
25317  +GC2_CLUS80 = 0 ; /*---Global Cluster 2 : Cluster Component 80------ */
25318  +GC2_CLUS81 = 0 ; /*---Global Cluster 2 : Cluster Component 81------ */
25319  +GC2_CLUS82 = 0 ; /*---Global Cluster 2 : Cluster Component 82------ */
25320  +GC2_CLUS83 = 0 ; /*---Global Cluster 2 : Cluster Component 83------ */
25321  +GC2_CLUS84 = 0 ; /*---Global Cluster 2 : Cluster Component 84------ */
25322  +GC2_CLUS85 = 0 ; /*---Global Cluster 2 : Cluster Component 85------ */
25323  +GC2_CLUS86 = 0 ; /*---Global Cluster 2 : Cluster Component 86------ */
25324  +GC2_CLUS87 = 0 ; /*---Global Cluster 2 : Cluster Component 87------ */
25325  +GC2_CLUS88 = 0 ; /*---Global Cluster 2 : Cluster Component 88------ */
25326  +GC2_CLUS89 = 0 ; /*---Global Cluster 2 : Cluster Component 89------ */
25327  +GC2_CLUS90 = 0 ; /*---Global Cluster 2 : Cluster Component 90------ */
25328  +GC2_CLUS91 = 0 ; /*---Global Cluster 2 : Cluster Component 91------ */
25329  +GC2_CLUS92 = 0 ; /*---Global Cluster 2 : Cluster Component 92------ */
25330  +GC2_CLUS93 = 0 ; /*---Global Cluster 2 : Cluster Component 93------ */
25331  +GC2_CLUS94 = 0 ; /*---Global Cluster 2 : Cluster Component 94------ */
25332  +GC2_CLUS95 = 0 ; /*---Global Cluster 2 : Cluster Component 95------ */
25333  +GC2_CLUS96 = 0 ; /*---Global Cluster 2 : Cluster Component 96------ */
25334  +GC2_CLUS97 = 0 ; /*---Global Cluster 2 : Cluster Component 97------ */
25335  +GC2_CLUS98 = 0 ; /*---Global Cluster 2 : Cluster Component 98------ */
25336  +GC2_CLUS99 = 0 ; /*---Global Cluster 2 : Cluster Component 99------ */
25337  +GC2_CLUS100 = 0 ; /*---Global Cluster 2 : Cluster Component 100------ */
25338  +GC2_CLUS101 = 0 ; /*---Global Cluster 2 : Cluster Component 101------ */
25339  +GC2_CLUS102 = 0 ; /*---Global Cluster 2 : Cluster Component 102------ */
25340  +GC2_CLUS103 = 0 ; /*---Global Cluster 2 : Cluster Component 103------ */
25341  +GC2_CLUS104 = 0 ; /*---Global Cluster 2 : Cluster Component 104------ */
25342  +GC2_CLUS105 = 0 ; /*---Global Cluster 2 : Cluster Component 105------ */
25343  +GC2_CLUS106 = 0 ; /*---Global Cluster 2 : Cluster Component 106------ */
25344  +GC2_CLUS107 = 0 ; /*---Global Cluster 2 : Cluster Component 107------ */
25345  +GC2_CLUS108 = 0 ; /*---Global Cluster 2 : Cluster Component 108------ */
25346  +GC2_CLUS109 = 0 ; /*---Global Cluster 2 : Cluster Component 109------ */
25347  +GC2_CLUS110 = 0 ; /*---Global Cluster 2 : Cluster Component 110------ */
25348  +GC2_CLUS111 = 0 ; /*---Global Cluster 2 : Cluster Component 111------ */
25349  +GC2_CLUS112 = 0 ; /*---Global Cluster 2 : Cluster Component 112------ */
25350  +GC2_CLUS113 = 0 ; /*---Global Cluster 2 : Cluster Component 113------ */
25351  +GC2_CLUS78 = GC2_CLUS78+0.70353556661398 * (ACTBUY1 - 0.37512021095082)/0.48416145062171;
25352  +GC2_CLUS104 = GC2_CLUS104+1 * (ACTBUY10 - 0.00006204436171)/0.00787670215937;
25353  +GC2_CLUS60 = GC2_CLUS60+0.68397308788197 * (ACTBUY2 - 0.13730417248332)/0.34417351938694;
25354  +GC2_CLUS59 = GC2_CLUS59+1 * (ACTBUY4 - 0.02196370404839)/0.14656727523669;
25355  +GC2_CLUS30 = GC2_CLUS30+0.57714998674326 * (ACTBUY6 - 0.00499457111834)/0.07049666340397;
25356  +GC2_CLUS39 = GC2_CLUS39+0.66549016136596 * (ACTBUY7 - 0.00186133085155)/0.04310364179361;
25357  +GC2_CLUS113 = GC2_CLUS113+0.65332668135995 * (ACTBUY8 - 0.00105475414921)/0.03246035012406;
25358  +GC2_CLUS49 = GC2_CLUS49+0.68252296374203 * (ACTBUY9 - 0.00024817744687)/0.01575193804466;
25359  +GC2_CLUS10 = GC2_CLUS10+0.39970826371579 * (BUYPROP - 0.18928931964407)/0.25656954904129;
25360  +GC2_CLUS1 = GC2_CLUS1+-0.33332429688878 * (CCPAYM0 - 0.58303086706995)/0.49306532733706;
25361  +GC2_CLUS1 = GC2_CLUS1+0.33332429688878 * (CCPAYM1 - 0.41696913293004)/0.49306532733706;
25362  +GC2_CLUS45 = GC2_CLUS45+0.62731005863842 * (DEPT073 - 0.00555297037381)/0.07431222112026;
25363  +GC2_CLUS27 = GC2_CLUS27+0.64067029032571 * (DEPT074 - 0.00065146579804)/0.02551590852213;
25364  +GC2_CLUS7 = GC2_CLUS7+0.17669683248332 * (DEPT075 - 0.00077555452148)/0.02783841012245;
25365  +GC2_CLUS73 = GC2_CLUS73+1 * (DEPT076 - 0.00006204436171)/0.00787670215937;
25366  +GC2_CLUS98 = GC2_CLUS98+0.70707575816053 * (DEPT077 - 0.00012408872343)/0.01113899342716;
25367  +GC2_CLUS58 = GC2_CLUS58+1 * (DEPT078 - 0.00003102218085)/0.00556975590661;
25368  +GC2_CLUS1 = GC2_CLUS1+0.00329291728751 * (DEPT1110 - 0.00003102218085)/0.00556975590661;
25369  +GC2_CLUS6 = GC2_CLUS6+0.34430827911286 * (DEPT1111 - 0.00009306654257)/0.009646800928;
25370  +GC2_CLUS17 = GC2_CLUS17+0.57735623987417 * (DEPT1113 - 0.00006204436171)/0.00787670215937;
25371  +GC2_CLUS107 = GC2_CLUS107+1 * (DEPT1116 - 0.00003102218085)/0.00556975590661;
25372  +GC2_CLUS80 = GC2_CLUS80+1 * (DEPT1118 - 0.00003102218085)/0.00556975590661;
25373  +GC2_CLUS84 = GC2_CLUS84+1 * (DEPT113 - 0.03601675197766)/0.18633470601066;
25374  +GC2_CLUS69 = GC2_CLUS69+0.68987520962959 * (DEPT114 - 0.00210950829843)/0.04588162571985;
25375  +GC2_CLUS45 = GC2_CLUS45+0.64775444987474 * (DEPT115 - 0.00390879478827)/0.06239901361948;
25376  +GC2_CLUS36 = GC2_CLUS36+0.47773193756148 * (DEPT116 - 0.00055839925546)/0.02362424092676;
25377  +GC2_CLUS66 = GC2_CLUS66+0.52357424607076 * (DEPT117 - 0.0006824879789)/0.02611595963267;
25378  +GC2_CLUS18 = GC2_CLUS18+0.59586828169466 * (DEPT118 - 0.00018613308515)/0.01364200179552;
25379  +GC2_CLUS88 = GC2_CLUS88+1 * (DEPT119 - 0.00018613308515)/0.01364200179552;
25380  +GC2_CLUS19 = GC2_CLUS19+0.63345348271587 * (DEPT1210 - 0.00006204436171)/0.00787670215937;
25381  +GC2_CLUS38 = GC2_CLUS38+0.66418116073498 * (DEPT1211 - 0.00012408872343)/0.01113899342716;
25382  +GC2_CLUS108 = GC2_CLUS108+1 * (DEPT1212 - 0.00003102218085)/0.00556975590661;
25383  +GC2_CLUS70 = GC2_CLUS70+1 * (DEPT1215 - 0.00006204436171)/0.00787670215937;
25384  +GC2_CLUS6 = GC2_CLUS6+0.40886734513699 * (DEPT1216 - 0.00003102218085)/0.00556975590661;
25385  +GC2_CLUS4 = GC2_CLUS4+0.02178413003067 * (DEPT124 - 0.00245075228788)/0.04944514076042;
25386  +GC2_CLUS95 = GC2_CLUS95+1 * (DEPT126 - 0.00071351015976)/0.02670249393877;
25387  +GC2_CLUS66 = GC2_CLUS66+0.6406563678686 * (DEPT127 - 0.00105475414921)/0.03246035012406;
25388  +GC2_CLUS96 = GC2_CLUS96+1 * (DEPT128 - 0.00034124398945)/0.01846992487371;
25389  +GC2_CLUS63 = GC2_CLUS63+1 * (DEPT129 - 0.00046533271288)/0.02156688683426;
25390  +GC2_CLUS83 = GC2_CLUS83+1 * (DEPT1710 - 0.00040328835117)/0.02007830211705;
25391  +GC2_CLUS2 = GC2_CLUS2+0.02514555127208 * (DEPT1711 - 0.00015511090429)/0.01245358005496;
25392  +GC2_CLUS64 = GC2_CLUS64+0.68226069224856 * (DEPT1712 - 0.00018613308515)/0.01364200179552;
25393  +GC2_CLUS102 = GC2_CLUS102+1 * (DEPT1713 - 0.00009306654257)/0.009646800928;
25394  +GC2_CLUS14 = GC2_CLUS14+0.57735474715094 * (DEPT1714 - 0.00012408872343)/0.01113899342716;
25395  +GC2_CLUS42 = GC2_CLUS42+0.67786792202818 * (DEPT1715 - 0.00006204436171)/0.00787670215937;
25396  +GC2_CLUS30 = GC2_CLUS30+0.51627402313528 * (DEPT1716 - 0.00003102218085)/0.00556975590661;
25397  +GC2_CLUS94 = GC2_CLUS94+1 * (DEPT1717 - 0.00012408872343)/0.01113899342716;
25398  +GC2_CLUS29 = GC2_CLUS29+0.64551725438192 * (DEPT1723 - 0.00003102218085)/0.00556975590661;
25399  +GC2_CLUS86 = GC2_CLUS86+0.69854849681034 * (DEPT173 - 0.03449666511555)/0.18250391362458;
25400  +GC2_CLUS24 = GC2_CLUS24+1 * (DEPT1734 - 0.00003102218085)/0.00556975590661;
25401  +GC2_CLUS52 = GC2_CLUS52+0.50277107424889 * (DEPT174 - 0.00499457111834)/0.07049666340397;
25402  +GC2_CLUS46 = GC2_CLUS46+0.68897448677127 * (DEPT175 - 0.00536683728866)/0.07306298617482;
25403  +GC2_CLUS54 = GC2_CLUS54+0.69824018440402 * (DEPT176 - 0.00161315340468)/0.04013229503948;
25404  +GC2_CLUS35 = GC2_CLUS35+0.44094101442433 * (DEPT177 - 0.0013649759578)/0.03692093019532;
25405  +GC2_CLUS23 = GC2_CLUS23+0.63774481204568 * (DEPT178 - 0.00058942143632)/0.02427122357082;
25406  +GC2_CLUS36 = GC2_CLUS36+0.60850012622475 * (DEPT179 - 0.00046533271288)/0.02156688683426;
25407  +GC2_CLUS53 = GC2_CLUS53+0.67169600462885 * (DEPT1810 - 0.00015511090429)/0.01245358005496;
25408  +GC2_CLUS62 = GC2_CLUS62+1 * (DEPT1811 - 0.00012408872343)/0.01113899342716;
25409  +GC2_CLUS20 = GC2_CLUS20+0.0042240149445 * (DEPT1812 - 0.00003102218085)/0.00556975590661;
25410  +GC2_CLUS39 = GC2_CLUS39+0.66549016136596 * (DEPT1813 - 0.00003102218085)/0.00556975590661;
25411  +GC2_CLUS85 = GC2_CLUS85+1 * (DEPT183 - 0.02953311617806)/0.16929796330267;
25412  +GC2_CLUS78 = GC2_CLUS78+-0.70353556661397 * (DEPT184 - 0.00341243989452)/0.05831724146293;
25413  +GC2_CLUS54 = GC2_CLUS54+0.69824018440403 * (DEPT185 - 0.00310221808593)/0.0556119615809;
25414  +GC2_CLUS93 = GC2_CLUS93+1 * (DEPT186 - 0.00062044361718)/0.02490136347819;
25415  +GC2_CLUS49 = GC2_CLUS49+0.68252296374204 * (DEPT187 - 0.00071351015976)/0.02670249393877;
25416  +GC2_CLUS35 = GC2_CLUS35+0.62426814790219 * (DEPT188 - 0.00009306654257)/0.009646800928;
25417  +GC2_CLUS32 = GC2_CLUS32+0.59587096142352 * (DEPT189 - 0.00009306654257)/0.009646800928;
25418  +GC2_CLUS91 = GC2_CLUS91+1 * (DEPT1910 - 0.00015511090429)/0.01245358005496;
25419  +GC2_CLUS41 = GC2_CLUS41+0.54204900992923 * (DEPT1911 - 0.00009306654257)/0.009646800928;
25420  +GC2_CLUS103 = GC2_CLUS103+1 * (DEPT1912 - 0.00006204436171)/0.00787670215937;
25421  +GC2_CLUS23 = GC2_CLUS23+0.63774481204568 * (DEPT1913 - 0.00003102218085)/0.00556975590661;
25422  +GC2_CLUS82 = GC2_CLUS82+1 * (DEPT1914 - 0.00003102218085)/0.00556975590661;
25423  +GC2_CLUS18 = GC2_CLUS18+0.59586828169466 * (DEPT1915 - 0.00003102218085)/0.00556975590661;
25424  +GC2_CLUS109 = GC2_CLUS109+1 * (DEPT1918 - 0.00003102218085)/0.00556975590661;
25425  +GC2_CLUS14 = GC2_CLUS14+0.57735474715094 * (DEPT1920 - 0.00003102218085)/0.00556975590661;
25426  +GC2_CLUS45 = GC2_CLUS45+0.37224529748561 * (DEPT193 - 0.01091980766247)/0.1039273810436;
25427  +GC2_CLUS52 = GC2_CLUS52+0.55631930384165 * (DEPT194 - 0.00331937335194)/0.05751919460555;
25428  +GC2_CLUS86 = GC2_CLUS86+0.69854849681035 * (DEPT195 - 0.00210950829843)/0.04588162571985;
25429  +GC2_CLUS35 = GC2_CLUS35+0.52925200332639 * (DEPT196 - 0.00080657670234)/0.02838927858765;
25430  +GC2_CLUS90 = GC2_CLUS90+1 * (DEPT197 - 0.00034124398945)/0.01846992487371;
25431  +GC2_CLUS100 = GC2_CLUS100+1 * (DEPT198 - 0.00027919962773)/0.01670719409516;
25432  +GC2_CLUS77 = GC2_CLUS77+1 * (DEPT203 - 0.00859314409803)/0.0923014965646;
25433  +GC2_CLUS52 = GC2_CLUS52+0.6058886256251 * (DEPT204 - 0.00012408872343)/0.01113899342716;
25434  +GC2_CLUS53 = GC2_CLUS53+0.67169600462885 * (DEPT205 - 0.0005273770746)/0.02295899170903;
25435  +GC2_CLUS113 = GC2_CLUS113+0.65332668135995 * (DEPT206 - 0.00003102218085)/0.00556975590661;
25436  +GC2_CLUS50 = GC2_CLUS50+1 * (DEPT207 - 0.00003102218085)/0.00556975590661;
25437  +GC2_CLUS87 = GC2_CLUS87+1 * (DEPT208 - 0.00003102218085)/0.00556975590661;
25438  +GC2_CLUS41 = GC2_CLUS41+0.47434059563156 * (DEPT213 - 0.00527377074608)/0.07243010999791;
25439  +GC2_CLUS89 = GC2_CLUS89+1 * (DEPT214 - 0.00012408872343)/0.01113899342716;
25440  +GC2_CLUS81 = GC2_CLUS81+1 * (DEPT215 - 0.00024817744687)/0.01575193804466;
25441  +GC2_CLUS57 = GC2_CLUS57+1 * (DEPT216 - 0.00006204436171)/0.00787670215937;
25442  +GC2_CLUS9 = GC2_CLUS9+0.49999999999999 * (DEPT219 - 0.00003102218085)/0.00556975590661;
25443  +GC2_CLUS79 = GC2_CLUS79+1 * (DEPT2610 - 0.00003102218085)/0.00556975590661;
25444  +GC2_CLUS31 = GC2_CLUS31+0.65969471433918 * (DEPT2611 - 0.00009306654257)/0.009646800928;
25445  +GC2_CLUS51 = GC2_CLUS51+1 * (DEPT2614 - 0.00003102218085)/0.00556975590661;
25446  +GC2_CLUS27 = GC2_CLUS27+0.64067029032571 * (DEPT2615 - 0.00003102218085)/0.00556975590661;
25447  +GC2_CLUS110 = GC2_CLUS110+1 * (DEPT2625 - 0.00003102218085)/0.00556975590661;
25448  +GC2_CLUS60 = GC2_CLUS60+0.68397308788197 * (DEPT263 - 0.03750581665891)/0.19000065864136;
25449  +GC2_CLUS67 = GC2_CLUS67+1 * (DEPT264 - 0.00719714595936)/0.0845314658605;
25450  +GC2_CLUS10 = GC2_CLUS10+0.06806844783012 * (DEPT265 - 0.00456026058631)/0.06737659414192;
25451  +GC2_CLUS7 = GC2_CLUS7+0.47478642904489 * (DEPT2655 - 0.00003102218085)/0.00556975590661;
25452  +GC2_CLUS37 = GC2_CLUS37+0.68491175726902 * (DEPT266 - 0.00158213122382)/0.03974515177532;
25453  +GC2_CLUS64 = GC2_CLUS64+0.68226069224856 * (DEPT267 - 0.00093066542577)/0.03049308336231;
25454  +GC2_CLUS6 = GC2_CLUS6+0.21561426346472 * (DEPT268 - 0.00034124398945)/0.01846992487371;
25455  +GC2_CLUS44 = GC2_CLUS44+0.66346428541317 * (DEPT269 - 0.00027919962773)/0.01670719409516;
25456  +GC2_CLUS4 = GC2_CLUS4+0.40749109174143 * (DOLINDEA - 47.8585866898046)/37.591191668842;
25457  +GC2_CLUS2 = GC2_CLUS2+0.36456818827751 * (DOLL24 - 45.4938073522568)/93.9875146751151;
25458  +GC2_CLUS15 = GC2_CLUS15+0.57886604578675 * (DOLLARQ16 - 7.79008624166279)/31.0104071776129;
25459  +GC2_CLUS10 = GC2_CLUS10+0.37752072046688 * (DOLLARQ20 - 8.71046657360012)/32.6472704396304;
25460  +GC2_CLUS16 = GC2_CLUS16+0.57237976067252 * (DOLLARQ21 - 4.74636513106871)/24.268088572003;
25461  +GC2_CLUS2 = GC2_CLUS2+0.47693471375806 * (DOLLARQ22 - 4.88413153404684)/24.8521912523649;
25462  +GC2_CLUS4 = GC2_CLUS4+0.40652407151951 * (DOLNETDA - 45.411597554134)/36.1502695431938;
25463  +GC2_CLUS1 = GC2_CLUS1+0.33332429688878 * (METHPAYMCC - 0.41696913293004)/0.49306532733706;
25464  +GC2_CLUS20 = GC2_CLUS20+0.33331284650558 * (METHPAYMCK - 0.3029315960912)/0.45953301856693;
25465  +GC2_CLUS20 = GC2_CLUS20+-0.33331284650558 * (PCPAYM0 - 0.69706840390879)/0.45953301856693;
25466  +GC2_CLUS20 = GC2_CLUS20+0.33331284650558 * (PCPAYM1 - 0.3029315960912)/0.45953301856693;
25467  +GC2_CLUS99 = GC2_CLUS99+1 * (TOTORDQ013 - 0.00077555452148)/0.02783841012245;
25468  +GC2_CLUS6 = GC2_CLUS6+0.24599420649499 * (TOTORDQ014 - 0.00024817744687)/0.01575193804466;
25469  +GC2_CLUS22 = GC2_CLUS22+0.63612934622951 * (TOTORDQ015 - 0.00009306654257)/0.009646800928;
25470  +GC2_CLUS41 = GC2_CLUS41+0.59862385735495 * (TOTORDQ023 - 0.00120986505351)/0.03476260589299;
25471  +GC2_CLUS56 = GC2_CLUS56+0.67262738415027 * (TOTORDQ024 - 0.00018613308515)/0.01364200179552;
25472  +GC2_CLUS12 = GC2_CLUS12+0.54119783878849 * (TOTORDQ025 - 0.00003102218085)/0.00556975590661;
25473  +GC2_CLUS25 = GC2_CLUS25+0.34009901812203 * (TOTORDQ032 - 0.00384675042655)/0.06190373023441;
25474  +GC2_CLUS56 = GC2_CLUS56+0.67262738415027 * (TOTORDQ033 - 0.00046533271288)/0.02156688683426;
25475  +GC2_CLUS26 = GC2_CLUS26+1 * (TOTORDQ034 - 0.00003102218085)/0.00556975590661;
25476  +GC2_CLUS66 = GC2_CLUS66+0.51162142287849 * (TOTORDQ042 - 0.00604932526756)/0.07754300397319;
25477  +GC2_CLUS21 = GC2_CLUS21+0.64068097272847 * (TOTORDQ044 - 0.00021715526601)/0.01473481743971;
25478  +GC2_CLUS11 = GC2_CLUS11+0.60779357584955 * (TOTORDQ045 - 0.00006204436171)/0.00787670215937;
25479  +GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ046 - 0.00003102218085)/0.00556975590661;
25480  +GC2_CLUS43 = GC2_CLUS43+0.54431506285932 * (TOTORDQ052 - 0.00772452303396)/0.08755051436602;
25481  +GC2_CLUS25 = GC2_CLUS25+0.50763358740718 * (TOTORDQ053 - 0.00133395377695)/0.03649952975734;
25482  +GC2_CLUS17 = GC2_CLUS17+0.57735623987417 * (TOTORDQ054 - 0.00006204436171)/0.00787670215937;
25483  +GC2_CLUS112 = GC2_CLUS112+0.6494013995197 * (TOTORDQ055 - 0.00003102218085)/0.00556975590661;
25484  +GC2_CLUS34 = GC2_CLUS34+0.53399486213598 * (TOTORDQ062 - 0.00626648053358)/0.07891390842548;
25485  +GC2_CLUS43 = GC2_CLUS43+0.35716547598315 * (TOTORDQ063 - 0.00086862106406)/0.02946003200026;
25486  +GC2_CLUS11 = GC2_CLUS11+0.60779357584955 * (TOTORDQ064 - 0.00012408872343)/0.01113899342716;
25487  +GC2_CLUS46 = GC2_CLUS46+0.68897448677127 * (TOTORDQ065 - 0.00006204436171)/0.00787670215937;
25488  +GC2_CLUS34 = GC2_CLUS34+0.62858790425642 * (TOTORDQ073 - 0.0008375988832)/0.02892962624192;
25489  +GC2_CLUS55 = GC2_CLUS55+1 * (TOTORDQ074 - 0.00012408872343)/0.01113899342716;
25490  +GC2_CLUS101 = GC2_CLUS101+1 * (TOTORDQ075 - 0.00006204436171)/0.00787670215937;
25491  +GC2_CLUS30 = GC2_CLUS30+0.52386769059736 * (TOTORDQ082 - 0.01002016441755)/0.09959954048469;
25492  +GC2_CLUS40 = GC2_CLUS40+0.67110241524981 * (TOTORDQ083 - 0.00117884287265)/0.03431457023532;
25493  +GC2_CLUS38 = GC2_CLUS38+0.66418116073498 * (TOTORDQ084 - 0.00043431053203)/0.02083591548788;
25494  +GC2_CLUS21 = GC2_CLUS21+0.64068097272847 * (TOTORDQ085 - 0.00009306654257)/0.009646800928;
25495  +GC2_CLUS111 = GC2_CLUS111+1 * (TOTORDQ086 - 0.00003102218085)/0.00556975590661;
25496  +GC2_CLUS43 = GC2_CLUS43+0.53531037024411 * (TOTORDQ092 - 0.00732123468279)/0.08525174291693;
25497  +GC2_CLUS19 = GC2_CLUS19+0.63345348271587 * (TOTORDQ093 - 0.00102373196835)/0.03197992601749;
25498  +GC2_CLUS97 = GC2_CLUS97+1 * (TOTORDQ094 - 0.00015511090429)/0.01245358005496;
25499  +GC2_CLUS20 = GC2_CLUS20+-0.00259612740039 * (TOTORDQ095 - 0.00006204436171)/0.00787670215937;
25500  +GC2_CLUS3 = GC2_CLUS3+0.06870363678907 * (TOTORDQ103 - 0.00089964324492)/0.02998102352496;
25501  +GC2_CLUS6 = GC2_CLUS6+0.1734756877022 * (TOTORDQ113 - 0.00055839925546)/0.02362424092676;
25502  +GC2_CLUS5 = GC2_CLUS5+0.30154120549812 * (TOTORDQ114 - 0.00015511090429)/0.01245358005496;
25503  +GC2_CLUS33 = GC2_CLUS33+0.65467906584889 * (TOTORDQ117 - 0.00003102218085)/0.00556975590661;
25504  +GC2_CLUS40 = GC2_CLUS40+0.67110241524981 * (TOTORDQ123 - 0.00164417558554)/0.04051571541781;
25505  +GC2_CLUS34 = GC2_CLUS34+0.45168699341674 * (TOTORDQ124 - 0.00021715526601)/0.01473481743971;
25506  +GC2_CLUS5 = GC2_CLUS5+0.32466521308135 * (TOTORDQ125 - 0.00012408872343)/0.01113899342716;
25507  +GC2_CLUS105 = GC2_CLUS105+1 * (TOTORDQ126 - 0.00003102218085)/0.00556975590661;
25508  +GC2_CLUS98 = GC2_CLUS98+-0.70707575815949 * (TOTORDQ127 - 0.00006204436171)/0.00787670215937;
25509  +GC2_CLUS8 = GC2_CLUS8+0.14736096434836 * (TOTORDQ133 - 0.00120986505351)/0.03476260589299;
25510  +GC2_CLUS5 = GC2_CLUS5+0.32466521308135 * (TOTORDQ134 - 0.00012408872343)/0.01113899342716;
25511  +GC2_CLUS32 = GC2_CLUS32+0.59587096142352 * (TOTORDQ135 - 0.00006204436171)/0.00787670215937;
25512  +GC2_CLUS43 = GC2_CLUS43+0.43483115815083 * (TOTORDQ142 - 0.00710407941678)/0.08398708411191;
25513  +GC2_CLUS69 = GC2_CLUS69+0.68987520962959 * (TOTORDQ143 - 0.0006824879789)/0.02611595963267;
25514  +GC2_CLUS47 = GC2_CLUS47+0.67314490125425 * (TOTORDQ144 - 0.00009306654257)/0.009646800928;
25515  +GC2_CLUS9 = GC2_CLUS9+0.5 * (TOTORDQ145 - 0.00003102218085)/0.00556975590661;
25516  +GC2_CLUS5 = GC2_CLUS5+0.41753813304935 * (TOTORDQ146 - 0.00003102218085)/0.00556975590661;
25517  +GC2_CLUS33 = GC2_CLUS33+0.65467906584889 * (TOTORDQ153 - 0.00111679851093)/0.03340038742182;
25518  +GC2_CLUS65 = GC2_CLUS65+1 * (TOTORDQ154 - 0.00012408872343)/0.01113899342716;
25519  +GC2_CLUS25 = GC2_CLUS25+0.60980192262847 * (TOTORDQ155 - 0.00003102218085)/0.00556975590661;
25520  +GC2_CLUS13 = GC2_CLUS13+0.57735474715094 * (TOTORDQ158 - 0.00003102218085)/0.00556975590661;
25521  +GC2_CLUS15 = GC2_CLUS15+0.57886604578675 * (TOTORDQ161 - 0.10696447960291)/0.30907287673359;
25522  +GC2_CLUS61 = GC2_CLUS61+1 * (TOTORDQ162 - 0.01495269117418)/0.12136541988586;
25523  +GC2_CLUS42 = GC2_CLUS42+0.67786792202819 * (TOTORDQ163 - 0.00198541957499)/0.04451448253965;
25524  +GC2_CLUS31 = GC2_CLUS31+0.65969471433917 * (TOTORDQ164 - 0.00046533271288)/0.02156688683426;
25525  +GC2_CLUS13 = GC2_CLUS13+0.57735474715094 * (TOTORDQ165 - 0.00012408872343)/0.01113899342716;
25526  +GC2_CLUS28 = GC2_CLUS28+0.64441966911372 * (TOTORDQ166 - 0.00006204436171)/0.00787670215937;
25527  +GC2_CLUS106 = GC2_CLUS106+1 * (TOTORDQ167 - 0.00003102218085)/0.00556975590661;
25528  +GC2_CLUS36 = GC2_CLUS36+0.54512403750316 * (TOTORDQ173 - 0.0013649759578)/0.03692093019532;
25529  +GC2_CLUS28 = GC2_CLUS28+0.64441966911372 * (TOTORDQ174 - 0.00037226617031)/0.01929090803403;
25530  +GC2_CLUS8 = GC2_CLUS8+0.48289057790701 * (TOTORDQ175 - 0.00003102218085)/0.00556975590661;
25531  +GC2_CLUS47 = GC2_CLUS47+0.67314490125425 * (TOTORDQ183 - 0.00096168760663)/0.03099665416568;
25532  +GC2_CLUS48 = GC2_CLUS48+1 * (TOTORDQ184 - 0.00012408872343)/0.01113899342716;
25533  +GC2_CLUS8 = GC2_CLUS8+0.48289057790701 * (TOTORDQ185 - 0.00003102218085)/0.00556975590661;
25534  +GC2_CLUS25 = GC2_CLUS25+0.2838334689879 * (TOTORDQ192 - 0.00573910345897)/0.07554034136585;
25535  +GC2_CLUS6 = GC2_CLUS6+0.1549639170417 * (TOTORDQ193 - 0.00071351015976)/0.02670249393877;
25536  +GC2_CLUS12 = GC2_CLUS12+0.54119783878849 * (TOTORDQ195 - 0.00006204436171)/0.00787670215937;
25537  +GC2_CLUS10 = GC2_CLUS10+0.42411828228172 * (TOTORDQ201 - 0.12349930200093)/0.32901456286213;
25538  +GC2_CLUS92 = GC2_CLUS92+1 * (TOTORDQ2010 - 0.00003102218085)/0.00556975590661;
25539  +GC2_CLUS37 = GC2_CLUS37+0.68491175726902 * (TOTORDQ202 - 0.01247091670544)/0.11097646148697;
25540  +GC2_CLUS7 = GC2_CLUS7+0.47478642904489 * (TOTORDQ2027 - 0.00003102218085)/0.00556975590661;
25541  +GC2_CLUS68 = GC2_CLUS68+1 * (TOTORDQ203 - 0.00189235303241)/0.04346067910265;
25542  +GC2_CLUS6 = GC2_CLUS6+0.15819736892783 * (TOTORDQ204 - 0.0006824879789)/0.02611595963267;
25543  +GC2_CLUS44 = GC2_CLUS44+0.66346428541317 * (TOTORDQ205 - 0.00018613308515)/0.01364200179552;
25544  +GC2_CLUS3 = GC2_CLUS3+0.22278771013915 * (TOTORDQ207 - 0.00006204436171)/0.00787670215937;
25545  +GC2_CLUS16 = GC2_CLUS16+0.57237976067252 * (TOTORDQ211 - 0.07280905847681)/0.25982685347701;
25546  +GC2_CLUS76 = GC2_CLUS76+1 * (TOTORDQ212 - 0.00763145649139)/0.08702558421647;
25547  +GC2_CLUS112 = GC2_CLUS112+0.6494013995197 * (TOTORDQ213 - 0.00089964324492)/0.02998102352496;
25548  +GC2_CLUS72 = GC2_CLUS72+1 * (TOTORDQ214 - 0.00015511090429)/0.01245358005496;
25549  +GC2_CLUS71 = GC2_CLUS71+1 * (TOTORDQ215 - 0.00003102218085)/0.00556975590661;
25550  +GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ219 - 0.00003102218085)/0.00556975590661;
25551  +GC2_CLUS2 = GC2_CLUS2+0.42748122980757 * (TOTORDQ221 - 0.07097874980611)/0.25679332657203;
25552  +GC2_CLUS75 = GC2_CLUS75+1 * (TOTORDQ222 - 0.00586319218241)/0.0763478617121;
25553  +GC2_CLUS29 = GC2_CLUS29+0.64551725438192 * (TOTORDQ223 - 0.00077555452148)/0.02783841012245;
25554  +GC2_CLUS22 = GC2_CLUS22+0.63612934622951 * (TOTORDQ224 - 0.00018613308515)/0.01364200179552;
25555  +GC2_CLUS3 = GC2_CLUS3+0.27163995838289 * (TOTORDQ225 - 0.00003102218085)/0.00556975590661;
25556  +GC2_CLUS74 = GC2_CLUS74+1 * (TOTORDQ226 - 0.00003102218085)/0.00556975590661;
25557  +GC2_CLUS4 = GC2_CLUS4+0.3088289367104 * (UNTLANPO - 2.67912081406979)/2.42439611488132;
25558  +
25559  +/*-------------------------------------------------*/
25560  +/* Varclus Score Code Begins: GCLUSTER 3*/
25561  +/*-------------------------------------------------*/
25562  +
25563  +GC3_CLUS1 = 0 ; /*---Global Cluster 3 : Cluster Component 1------ */
25564  +GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (DEPT0711 - 0.00006204436171)/0.00787670215937;
25565  +GC3_CLUS1 = GC3_CLUS1+0.04796917964258 * (DEPT199 - 0.00015511090429)/0.01245358005496;
25566  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (DEPT2622 - 0.00003102218085)/0.00556975590661;
25567  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ016 - 0.00003102218085)/0.00556975590661;
25568  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ028 - 0.00003102218085)/0.00556975590661;
25569  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ049 - 0.00003102218085)/0.00556975590661;
25570  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ069 - 0.00003102218085)/0.00556975590661;
25571  +GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (TOTORDQ078 - 0.00006204436171)/0.00787670215937;
25572  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ0810 - 0.00003102218085)/0.00556975590661;
25573  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ106 - 0.00003102218085)/0.00556975590661;
25574  +GC3_CLUS1 = GC3_CLUS1+0.09874611979456 * (TOTORDQ129 - 0.00003102218085)/0.00556975590661;
25575  +GC3_CLUS1 = GC3_CLUS1+0.05334450065098 * (TOTORDQ194 - 0.00012408872343)/0.01113899342716;
25576  +GC3_CLUS1 = GC3_CLUS1+0.07347212969273 * (TOTORDQ208 - 0.00006204436171)/0.00787670215937;
25577  +
25578  +/*-------------------------------------------------*/
25579  +/* Varclus Score Code Begins: GCLUSTER 4*/
25580  +/*-------------------------------------------------*/
25581  +
25582  +GC4_CLUS1 = 0 ; /*---Global Cluster 4 : Cluster Component 1------ */
25583  +GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ0416 - 0.00003102218085)/0.00556975590661;
25584  +GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ0823 - 0.00003102218085)/0.00556975590661;
25585  +GC4_CLUS1 = GC4_CLUS1+0.24999999999999 * (TOTORDQ1221 - 0.00003102218085)/0.00556975590661;
25586  +GC4_CLUS1 = GC4_CLUS1+0.25 * (TOTORDQ1610 - 0.00003102218085)/0.00556975590661;
25587  +
25588  +/*-------------------------------------------------*/
25589  +/* Varclus Score Code Begins: GCLUSTER 5*/
25590  +/*-------------------------------------------------*/
25591  +
25592  +GC5_CLUS1 = 0 ; /*---Global Cluster 5 : Cluster Component 1------ */
25593  +GC5_CLUS2 = 0 ; /*---Global Cluster 5 : Cluster Component 2------ */
25594  +GC5_CLUS3 = 0 ; /*---Global Cluster 5 : Cluster Component 3------ */
25595  +GC5_CLUS4 = 0 ; /*---Global Cluster 5 : Cluster Component 4------ */
25596  +GC5_CLUS5 = 0 ; /*---Global Cluster 5 : Cluster Component 5------ */
25597  +GC5_CLUS6 = 0 ; /*---Global Cluster 5 : Cluster Component 6------ */
25598  +GC5_CLUS7 = 0 ; /*---Global Cluster 5 : Cluster Component 7------ */
25599  +GC5_CLUS3 = GC5_CLUS3+0.46584247564733 * (ACTBUY0 - 0.39695982627578)/0.48927512608284;
25600  +GC5_CLUS2 = GC5_CLUS2+0.30919640480675 * (BOTHPAYM0 - 0.80645261361873)/0.39508434277919;
25601  +GC5_CLUS1 = GC5_CLUS1+0.30120355255709 * (DAYLAST - 1182.17608189855)/1226.0780195912;
25602  +GC5_CLUS6 = GC5_CLUS6+0.34736590127286 * (DEPT070 - 0.99270978749806)/0.08507226234284;
25603  +GC5_CLUS2 = GC5_CLUS2+0.18415939769064 * (DEPT110 - 0.95607259190321)/0.20493680444998;
25604  +GC5_CLUS2 = GC5_CLUS2+0.22269123339442 * (DEPT120 - 0.93829688227082)/0.24061928248315;
25605  +GC5_CLUS6 = GC5_CLUS6+0.47994471288021 * (DEPT170 - 0.94986815573134)/0.21822034675722;
25606  +GC5_CLUS6 = GC5_CLUS6+0.5124243913791 * (DEPT180 - 0.96209089498991)/0.1909794131409;
25607  +GC5_CLUS6 = GC5_CLUS6+0.50692052068599 * (DEPT190 - 0.98160384675042)/0.13438115568369;
25608  +GC5_CLUS7 = GC5_CLUS7+0.69209117872376 * (DEPT200 - 0.99066232356134)/0.09618092958834;
25609  +GC5_CLUS7 = GC5_CLUS7+0.69209117872377 * (DEPT210 - 0.99426089654102)/0.07554034136585;
25610  +GC5_CLUS3 = GC5_CLUS3+0.2143347187659 * (DEPT260 - 0.94732433690088)/0.22338864272858;
25611  +GC5_CLUS1 = GC5_CLUS1+0.26325511297008 * (METHPAYMDK - 0.08655188459748)/0.28118162916549;
25612  +GC5_CLUS1 = GC5_CLUS1+0.301209444711 * (MONLAST - 38.7579959671164)/40.2783526824403;
25613  +GC5_CLUS1 = GC5_CLUS1+0.17996233854645 * (TENURE - 83.4682798200713)/60.0499642836247;
25614  +GC5_CLUS2 = GC5_CLUS2+0.27025622569311 * (TOTORDQ010 - 0.93240266790755)/0.25105753944269;
25615  +GC5_CLUS2 = GC5_CLUS2+0.26794135607021 * (TOTORDQ020 - 0.93587715216379)/0.24497544765707;
25616  +GC5_CLUS2 = GC5_CLUS2+0.2076019813346 * (TOTORDQ030 - 0.94645571583682)/0.22511967032131;
25617  +GC5_CLUS3 = GC5_CLUS3+0.23186226466653 * (TOTORDQ040 - 0.91928028540406)/0.27240841454353;
25618  +GC5_CLUS2 = GC5_CLUS2+0.26895627760627 * (TOTORDQ050 - 0.92303396928804)/0.26654167550805;
25619  +GC5_CLUS2 = GC5_CLUS2+0.24380069908289 * (TOTORDQ060 - 0.92818365131068)/0.25818758435395;
25620  +GC5_CLUS2 = GC5_CLUS2+0.23486245182423 * (TOTORDQ070 - 0.92405770125639)/0.26490987723425;
25621  +GC5_CLUS3 = GC5_CLUS3+0.28470626429186 * (TOTORDQ080 - 0.89734760353652)/0.30350904378116;
25622  +GC5_CLUS5 = GC5_CLUS5+0.34171694062004 * (TOTORDQ090 - 0.91887699705289)/0.2730281558173;
25623  +GC5_CLUS5 = GC5_CLUS5+0.33889336426033 * (TOTORDQ100 - 0.93345742205677)/0.24923200086665;
25624  +GC5_CLUS5 = GC5_CLUS5+0.3462003434009 * (TOTORDQ110 - 0.92294090274546)/0.26668933083571;
25625  +GC5_CLUS3 = GC5_CLUS3+0.29888805736787 * (TOTORDQ120 - 0.89061579029005)/0.31212549820402;
25626  +GC5_CLUS5 = GC5_CLUS5+0.3380603013795 * (TOTORDQ130 - 0.90355203970839)/0.2952091712368;
25627  +GC5_CLUS5 = GC5_CLUS5+0.32450494073935 * (TOTORDQ140 - 0.9200868621064)/0.271162883384;
25628  +GC5_CLUS5 = GC5_CLUS5+0.33972226583648 * (TOTORDQ150 - 0.91378935939196)/0.2806791941105;
25629  +GC5_CLUS3 = GC5_CLUS3+0.29735414976665 * (TOTORDQ160 - 0.87538389948813)/0.33028822598524;
25630  +GC5_CLUS4 = GC5_CLUS4+0.39606761077979 * (TOTORDQ170 - 0.90532030401737)/0.29277655355917;
25631  +GC5_CLUS4 = GC5_CLUS4+0.43308794897106 * (TOTORDQ180 - 0.91667442221188)/0.27637799387312;
25632  +GC5_CLUS4 = GC5_CLUS4+0.37452554975409 * (TOTORDQ190 - 0.92560881029936)/0.26241051190929;
25633  +GC5_CLUS1 = GC5_CLUS1+0.11351555813635 * (TOTORDQ200 - 0.86108267411199)/0.34586560023062;
25634  +GC5_CLUS4 = GC5_CLUS4+0.37844592542621 * (TOTORDQ210 - 0.91844268652086)/0.27369333551993;
25635  +GC5_CLUS4 = GC5_CLUS4+0.36817602150559 * (TOTORDQ220 - 0.92213432604312)/0.26796424821009;
25636  +GC5_CLUS1 = GC5_CLUS1+0.14189323995962 * (UNITSLAP - 22.0808611006276)/19.5877886329162;
NOTE: %INCLUDE (level 1) ending.
25637   run;

NOTE: DATA STEP view saved on file EMWS2.VARCLUS_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           14.46 seconds
      cpu time            0.10 seconds
      

25638   quit;
25639   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

25641   *------------------------------------------------------------*;
25642   * VarClus: Computing metadata for TRAIN data;
25643   *------------------------------------------------------------*;

NOTE: View EMWS2.VARCLUS_TRAIN.VIEW used (Total process time):
      real time           5.12 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS2.VARCLUS_TRAIN.VIEW used (Total process time):
      real time           5.20 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS2.VARCLUS_VALIDATE.VIEW used (Total process time):
      real time           5.04 seconds
      cpu time            0.03 seconds
      
