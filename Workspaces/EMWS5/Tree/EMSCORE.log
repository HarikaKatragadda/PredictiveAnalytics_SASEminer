*------------------------------------------------------------*
* Score Log
Date:                December 12, 2017
Time:                11:41:31
*------------------------------------------------------------*
16624  %let EMEXCEPTIONSTRING=;
16625  *------------------------------------------------------------*;
16626  * SCORE: Tree;
16627  *------------------------------------------------------------*;
16628  %let EM_ACTION = SCORE;
16629  %let syscc = 0;
16630  %macro main;
16631  
16632    %if %upcase(&EM_ACTION) = CREATE %then %do;
16633      filename temp catalog 'sashelp.emmodl.tree_create.source';
16634      %include temp;
16635      filename temp;
16636  
16637      %em_tree_create;
16638    %end;
16639  
16640     %else
16641     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16642  
16643         filename temp catalog 'sashelp.emmodl.tree_train.source';
16644         %include temp;
16645         filename temp;
16646         %em_tree_train;
16647     %end;
16648  
16649    %else
16650    %if %upcase(&EM_ACTION) = SCORE %then %do;
16651      filename temp catalog 'sashelp.emmodl.tree_score.source';
16652      %include temp;
16653      filename temp;
16654  
16655      %em_tree_score;
16656  
16657    %end;
16658  
16659    %else
16660    %if %upcase(&EM_ACTION) = REPORT %then %do;
16661  
16662         filename temp catalog 'sashelp.emmodl.tree_report.source';
16663         %include temp;
16664         filename temp;
16665  
16666         %em_tree_report;
16667     %end;
16668  
16669    %else
16670    %if %upcase(&EM_ACTION) = OPENINT %then %do;
16671  
16672         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16673         %include temp;
16674         filename temp;
16675         %EM_TREE_OPENTREEVIEWER;
16676  
16677     %end;
16678  
16679    %else
16680    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16681  
16682         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16683         %include temp;
16684         filename temp;
16685         %EM_TREE_CLOSETREEVIEWER;
16686  
16687     %end;
16688  
16689  
16690     %doendm:
16691  %mend main;
16692  
16693  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
16695 +%macro em_tree_score;
16697 +   /* determine if multiple targets will be processed */
16698 +   %let em_tree_multipleTargets=N;
16699 +   %let em_tree_numTarget=1;
16700 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16701 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16702 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16703 +         %let em_tree_multipleTargets=N;
16704 +      %end;
16705 +      %else %do;
16706 +         /* create macro array of targets  */
16707 +         data _null_;
16708 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16709 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16710 +           if eof then
16711 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16712 +        run;
16714 +        %if &em_tree_numTarget gt 1 %then %do;
16715 +           %let em_tree_multipleTargets=Y;
16716 +        %end;
16717 +      %end;
16718 +   %end;
16720 +   /* build flow and publish scoring code */
16721 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16722 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16724 +   filename treeflow "&EM_USER_TREEFLOW";
16725 +   filename treepub "&EM_USER_TREEPUBLISH";
16727 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
16728 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
16730 +   %em_copyfile(infref=treeflow, outfref=flowref);
16731 +   %em_copyfile(infref=treepub, outfref=pubref);
16733 +   filename treeflow;
16734 +   filename treepub;
16736 +   /* if priors are used, add code to generate unadjusted residuals in export */
16737 +   %let useAdjPriors = N;
16738 +   data _null_;
16739 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
16740 +     if USE="Y" then call symput('useAdjPriors', 'Y');
16741 +   run;
16742 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
16743 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
16744 +      %include temp;
16745 +      filename temp;
16747 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
16748 +      filename adjref "&EM_USER_adjResidualCode";
16749 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
16751 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
16753 +      filename adjref;
16754 +   %end;
16756 +   /* LEAF */
16757 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
16758 +      data _null_;
16759 +        file flowref mod;
16760 +        put 'drop _LEAF_;';
16761 +      run;
16763 +      data _null_;
16764 +        file pubref mod;
16765 +        put 'drop _LEAF_;';
16766 +      run;
16768 +   %end;
16770 +   filename flowref;
16771 +   filename pubref;
16773 +   /* em_metachange code */
16774 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
16775 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
16776 +   %end;
16778 +   /* variable selection based on importance stat    */
16779 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
16780 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
16781 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
16782 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
16783 +     %let obs = %sysfunc(fetch(&dsid));
16784 +     %do %while(&obs=0);
16785 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
16786 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
16787 +       %EM_METACHANGE(name=&varname, role=REJECTED);
16788 +       %let obs = %sysfunc(fetch(&dsid));
16789 +     %end;
16790 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
16791 +   %end;
16793 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
16794 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16795 +    %let tree_pred_vars = ;
16796 +    %let tree_pred_lvl =;
16797 +    %let numpred= 0;
16799 +    data _null_;
16800 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
16801 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
16802 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
16803 +     if eof then
16804 +       call symput('numpred', strip(put(_N_, BEST.)));
16805 +    run;
16806 +   %end;
16808 +   %if &numpred ne 0 %then %do;
16809 +    %do i=1 %to &numpred;
16810 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
16811 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
16812 +    %end;
16813 +   %end;
16815 +   /* determine if multiple targets will be processed */
16816 +   %let em_tree_multipleTargets=N;
16817 +   %let em_tree_numTarget=1;
16818 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16819 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16820 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16821 +         %let em_tree_multipleTargets=N;
16822 +      %end;
16823 +      %else %do;
16824 +        data _null_;
16825 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16826 +          if eof then
16827 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16828 +        run;
16830 +        %if &em_tree_numTarget gt 1 %then %do;
16831 +           %let em_tree_multipleTargets=Y;
16832 +        %end;
16833 +     %end;
16834 +   %end;
16836 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
16837 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
16839 +      /* variable importance */
16840 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
16841 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
16843 +         %let validexist=0;
16844 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
16845 +           %let validexist=1;
16846 +         %end;
16848 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
16849 +         /* and the columns may not be generated                                                                                 */
16850 +         %let em_tree_cvexists=;
16851 +         %let em_tree_surrexists=.;
16852 +         data _null_;
16853 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
16854 +            if eof then do ;
16855 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
16856 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
16857 +            end;
16858 +         run;
16860 +         data &EM_USER_OUTIMPORT;
16861 +            set &EM_USER_OUTIMPORT;
16863 +            /* format columns based on Precison value specified */
16864 +            format importance 15.&EM_PROPERTY_PRECISION
16865 +                 %if &validexist %then %do;
16866 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
16867 +                 %end;
16868 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
16869 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
16870 +                 %end;
16871 +            ;
16872 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
16873 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
16874 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
16875 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
16876 +                 %if "&em_tree_surrexists" ne "" %then %do;
16877 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
16878 +                 %end;
16879 +                 %if &validexist %then %do;
16880 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
16881 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
16882 +                 %end;
16883 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
16884 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
16885 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
16886 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
16887 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
16888 +                 %end;
16889 +            ;
16890 +         run;
16892 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
16893 +      %end;
16894 +   %end;
16896 +   %doendm:
16897 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.

NOTE: The file FLOWREF is:
      Filename=\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=12Dec2017:11:41:34,
      Create Time=12Dec2017:11:41:34

NOTE: 266 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: The file PUBREF is:
      Filename=\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=12Dec2017:11:41:34,
      Create Time=12Dec2017:11:41:34

NOTE: 244 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.

NOTE: There were 1 observations read from the data set EMWS5.IDS_TARGETBUY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: The file FLOWREF is:
      Filename=\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10088,
      Last Modified=12Dec2017:11:41:34,
      Create Time=12Dec2017:11:41:34

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: The file PUBREF is:
      Filename=\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=9415,
      Last Modified=12Dec2017:11:41:34,
      Create Time=12Dec2017:11:41:34

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 2 observations read from the data set EMWS5.IDS_TARGETBUY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS5.TREE_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 9 observations read from the data set EMWS5.TREE_OUTIMPORT.
NOTE: The data set EMWS5.TREE_OUTIMPORT has 9 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      


NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

16898  
16899  *------------------------------------------------------------*;
16900  * End SCORE: Tree;
16901  *------------------------------------------------------------*;

16902  proc sort data=WORK.EM_METACHANGE;
16903  by key uname;
16904  run;

NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16905  filename x "\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\CDELTA_TRAIN.sas";
16906  data _null_;
16907  file x;
16908  put 'if upcase(NAME) = "DEMCLUSTERGROUP" then do;';
16909  put 'ROLE = "REJECTED";';
16910  put 'end;';
16911  put 'else ';
16912  put 'if upcase(NAME) = "DEMREG" then do;';
16913  put 'ROLE = "REJECTED";';
16914  put 'end;';
16915  put 'else ';
16916  put 'if upcase(NAME) = "DEMTVREG" then do;';
16917  put 'ROLE = "REJECTED";';
16918  put 'end;';
16919  put 'else ';
16920  put 'if upcase(NAME) = "PROMCLASS" then do;';
16921  put 'ROLE = "REJECTED";';
16922  put 'end;';
16923  put 'else ';
16924  put 'if upcase(NAME) = "PROMSPEND" then do;';
16925  put 'ROLE = "REJECTED";';
16926  put 'end;';
16927  put 'else ';
16928  put 'if upcase(NAME) = "PROMTIME" then do;';
16929  put 'ROLE = "REJECTED";';
16930  put 'end;';
16931  put 'else ';
16932  put 'if upcase(NAME) = "Q_TARGETBUY0" then do;';
16933  put 'ROLE = "ASSESS";';
16934  put 'end;';
16935  put 'else ';
16936  put 'if upcase(NAME) = "Q_TARGETBUY1" then do;';
16937  put 'ROLE = "ASSESS";';
16938  put 'end;';
16939  put 'else ';
16940  put 'if upcase(NAME) = "_NODE_" then do;';
16941  put 'ROLE = "SEGMENT";';
16942  put 'LEVEL = "NOMINAL";';
16943  put 'end;';
16944  run;

NOTE: The file X is:
      Filename=\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=12Dec2017:11:41:35,
      Create Time=12Dec2017:11:36:22

NOTE: 36 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 44.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16945  filename x;
NOTE: Fileref X has been deassigned.

16946  filename emflow "\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\EMFLOWSCORE.sas";
16947  *------------------------------------------------------------*;
16948  * Tree: Scoring DATA data;
16949  *------------------------------------------------------------*;
16950  data EMWS5.Tree_TRAIN
16951  / view=EMWS5.Tree_TRAIN
16952  ;
16953  set EMWS5.Part_TRAIN
16954  ;
16955  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\EMFLOWSCORE.sas.
16956 +****************************************************************;
16957 +******             DECISION TREE SCORING CODE             ******;
16958 +****************************************************************;
16959 +
16960 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
16961 +LENGTH F_TargetBuy  $   12;
16962 +LENGTH I_TargetBuy  $   12;
16963 +LENGTH _WARN_  $    4;
16964 +
16965 +******              LABELS FOR NEW VARIABLES              ******;
16966 +label _NODE_ = 'Node' ;
16967 +label _LEAF_ = 'Leaf' ;
16968 +label P_TargetBuy0 = 'Predicted: TargetBuy=0' ;
16969 +label P_TargetBuy1 = 'Predicted: TargetBuy=1' ;
16970 +label Q_TargetBuy0 = 'Unadjusted P: TargetBuy=0' ;
16971 +label Q_TargetBuy1 = 'Unadjusted P: TargetBuy=1' ;
16972 +label V_TargetBuy0 = 'Validated: TargetBuy=0' ;
16973 +label V_TargetBuy1 = 'Validated: TargetBuy=1' ;
16974 +label R_TargetBuy0 = 'Residual: TargetBuy=0' ;
16975 +label R_TargetBuy1 = 'Residual: TargetBuy=1' ;
16976 +label F_TargetBuy = 'From: TargetBuy' ;
16977 +label I_TargetBuy = 'Into: TargetBuy' ;
16978 +label U_TargetBuy = 'Unnormalized Into: TargetBuy' ;
16979 +label _WARN_ = 'Warnings' ;
16980 +
16981 +
16982 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
16983 +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
16984 +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
16985 +LENGTH _ARBFMT_1 $      1; DROP _ARBFMT_1;
16986 +_ARBFMT_1 = ' '; /* Initialize to avoid warning. */
16987 +
16988 +
16989 +_ARBFMT_12 = PUT( TargetBuy , BEST12.);
16990 + %DMNORMCP( _ARBFMT_12, F_TargetBuy );
16991 +
16992 +******             ASSIGN OBSERVATION TO NODE             ******;
16993 +IF  NOT MISSING(DemAge ) AND
16994 +  DemAge  <                 44.5 THEN DO;
16995 +  IF  NOT MISSING(DemAffl ) AND
16996 +    DemAffl  <                  9.5 THEN DO;
16997 +    _ARBFMT_1 = PUT( DemGender , $1.);
16998 +     %DMNORMIP( _ARBFMT_1);
16999 +    IF _ARBFMT_1 IN ('F' ) THEN DO;
17000 +      IF  NOT MISSING(DemAffl ) AND
17001 +        DemAffl  <                  6.5 THEN DO;
17002 +        _NODE_  =                   18;
17003 +        _LEAF_  =                    2;
17004 +        P_TargetBuy0  =      0.6383495145631;
17005 +        P_TargetBuy1  =     0.36165048543689;
17006 +        Q_TargetBuy0  =      0.6383495145631;
17007 +        Q_TargetBuy1  =     0.36165048543689;
17008 +        V_TargetBuy0  =     0.60089686098654;
17009 +        V_TargetBuy1  =     0.39910313901345;
17010 +        I_TargetBuy  = '0' ;
17011 +        U_TargetBuy  =                    0;
17012 +        END;
17013 +      ELSE DO;
17014 +        IF  NOT MISSING(DemAge ) AND
17015 +                          39.5 <= DemAge  THEN DO;
17016 +          _NODE_  =                   35;
17017 +          _LEAF_  =                    4;
17018 +          P_TargetBuy0  =     0.56326530612244;
17019 +          P_TargetBuy1  =     0.43673469387755;
17020 +          Q_TargetBuy0  =     0.56326530612244;
17021 +          Q_TargetBuy1  =     0.43673469387755;
17022 +          V_TargetBuy0  =     0.58273381294964;
17023 +          V_TargetBuy1  =     0.41726618705035;
17024 +          I_TargetBuy  = '0' ;
17025 +          U_TargetBuy  =                    0;
17026 +          END;
17027 +        ELSE DO;
17028 +          _NODE_  =                   34;
17029 +          _LEAF_  =                    3;
17030 +          P_TargetBuy0  =     0.39285714285714;
17031 +          P_TargetBuy1  =     0.60714285714285;
17032 +          Q_TargetBuy0  =     0.39285714285714;
17033 +          Q_TargetBuy1  =     0.60714285714285;
17034 +          V_TargetBuy0  =     0.36507936507936;
17035 +          V_TargetBuy1  =     0.63492063492063;
17036 +          I_TargetBuy  = '1' ;
17037 +          U_TargetBuy  =                    1;
17038 +          END;
17039 +        END;
17040 +      END;
17041 +    ELSE DO;
17042 +      _NODE_  =                    8;
17043 +      _LEAF_  =                    1;
17044 +      P_TargetBuy0  =     0.77363515312916;
17045 +      P_TargetBuy1  =     0.22636484687083;
17046 +      Q_TargetBuy0  =     0.77363515312916;
17047 +      Q_TargetBuy1  =     0.22636484687083;
17048 +      V_TargetBuy0  =     0.79864253393665;
17049 +      V_TargetBuy1  =     0.20135746606334;
17050 +      I_TargetBuy  = '0' ;
17051 +      U_TargetBuy  =                    0;
17052 +      END;
17053 +    END;
17054 +  ELSE DO;
17055 +    _ARBFMT_1 = PUT( DemGender , $1.);
17056 +     %DMNORMIP( _ARBFMT_1);
17057 +    IF _ARBFMT_1 IN ('F' ) THEN DO;
17058 +      _NODE_  =                   11;
17059 +      _LEAF_  =                    9;
17060 +      P_TargetBuy0  =     0.21991341991341;
17061 +      P_TargetBuy1  =     0.78008658008658;
17062 +      Q_TargetBuy0  =     0.21991341991341;
17063 +      Q_TargetBuy1  =     0.78008658008658;
17064 +      V_TargetBuy0  =     0.20677966101694;
17065 +      V_TargetBuy1  =     0.79322033898305;
17066 +      I_TargetBuy  = '1' ;
17067 +      U_TargetBuy  =                    1;
17068 +      END;
17069 +    ELSE DO;
17070 +      IF  NOT MISSING(DemAffl ) AND
17071 +                        14.5 <= DemAffl  THEN DO;
17072 +        _NODE_  =                   21;
17073 +        _LEAF_  =                    8;
17074 +        P_TargetBuy0  =     0.14666666666666;
17075 +        P_TargetBuy1  =     0.85333333333333;
17076 +        Q_TargetBuy0  =     0.14666666666666;
17077 +        Q_TargetBuy1  =     0.85333333333333;
17078 +        V_TargetBuy0  =     0.15094339622641;
17079 +        V_TargetBuy1  =     0.84905660377358;
17080 +        I_TargetBuy  = '1' ;
17081 +        U_TargetBuy  =                    1;
17082 +        END;
17083 +      ELSE DO;
17084 +        IF  NOT MISSING(DemAffl ) AND
17085 +                          11.5 <= DemAffl  THEN DO;
17086 +          _ARBFMT_1 = PUT( DemGender , $1.);
17087 +           %DMNORMIP( _ARBFMT_1);
17088 +          IF _ARBFMT_1 IN ('M' ) THEN DO;
17089 +            _NODE_  =                   51;
17090 +            _LEAF_  =                    7;
17091 +            P_TargetBuy0  =     0.36521739130434;
17092 +            P_TargetBuy1  =     0.63478260869565;
17093 +            Q_TargetBuy0  =     0.36521739130434;
17094 +            Q_TargetBuy1  =     0.63478260869565;
17095 +            V_TargetBuy0  =                 0.45;
17096 +            V_TargetBuy1  =                 0.55;
17097 +            I_TargetBuy  = '1' ;
17098 +            U_TargetBuy  =                    1;
17099 +            END;
17100 +          ELSE DO;
17101 +            _NODE_  =                   50;
17102 +            _LEAF_  =                    6;
17103 +            P_TargetBuy0  =      0.6590909090909;
17104 +            P_TargetBuy1  =     0.34090909090909;
17105 +            Q_TargetBuy0  =      0.6590909090909;
17106 +            Q_TargetBuy1  =     0.34090909090909;
17107 +            V_TargetBuy0  =     0.72222222222222;
17108 +            V_TargetBuy1  =     0.27777777777777;
17109 +            I_TargetBuy  = '0' ;
17110 +            U_TargetBuy  =                    0;
17111 +            END;
17112 +          END;
17113 +        ELSE DO;
17114 +          _NODE_  =                   36;
17115 +          _LEAF_  =                    5;
17116 +          P_TargetBuy0  =      0.6156462585034;
17117 +          P_TargetBuy1  =     0.38435374149659;
17118 +          Q_TargetBuy0  =      0.6156462585034;
17119 +          Q_TargetBuy1  =     0.38435374149659;
17120 +          V_TargetBuy0  =      0.6936416184971;
17121 +          V_TargetBuy1  =     0.30635838150289;
17122 +          I_TargetBuy  = '0' ;
17123 +          U_TargetBuy  =                    0;
17124 +          END;
17125 +        END;
17126 +      END;
17127 +    END;
17128 +  END;
17129 +ELSE DO;
17130 +  IF  NOT MISSING(DemAffl ) AND
17131 +                    12.5 <= DemAffl  THEN DO;
17132 +    IF  NOT MISSING(DemAffl ) AND
17133 +                      15.5 <= DemAffl  THEN DO;
17134 +      IF  NOT MISSING(DemAffl ) AND
17135 +                        18.5 <= DemAffl  THEN DO;
17136 +        _NODE_  =                   31;
17137 +        _LEAF_  =                   14;
17138 +        P_TargetBuy0  =     0.06779661016949;
17139 +        P_TargetBuy1  =      0.9322033898305;
17140 +        Q_TargetBuy0  =     0.06779661016949;
17141 +        Q_TargetBuy1  =      0.9322033898305;
17142 +        V_TargetBuy0  =     0.15151515151515;
17143 +        V_TargetBuy1  =     0.84848484848484;
17144 +        I_TargetBuy  = '1' ;
17145 +        U_TargetBuy  =                    1;
17146 +        END;
17147 +      ELSE DO;
17148 +        _ARBFMT_1 = PUT( DemGender , $1.);
17149 +         %DMNORMIP( _ARBFMT_1);
17150 +        IF _ARBFMT_1 IN ('F' ) THEN DO;
17151 +          _NODE_  =                   48;
17152 +          _LEAF_  =                   12;
17153 +          P_TargetBuy0  =     0.28971962616822;
17154 +          P_TargetBuy1  =     0.71028037383177;
17155 +          Q_TargetBuy0  =     0.28971962616822;
17156 +          Q_TargetBuy1  =     0.71028037383177;
17157 +          V_TargetBuy0  =     0.29411764705882;
17158 +          V_TargetBuy1  =     0.70588235294117;
17159 +          I_TargetBuy  = '1' ;
17160 +          U_TargetBuy  =                    1;
17161 +          END;
17162 +        ELSE DO;
17163 +          _NODE_  =                   49;
17164 +          _LEAF_  =                   13;
17165 +          P_TargetBuy0  =     0.54054054054054;
17166 +          P_TargetBuy1  =     0.45945945945945;
17167 +          Q_TargetBuy0  =     0.54054054054054;
17168 +          Q_TargetBuy1  =     0.45945945945945;
17169 +          V_TargetBuy0  =     0.77142857142857;
17170 +          V_TargetBuy1  =     0.22857142857142;
17171 +          I_TargetBuy  = '0' ;
17172 +          U_TargetBuy  =                    0;
17173 +          END;
17174 +        END;
17175 +      END;
17176 +    ELSE DO;
17177 +      _NODE_  =                   14;
17178 +      _LEAF_  =                   11;
17179 +      P_TargetBuy0  =     0.63975155279503;
17180 +      P_TargetBuy1  =     0.36024844720496;
17181 +      Q_TargetBuy0  =     0.63975155279503;
17182 +      Q_TargetBuy1  =     0.36024844720496;
17183 +      V_TargetBuy0  =     0.58256880733944;
17184 +      V_TargetBuy1  =     0.41743119266055;
17185 +      I_TargetBuy  = '0' ;
17186 +      U_TargetBuy  =                    0;
17187 +      END;
17188 +    END;
17189 +  ELSE DO;
17190 +    _NODE_  =                    6;
17191 +    _LEAF_  =                   10;
17192 +    P_TargetBuy0  =     0.87232532197545;
17193 +    P_TargetBuy1  =     0.12767467802454;
17194 +    Q_TargetBuy0  =     0.87232532197545;
17195 +    Q_TargetBuy1  =     0.12767467802454;
17196 +    V_TargetBuy0  =       0.872368670586;
17197 +    V_TargetBuy1  =     0.12763132941399;
17198 +    I_TargetBuy  = '0' ;
17199 +    U_TargetBuy  =                    0;
17200 +    END;
17201 +  END;
17202 +
17203 +*****  RESIDUALS R_ *************;
17204 +IF  F_TargetBuy  NE '0'
17205 +AND F_TargetBuy  NE '1'  THEN DO;
17206 +        R_TargetBuy0  = .;
17207 +        R_TargetBuy1  = .;
17208 + END;
17209 + ELSE DO;
17210 +       R_TargetBuy0  =  -P_TargetBuy0 ;
17211 +       R_TargetBuy1  =  -P_TargetBuy1 ;
17212 +       SELECT( F_TargetBuy  );
17213 +          WHEN( '0'  ) R_TargetBuy0  = R_TargetBuy0  +1;
17214 +          WHEN( '1'  ) R_TargetBuy1  = R_TargetBuy1  +1;
17215 +       END;
17216 + END;
17217 +
17218 +****************************************************************;
17219 +******          END OF DECISION TREE SCORING CODE         ******;
17220 +****************************************************************;
17221 +
17222 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
17223  run;

NOTE: DATA STEP view saved on file EMWS5.TREE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

17224  quit;
17225  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

17226  filename emflow "\\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\EMFLOWSCORE.sas";
17227  *------------------------------------------------------------*;
17228  * Tree: Scoring VALIDATE data;
17229  *------------------------------------------------------------*;
17230  data EMWS5.Tree_VALIDATE
17231  / view=EMWS5.Tree_VALIDATE
17232  ;
17233  set EMWS5.Part_VALIDATE
17234  ;
17235  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\filer.uncc.edu\home\hkatrag1\Predictive Analytics1\Workspaces\EMWS5\Tree\EMFLOWSCORE.sas.
17236 +****************************************************************;
17237 +******             DECISION TREE SCORING CODE             ******;
17238 +****************************************************************;
17239 +
17240 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
17241 +LENGTH F_TargetBuy  $   12;
17242 +LENGTH I_TargetBuy  $   12;
17243 +LENGTH _WARN_  $    4;
17244 +
17245 +******              LABELS FOR NEW VARIABLES              ******;
17246 +label _NODE_ = 'Node' ;
17247 +label _LEAF_ = 'Leaf' ;
17248 +label P_TargetBuy0 = 'Predicted: TargetBuy=0' ;
17249 +label P_TargetBuy1 = 'Predicted: TargetBuy=1' ;
17250 +label Q_TargetBuy0 = 'Unadjusted P: TargetBuy=0' ;
17251 +label Q_TargetBuy1 = 'Unadjusted P: TargetBuy=1' ;
17252 +label V_TargetBuy0 = 'Validated: TargetBuy=0' ;
17253 +label V_TargetBuy1 = 'Validated: TargetBuy=1' ;
17254 +label R_TargetBuy0 = 'Residual: TargetBuy=0' ;
17255 +label R_TargetBuy1 = 'Residual: TargetBuy=1' ;
17256 +label F_TargetBuy = 'From: TargetBuy' ;
17257 +label I_TargetBuy = 'Into: TargetBuy' ;
17258 +label U_TargetBuy = 'Unnormalized Into: TargetBuy' ;
17259 +label _WARN_ = 'Warnings' ;
17260 +
17261 +
17262 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
17263 +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
17264 +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
17265 +LENGTH _ARBFMT_1 $      1; DROP _ARBFMT_1;
17266 +_ARBFMT_1 = ' '; /* Initialize to avoid warning. */
17267 +
17268 +
17269 +_ARBFMT_12 = PUT( TargetBuy , BEST12.);
17270 + %DMNORMCP( _ARBFMT_12, F_TargetBuy );
17271 +
17272 +******             ASSIGN OBSERVATION TO NODE             ******;
17273 +IF  NOT MISSING(DemAge ) AND
17274 +  DemAge  <                 44.5 THEN DO;
17275 +  IF  NOT MISSING(DemAffl ) AND
17276 +    DemAffl  <                  9.5 THEN DO;
17277 +    _ARBFMT_1 = PUT( DemGender , $1.);
17278 +     %DMNORMIP( _ARBFMT_1);
17279 +    IF _ARBFMT_1 IN ('F' ) THEN DO;
17280 +      IF  NOT MISSING(DemAffl ) AND
17281 +        DemAffl  <                  6.5 THEN DO;
17282 +        _NODE_  =                   18;
17283 +        _LEAF_  =                    2;
17284 +        P_TargetBuy0  =      0.6383495145631;
17285 +        P_TargetBuy1  =     0.36165048543689;
17286 +        Q_TargetBuy0  =      0.6383495145631;
17287 +        Q_TargetBuy1  =     0.36165048543689;
17288 +        V_TargetBuy0  =     0.60089686098654;
17289 +        V_TargetBuy1  =     0.39910313901345;
17290 +        I_TargetBuy  = '0' ;
17291 +        U_TargetBuy  =                    0;
17292 +        END;
17293 +      ELSE DO;
17294 +        IF  NOT MISSING(DemAge ) AND
17295 +                          39.5 <= DemAge  THEN DO;
17296 +          _NODE_  =                   35;
17297 +          _LEAF_  =                    4;
17298 +          P_TargetBuy0  =     0.56326530612244;
17299 +          P_TargetBuy1  =     0.43673469387755;
17300 +          Q_TargetBuy0  =     0.56326530612244;
17301 +          Q_TargetBuy1  =     0.43673469387755;
17302 +          V_TargetBuy0  =     0.58273381294964;
17303 +          V_TargetBuy1  =     0.41726618705035;
17304 +          I_TargetBuy  = '0' ;
17305 +          U_TargetBuy  =                    0;
17306 +          END;
17307 +        ELSE DO;
17308 +          _NODE_  =                   34;
17309 +          _LEAF_  =                    3;
17310 +          P_TargetBuy0  =     0.39285714285714;
17311 +          P_TargetBuy1  =     0.60714285714285;
17312 +          Q_TargetBuy0  =     0.39285714285714;
17313 +          Q_TargetBuy1  =     0.60714285714285;
17314 +          V_TargetBuy0  =     0.36507936507936;
17315 +          V_TargetBuy1  =     0.63492063492063;
17316 +          I_TargetBuy  = '1' ;
17317 +          U_TargetBuy  =                    1;
17318 +          END;
17319 +        END;
17320 +      END;
17321 +    ELSE DO;
17322 +      _NODE_  =                    8;
17323 +      _LEAF_  =                    1;
17324 +      P_TargetBuy0  =     0.77363515312916;
17325 +      P_TargetBuy1  =     0.22636484687083;
17326 +      Q_TargetBuy0  =     0.77363515312916;
17327 +      Q_TargetBuy1  =     0.22636484687083;
17328 +      V_TargetBuy0  =     0.79864253393665;
17329 +      V_TargetBuy1  =     0.20135746606334;
17330 +      I_TargetBuy  = '0' ;
17331 +      U_TargetBuy  =                    0;
17332 +      END;
17333 +    END;
17334 +  ELSE DO;
17335 +    _ARBFMT_1 = PUT( DemGender , $1.);
17336 +     %DMNORMIP( _ARBFMT_1);
17337 +    IF _ARBFMT_1 IN ('F' ) THEN DO;
17338 +      _NODE_  =                   11;
17339 +      _LEAF_  =                    9;
17340 +      P_TargetBuy0  =     0.21991341991341;
17341 +      P_TargetBuy1  =     0.78008658008658;
17342 +      Q_TargetBuy0  =     0.21991341991341;
17343 +      Q_TargetBuy1  =     0.78008658008658;
17344 +      V_TargetBuy0  =     0.20677966101694;
17345 +      V_TargetBuy1  =     0.79322033898305;
17346 +      I_TargetBuy  = '1' ;
17347 +      U_TargetBuy  =                    1;
17348 +      END;
17349 +    ELSE DO;
17350 +      IF  NOT MISSING(DemAffl ) AND
17351 +                        14.5 <= DemAffl  THEN DO;
17352 +        _NODE_  =                   21;
17353 +        _LEAF_  =                    8;
17354 +        P_TargetBuy0  =     0.14666666666666;
17355 +        P_TargetBuy1  =     0.85333333333333;
17356 +        Q_TargetBuy0  =     0.14666666666666;
17357 +        Q_TargetBuy1  =     0.85333333333333;
17358 +        V_TargetBuy0  =     0.15094339622641;
17359 +        V_TargetBuy1  =     0.84905660377358;
17360 +        I_TargetBuy  = '1' ;
17361 +        U_TargetBuy  =                    1;
17362 +        END;
17363 +      ELSE DO;
17364 +        IF  NOT MISSING(DemAffl ) AND
17365 +                          11.5 <= DemAffl  THEN DO;
17366 +          _ARBFMT_1 = PUT( DemGender , $1.);
17367 +           %DMNORMIP( _ARBFMT_1);
17368 +          IF _ARBFMT_1 IN ('M' ) THEN DO;
17369 +            _NODE_  =                   51;
17370 +            _LEAF_  =                    7;
17371 +            P_TargetBuy0  =     0.36521739130434;
17372 +            P_TargetBuy1  =     0.63478260869565;
17373 +            Q_TargetBuy0  =     0.36521739130434;
17374 +            Q_TargetBuy1  =     0.63478260869565;
17375 +            V_TargetBuy0  =                 0.45;
17376 +            V_TargetBuy1  =                 0.55;
17377 +            I_TargetBuy  = '1' ;
17378 +            U_TargetBuy  =                    1;
17379 +            END;
17380 +          ELSE DO;
17381 +            _NODE_  =                   50;
17382 +            _LEAF_  =                    6;
17383 +            P_TargetBuy0  =      0.6590909090909;
17384 +            P_TargetBuy1  =     0.34090909090909;
17385 +            Q_TargetBuy0  =      0.6590909090909;
17386 +            Q_TargetBuy1  =     0.34090909090909;
17387 +            V_TargetBuy0  =     0.72222222222222;
17388 +            V_TargetBuy1  =     0.27777777777777;
17389 +            I_TargetBuy  = '0' ;
17390 +            U_TargetBuy  =                    0;
17391 +            END;
17392 +          END;
17393 +        ELSE DO;
17394 +          _NODE_  =                   36;
17395 +          _LEAF_  =                    5;
17396 +          P_TargetBuy0  =      0.6156462585034;
17397 +          P_TargetBuy1  =     0.38435374149659;
17398 +          Q_TargetBuy0  =      0.6156462585034;
17399 +          Q_TargetBuy1  =     0.38435374149659;
17400 +          V_TargetBuy0  =      0.6936416184971;
17401 +          V_TargetBuy1  =     0.30635838150289;
17402 +          I_TargetBuy  = '0' ;
17403 +          U_TargetBuy  =                    0;
17404 +          END;
17405 +        END;
17406 +      END;
17407 +    END;
17408 +  END;
17409 +ELSE DO;
17410 +  IF  NOT MISSING(DemAffl ) AND
17411 +                    12.5 <= DemAffl  THEN DO;
17412 +    IF  NOT MISSING(DemAffl ) AND
17413 +                      15.5 <= DemAffl  THEN DO;
17414 +      IF  NOT MISSING(DemAffl ) AND
17415 +                        18.5 <= DemAffl  THEN DO;
17416 +        _NODE_  =                   31;
17417 +        _LEAF_  =                   14;
17418 +        P_TargetBuy0  =     0.06779661016949;
17419 +        P_TargetBuy1  =      0.9322033898305;
17420 +        Q_TargetBuy0  =     0.06779661016949;
17421 +        Q_TargetBuy1  =      0.9322033898305;
17422 +        V_TargetBuy0  =     0.15151515151515;
17423 +        V_TargetBuy1  =     0.84848484848484;
17424 +        I_TargetBuy  = '1' ;
17425 +        U_TargetBuy  =                    1;
17426 +        END;
17427 +      ELSE DO;
17428 +        _ARBFMT_1 = PUT( DemGender , $1.);
17429 +         %DMNORMIP( _ARBFMT_1);
17430 +        IF _ARBFMT_1 IN ('F' ) THEN DO;
17431 +          _NODE_  =                   48;
17432 +          _LEAF_  =                   12;
17433 +          P_TargetBuy0  =     0.28971962616822;
17434 +          P_TargetBuy1  =     0.71028037383177;
17435 +          Q_TargetBuy0  =     0.28971962616822;
17436 +          Q_TargetBuy1  =     0.71028037383177;
17437 +          V_TargetBuy0  =     0.29411764705882;
17438 +          V_TargetBuy1  =     0.70588235294117;
17439 +          I_TargetBuy  = '1' ;
17440 +          U_TargetBuy  =                    1;
17441 +          END;
17442 +        ELSE DO;
17443 +          _NODE_  =                   49;
17444 +          _LEAF_  =                   13;
17445 +          P_TargetBuy0  =     0.54054054054054;
17446 +          P_TargetBuy1  =     0.45945945945945;
17447 +          Q_TargetBuy0  =     0.54054054054054;
17448 +          Q_TargetBuy1  =     0.45945945945945;
17449 +          V_TargetBuy0  =     0.77142857142857;
17450 +          V_TargetBuy1  =     0.22857142857142;
17451 +          I_TargetBuy  = '0' ;
17452 +          U_TargetBuy  =                    0;
17453 +          END;
17454 +        END;
17455 +      END;
17456 +    ELSE DO;
17457 +      _NODE_  =                   14;
17458 +      _LEAF_  =                   11;
17459 +      P_TargetBuy0  =     0.63975155279503;
17460 +      P_TargetBuy1  =     0.36024844720496;
17461 +      Q_TargetBuy0  =     0.63975155279503;
17462 +      Q_TargetBuy1  =     0.36024844720496;
17463 +      V_TargetBuy0  =     0.58256880733944;
17464 +      V_TargetBuy1  =     0.41743119266055;
17465 +      I_TargetBuy  = '0' ;
17466 +      U_TargetBuy  =                    0;
17467 +      END;
17468 +    END;
17469 +  ELSE DO;
17470 +    _NODE_  =                    6;
17471 +    _LEAF_  =                   10;
17472 +    P_TargetBuy0  =     0.87232532197545;
17473 +    P_TargetBuy1  =     0.12767467802454;
17474 +    Q_TargetBuy0  =     0.87232532197545;
17475 +    Q_TargetBuy1  =     0.12767467802454;
17476 +    V_TargetBuy0  =       0.872368670586;
17477 +    V_TargetBuy1  =     0.12763132941399;
17478 +    I_TargetBuy  = '0' ;
17479 +    U_TargetBuy  =                    0;
17480 +    END;
17481 +  END;
17482 +
17483 +*****  RESIDUALS R_ *************;
17484 +IF  F_TargetBuy  NE '0'
17485 +AND F_TargetBuy  NE '1'  THEN DO;
17486 +        R_TargetBuy0  = .;
17487 +        R_TargetBuy1  = .;
17488 + END;
17489 + ELSE DO;
17490 +       R_TargetBuy0  =  -P_TargetBuy0 ;
17491 +       R_TargetBuy1  =  -P_TargetBuy1 ;
17492 +       SELECT( F_TargetBuy  );
17493 +          WHEN( '0'  ) R_TargetBuy0  = R_TargetBuy0  +1;
17494 +          WHEN( '1'  ) R_TargetBuy1  = R_TargetBuy1  +1;
17495 +       END;
17496 + END;
17497 +
17498 +****************************************************************;
17499 +******          END OF DECISION TREE SCORING CODE         ******;
17500 +****************************************************************;
17501 +
17502 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
17503  run;

NOTE: DATA STEP view saved on file EMWS5.TREE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

17504  quit;
17505  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

NOTE: View EMWS5.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
17507  proc sort data=WORK.EM_USER_REPORT;
17508  by ID VIEW;
17509  run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17510  *------------------------------------------------------------*;
17511  * Tree: Computing metadata for TRAIN data;
17512  *------------------------------------------------------------*;

NOTE: View EMWS5.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
17896  data WORK.MODELTEMP_INFO;
17897  set EMWS5.Tree_EMINFO;
17898  where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
17899  run;

NOTE: There were 0 observations read from the data set EMWS5.TREE_EMINFO.
      WHERE (DATA='Tree') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

17900  data EMWS5.Tree_EMINFO;
17901  length TARGET KEY $32 DATA $43;
17902  input TARGET KEY DATA $;
17903  cards;

NOTE: The data set EMWS5.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

17907  run;
17908  data EMWS5.Tree_EMINFO;
17909  set EMWS5.Tree_EMINFO WORK.MODELTEMP_INFO;
17910  run;

NOTE: There were 3 observations read from the data set EMWS5.TREE_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS5.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

17911  proc sort data = EMWS5.Tree_EMINFO NOTHREADS;
17912  by TARGET KEY;
17913  run;

NOTE: There were 3 observations read from the data set EMWS5.TREE_EMINFO.
NOTE: The data set EMWS5.TREE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

17914  proc sort data = EMWS5.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
17915  by TARGET KEY;
17916  run;

NOTE: There were 3 observations read from the data set EMWS5.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17917  proc sort data = EMWS5.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
17918  by TARGET KEY;
17919  run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS5.TREE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17920  data EMWS5.Tree_EMINFO;
17921  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
17922  by TARGET KEY;
17923  run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS5.TREE_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

17924  proc datasets lib=work nolist;
17925  delete TEMP_INFO SORTEDEMINFO;
17926  run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
17927  quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS5.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS5.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
